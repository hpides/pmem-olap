predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var -6..36: INT____00040 :: is_defined_var :: var_is_introduced;
var 1..36: INT____00041 :: is_defined_var :: var_is_introduced;
var -6..36: INT____00046 :: is_defined_var :: var_is_introduced;
var 1..36: INT____00047 :: is_defined_var :: var_is_introduced;
var -6..36: INT____00052 :: is_defined_var :: var_is_introduced;
var 1..36: INT____00053 :: is_defined_var :: var_is_introduced;
var -6..36: INT____00058 :: is_defined_var :: var_is_introduced;
var 1..36: INT____00059 :: is_defined_var :: var_is_introduced;
var -6..36: INT____00064 :: is_defined_var :: var_is_introduced;
var 1..36: INT____00065 :: is_defined_var :: var_is_introduced;
array [1..6] of var set of 1..6: g :: output_array([1..6]);
array [1..36] of var bool: m :: output_array([1..6, 1..6]);
array [1..6] of var 0..6: paths____00037;
constraint array_bool_and([BOOL____00042, BOOL____00039, BOOL____00039, BOOL____00038, BOOL____00038], BOOL____00044) :: defines_var(BOOL____00044);
constraint array_bool_and([BOOL____00048, BOOL____00038, BOOL____00038, BOOL____00045, BOOL____00045], BOOL____00050) :: defines_var(BOOL____00050);
constraint array_bool_and([BOOL____00054, BOOL____00045, BOOL____00045, BOOL____00051, BOOL____00051], BOOL____00056) :: defines_var(BOOL____00056);
constraint array_bool_and([BOOL____00060, BOOL____00051, BOOL____00051, BOOL____00057, BOOL____00057], BOOL____00062) :: defines_var(BOOL____00062);
constraint array_bool_and([BOOL____00066, BOOL____00057, BOOL____00057, BOOL____00063, BOOL____00063], BOOL____00068) :: defines_var(BOOL____00068);
constraint array_bool_and([BOOL____00067, BOOL____00077, BOOL____00090, BOOL____00091, BOOL____00088, BOOL____00085, BOOL____00082, BOOL____00081], BOOL____00098) :: defines_var(BOOL____00098);
constraint array_bool_and([BOOL____00074, BOOL____00080, BOOL____00067, BOOL____00061, BOOL____00055, BOOL____00049, BOOL____00082, BOOL____00081], BOOL____00095) :: defines_var(BOOL____00095);
constraint array_bool_and([BOOL____00075, BOOL____00084, BOOL____00067, BOOL____00061, BOOL____00055, BOOL____00085, BOOL____00082, BOOL____00081], BOOL____00096) :: defines_var(BOOL____00096);
constraint array_bool_and([BOOL____00076, BOOL____00087, BOOL____00067, BOOL____00061, BOOL____00088, BOOL____00085, BOOL____00082, BOOL____00081], BOOL____00097) :: defines_var(BOOL____00097);
constraint array_bool_and([BOOL____00078, BOOL____00093, BOOL____00094, BOOL____00091, BOOL____00088, BOOL____00085, BOOL____00082, BOOL____00081], BOOL____00099) :: defines_var(BOOL____00099);
constraint array_bool_or([BOOL____00043, BOOL____00044], true);
constraint array_bool_or([BOOL____00049, BOOL____00050], true);
constraint array_bool_or([BOOL____00055, BOOL____00056], true);
constraint array_bool_or([BOOL____00061, BOOL____00062], true);
constraint array_bool_or([BOOL____00067, BOOL____00068], true);
constraint array_bool_or([BOOL____00077, BOOL____00076, BOOL____00075, BOOL____00074], BOOL____00092) :: defines_var(BOOL____00092);
constraint array_bool_or([BOOL____00078, BOOL____00076, BOOL____00075, BOOL____00074], BOOL____00089) :: defines_var(BOOL____00089);
constraint array_bool_or([BOOL____00078, BOOL____00077, BOOL____00075, BOOL____00074], BOOL____00086) :: defines_var(BOOL____00086);
constraint array_bool_or([BOOL____00078, BOOL____00077, BOOL____00076, BOOL____00074], BOOL____00083) :: defines_var(BOOL____00083);
constraint array_bool_or([BOOL____00078, BOOL____00077, BOOL____00076, BOOL____00075], BOOL____00079) :: defines_var(BOOL____00079);
constraint array_bool_or([BOOL____00099, BOOL____00098, BOOL____00097, BOOL____00095, BOOL____00096], true);
constraint array_var_bool_element(INT____00041, m, BOOL____00042) :: defines_var(BOOL____00042);
constraint array_var_bool_element(INT____00047, m, BOOL____00048) :: defines_var(BOOL____00048);
constraint array_var_bool_element(INT____00053, m, BOOL____00054) :: defines_var(BOOL____00054);
constraint array_var_bool_element(INT____00059, m, BOOL____00060) :: defines_var(BOOL____00060);
constraint array_var_bool_element(INT____00065, m, BOOL____00066) :: defines_var(BOOL____00066);
constraint bool_eq(m[2], BOOL____00001);
constraint bool_eq(m[3], BOOL____00003);
constraint bool_eq(m[4], BOOL____00005);
constraint bool_eq(m[5], BOOL____00007);
constraint bool_eq(m[6], BOOL____00009);
constraint bool_eq(m[7], BOOL____00001);
constraint bool_eq(m[9], BOOL____00011);
constraint bool_eq(m[10], BOOL____00013);
constraint bool_eq(m[11], BOOL____00015);
constraint bool_eq(m[12], BOOL____00017);
constraint bool_eq(m[13], BOOL____00003);
constraint bool_eq(m[14], BOOL____00011);
constraint bool_eq(m[16], BOOL____00019);
constraint bool_eq(m[17], BOOL____00021);
constraint bool_eq(m[18], BOOL____00023);
constraint bool_eq(m[19], BOOL____00005);
constraint bool_eq(m[20], BOOL____00013);
constraint bool_eq(m[21], BOOL____00019);
constraint bool_eq(m[23], BOOL____00025);
constraint bool_eq(m[24], BOOL____00027);
constraint bool_eq(m[25], BOOL____00007);
constraint bool_eq(m[26], BOOL____00015);
constraint bool_eq(m[27], BOOL____00021);
constraint bool_eq(m[28], BOOL____00025);
constraint bool_eq(m[30], BOOL____00029);
constraint bool_eq(m[31], BOOL____00009);
constraint bool_eq(m[32], BOOL____00017);
constraint bool_eq(m[33], BOOL____00023);
constraint bool_eq(m[34], BOOL____00027);
constraint bool_eq(m[35], BOOL____00029);
constraint bool_eq_reif(BOOL____00079, false, BOOL____00080) :: defines_var(BOOL____00080);
constraint bool_eq_reif(BOOL____00083, false, BOOL____00084) :: defines_var(BOOL____00084);
constraint bool_eq_reif(BOOL____00086, false, BOOL____00087) :: defines_var(BOOL____00087);
constraint bool_eq_reif(BOOL____00089, false, BOOL____00090) :: defines_var(BOOL____00090);
constraint bool_eq_reif(BOOL____00092, false, BOOL____00093) :: defines_var(BOOL____00093);
constraint int_eq(paths____00037[1], 5);
constraint int_eq_reif(INT____00040, INT____00041, BOOL____00039);
constraint int_eq_reif(INT____00046, INT____00047, BOOL____00038);
constraint int_eq_reif(INT____00052, INT____00053, BOOL____00045);
constraint int_eq_reif(INT____00058, INT____00059, BOOL____00051);
constraint int_eq_reif(INT____00064, INT____00065, BOOL____00057);
constraint int_eq_reif(paths____00037[2], 0, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(paths____00037[2], 6, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(paths____00037[3], 0, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(paths____00037[3], 6, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(paths____00037[4], 0, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(paths____00037[4], 6, BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(paths____00037[5], 0, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(paths____00037[5], 6, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(paths____00037[6], 0, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(paths____00037[6], 6, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_le_reif(1, paths____00037[1], BOOL____00039) :: defines_var(BOOL____00039);
constraint int_le_reif(1, paths____00037[2], BOOL____00038) :: defines_var(BOOL____00038);
constraint int_le_reif(1, paths____00037[3], BOOL____00045) :: defines_var(BOOL____00045);
constraint int_le_reif(1, paths____00037[4], BOOL____00051) :: defines_var(BOOL____00051);
constraint int_le_reif(1, paths____00037[5], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_le_reif(1, paths____00037[6], BOOL____00063) :: defines_var(BOOL____00063);
constraint int_lin_eq([-1, 6, 1], [INT____00040, paths____00037[1], paths____00037[2]], 6) :: defines_var(INT____00040) :: domain;
constraint int_lin_eq([-1, 6, 1], [INT____00046, paths____00037[2], paths____00037[3]], 6) :: defines_var(INT____00046) :: domain;
constraint int_lin_eq([-1, 6, 1], [INT____00052, paths____00037[3], paths____00037[4]], 6) :: defines_var(INT____00052) :: domain;
constraint int_lin_eq([-1, 6, 1], [INT____00058, paths____00037[4], paths____00037[5]], 6) :: defines_var(INT____00058) :: domain;
constraint int_lin_eq([-1, 6, 1], [INT____00064, paths____00037[5], paths____00037[6]], 6) :: defines_var(INT____00064) :: domain;
constraint int_lt_reif(0, paths____00037[1], BOOL____00081) :: defines_var(BOOL____00081);
constraint int_lt_reif(0, paths____00037[2], BOOL____00082) :: defines_var(BOOL____00082);
constraint int_lt_reif(0, paths____00037[3], BOOL____00085) :: defines_var(BOOL____00085);
constraint int_lt_reif(0, paths____00037[4], BOOL____00088) :: defines_var(BOOL____00088);
constraint int_lt_reif(0, paths____00037[5], BOOL____00091) :: defines_var(BOOL____00091);
constraint int_lt_reif(0, paths____00037[6], BOOL____00094) :: defines_var(BOOL____00094);
constraint set_eq({1, 3}, g[2]);
constraint set_eq(2..2, g[1]);
constraint set_eq({2, 4}, g[3]);
constraint set_eq({3, 5}, g[4]);
constraint set_eq({4, 6}, g[5]);
constraint set_eq(5..5, g[6]);
constraint set_in_reif(1, g[1], m[1]);
constraint set_in_reif(1, g[2], BOOL____00001);
constraint set_in_reif(1, g[3], BOOL____00003);
constraint set_in_reif(1, g[4], BOOL____00005);
constraint set_in_reif(1, g[5], BOOL____00007);
constraint set_in_reif(1, g[6], BOOL____00009);
constraint set_in_reif(2, g[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint set_in_reif(2, g[2], m[8]);
constraint set_in_reif(2, g[3], BOOL____00011);
constraint set_in_reif(2, g[4], BOOL____00013);
constraint set_in_reif(2, g[5], BOOL____00015);
constraint set_in_reif(2, g[6], BOOL____00017);
constraint set_in_reif(3, g[1], BOOL____00003) :: defines_var(BOOL____00003);
constraint set_in_reif(3, g[2], BOOL____00011) :: defines_var(BOOL____00011);
constraint set_in_reif(3, g[3], m[15]);
constraint set_in_reif(3, g[4], BOOL____00019);
constraint set_in_reif(3, g[5], BOOL____00021);
constraint set_in_reif(3, g[6], BOOL____00023);
constraint set_in_reif(4, g[1], BOOL____00005) :: defines_var(BOOL____00005);
constraint set_in_reif(4, g[2], BOOL____00013) :: defines_var(BOOL____00013);
constraint set_in_reif(4, g[3], BOOL____00019) :: defines_var(BOOL____00019);
constraint set_in_reif(4, g[4], m[22]);
constraint set_in_reif(4, g[5], BOOL____00025);
constraint set_in_reif(4, g[6], BOOL____00027);
constraint set_in_reif(5, g[1], BOOL____00007) :: defines_var(BOOL____00007);
constraint set_in_reif(5, g[2], BOOL____00015) :: defines_var(BOOL____00015);
constraint set_in_reif(5, g[3], BOOL____00021) :: defines_var(BOOL____00021);
constraint set_in_reif(5, g[4], BOOL____00025) :: defines_var(BOOL____00025);
constraint set_in_reif(5, g[5], m[29]);
constraint set_in_reif(5, g[6], BOOL____00029);
constraint set_in_reif(6, g[1], BOOL____00009) :: defines_var(BOOL____00009);
constraint set_in_reif(6, g[2], BOOL____00017) :: defines_var(BOOL____00017);
constraint set_in_reif(6, g[3], BOOL____00023) :: defines_var(BOOL____00023);
constraint set_in_reif(6, g[4], BOOL____00027) :: defines_var(BOOL____00027);
constraint set_in_reif(6, g[5], BOOL____00029) :: defines_var(BOOL____00029);
constraint set_in_reif(6, g[6], m[36]);
solve satisfy;
