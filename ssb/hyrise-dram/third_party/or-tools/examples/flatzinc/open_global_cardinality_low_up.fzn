array [1..9] of int: values = [3, 1, 3, 5, 0, 1, 6, 1, 2];
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var set of 1..4: s :: output_var = 2..4;
var 1..3: ssum____00001;
var 0..1: ssum____00010;
var 1..2: ssum____00019;
array [1..4] of var 1..8: variables :: output_array([1..4]);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00012, INT____00013) :: defines_var(INT____00013);
constraint bool2int(BOOL____00014, INT____00015) :: defines_var(INT____00015);
constraint bool2int(BOOL____00016, INT____00017) :: defines_var(INT____00017);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint int_eq(variables[1], 3);
constraint int_eq(variables[2], 3);
constraint int_eq(variables[3], 8);
constraint int_eq(variables[4], 6);
constraint int_eq_reif(variables[1], 3, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(variables[1], 5, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(variables[1], 6, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(variables[2], 3, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(variables[2], 5, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(variables[2], 6, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(variables[3], 3, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(variables[3], 5, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(variables[3], 6, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(variables[4], 3, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(variables[4], 5, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(variables[4], 6, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_lin_eq([-1, 1, 1, 1], [ssum____00001, INT____00004, INT____00006, INT____00008], 0);
constraint int_lin_eq([-1, 1, 1, 1], [ssum____00010, INT____00013, INT____00015, INT____00017], 0);
constraint int_lin_eq([-1, 1, 1, 1], [ssum____00019, INT____00022, INT____00024, INT____00026], 0);
solve satisfy;
