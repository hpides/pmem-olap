var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
array [1..12] of var 1..6: arr;
array [1..3] of var 1..6: v1 :: output_array([1..3]);
constraint array_bool_and([BOOL____00003, BOOL____00002, BOOL____00001], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_and([BOOL____00006, BOOL____00005, BOOL____00004], BOOL____00014) :: defines_var(BOOL____00014);
constraint array_bool_and([BOOL____00009, BOOL____00008, BOOL____00007], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_and([BOOL____00012, BOOL____00011, BOOL____00010], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_or([BOOL____00016, BOOL____00015, BOOL____00013, BOOL____00014], true);
constraint int_eq(1, arr[10]);
constraint int_eq(2, arr[2]);
constraint int_eq(2, arr[5]);
constraint int_eq(2, arr[12]);
constraint int_eq(3, arr[3]);
constraint int_eq(3, arr[8]);
constraint int_eq(3, arr[9]);
constraint int_eq(3, arr[11]);
constraint int_eq(5, arr[1]);
constraint int_eq(5, arr[4]);
constraint int_eq(5, arr[7]);
constraint int_eq(6, arr[6]);
constraint int_eq(v1[1], 5);
constraint int_eq(v1[2], 3);
constraint int_eq(v1[3], 3);
constraint int_eq_reif(arr[1], v1[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(arr[2], v1[2], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(arr[3], v1[3], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(arr[4], v1[1], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(arr[5], v1[2], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(arr[6], v1[3], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(arr[7], v1[1], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(arr[8], v1[2], BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(arr[9], v1[3], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(arr[10], v1[1], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(arr[11], v1[2], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(arr[12], v1[3], BOOL____00012) :: defines_var(BOOL____00012);
solve satisfy;
