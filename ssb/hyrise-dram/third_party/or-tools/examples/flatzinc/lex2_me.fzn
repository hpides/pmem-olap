predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
array [1..4] of var bool: b____00001;
array [1..3] of var bool: b____00014;
array [1..3] of var bool: b____00023;
array [1..6] of var 1..4: x :: output_array([1..2, 1..3]);
constraint array_bool_and([BOOL____00004, BOOL____00002], b____00001[1]);
constraint array_bool_and([BOOL____00008, BOOL____00006], b____00001[2]);
constraint array_bool_and([BOOL____00012, BOOL____00010], b____00001[3]);
constraint array_bool_and([BOOL____00017, BOOL____00015], b____00014[1]);
constraint array_bool_and([BOOL____00021, BOOL____00019], b____00014[2]);
constraint array_bool_and([BOOL____00026, BOOL____00024], b____00023[1]);
constraint array_bool_and([BOOL____00030, BOOL____00028], b____00023[2]);
constraint array_bool_or([BOOL____00003, b____00001[2]], BOOL____00004) :: defines_var(BOOL____00004);
constraint array_bool_or([BOOL____00007, b____00001[3]], BOOL____00008) :: defines_var(BOOL____00008);
constraint array_bool_or([BOOL____00011, b____00001[4]], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_or([BOOL____00016, b____00014[2]], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_or([BOOL____00020, b____00014[3]], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_or([BOOL____00025, b____00023[2]], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_or([BOOL____00029, b____00023[3]], BOOL____00030) :: defines_var(BOOL____00030);
constraint bool_eq(b____00001[1], true);
constraint bool_eq(b____00001[4], false);
constraint bool_eq(b____00014[1], true);
constraint bool_eq(b____00014[3], false);
constraint bool_eq(b____00023[1], true);
constraint bool_eq(b____00023[3], false);
constraint int_eq(1, x[6]);
constraint int_eq(2, x[1]);
constraint int_eq(2, x[2]);
constraint int_eq(2, x[4]);
constraint int_eq(3, x[3]);
constraint int_eq(3, x[5]);
constraint int_le_reif(x[1], x[2], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_le_reif(x[1], x[4], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_le_reif(x[2], x[3], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_le_reif(x[2], x[5], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_le_reif(x[3], x[6], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_le_reif(x[4], x[5], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_le_reif(x[5], x[6], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_lt_reif(x[1], x[2], BOOL____00016) :: defines_var(BOOL____00016);
constraint int_lt_reif(x[1], x[4], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lt_reif(x[2], x[3], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_lt_reif(x[2], x[5], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_lt_reif(x[3], x[6], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_lt_reif(x[4], x[5], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_lt_reif(x[5], x[6], BOOL____00029) :: defines_var(BOOL____00029);
solve satisfy;
