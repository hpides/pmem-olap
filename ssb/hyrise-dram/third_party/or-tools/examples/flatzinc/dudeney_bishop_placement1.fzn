var 0..64: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..64] of var 0..1: a :: output_array([1..8, 1..8]);
array [1..64] of var 0..1: check :: output_array([1..8, 1..8]);
var 0..64: sumx :: output_var = INT____00001;
array [1..64] of var 0..1: x :: output_array([1..8, 1..8]);
constraint int_eq(check[1], 1);
constraint int_eq(check[2], 1);
constraint int_eq(check[3], 1);
constraint int_eq(check[4], 1);
constraint int_eq(check[5], 1);
constraint int_eq(check[6], 1);
constraint int_eq(check[7], 1);
constraint int_eq(check[8], 1);
constraint int_eq(check[9], 1);
constraint int_eq(check[10], 1);
constraint int_eq(check[11], 1);
constraint int_eq(check[12], 1);
constraint int_eq(check[13], 1);
constraint int_eq(check[14], 1);
constraint int_eq(check[15], 1);
constraint int_eq(check[16], 1);
constraint int_eq(check[17], 1);
constraint int_eq(check[18], 1);
constraint int_eq(check[19], 1);
constraint int_eq(check[20], 1);
constraint int_eq(check[21], 1);
constraint int_eq(check[22], 1);
constraint int_eq(check[23], 1);
constraint int_eq(check[24], 1);
constraint int_eq(check[25], 1);
constraint int_eq(check[26], 1);
constraint int_eq(check[27], 1);
constraint int_eq(check[28], 1);
constraint int_eq(check[29], 1);
constraint int_eq(check[30], 1);
constraint int_eq(check[31], 1);
constraint int_eq(check[32], 1);
constraint int_eq(check[33], 1);
constraint int_eq(check[34], 1);
constraint int_eq(check[35], 1);
constraint int_eq(check[36], 1);
constraint int_eq(check[37], 1);
constraint int_eq(check[38], 1);
constraint int_eq(check[39], 1);
constraint int_eq(check[40], 1);
constraint int_eq(check[41], 1);
constraint int_eq(check[42], 1);
constraint int_eq(check[43], 1);
constraint int_eq(check[44], 1);
constraint int_eq(check[45], 1);
constraint int_eq(check[46], 1);
constraint int_eq(check[47], 1);
constraint int_eq(check[48], 1);
constraint int_eq(check[49], 1);
constraint int_eq(check[50], 1);
constraint int_eq(check[51], 1);
constraint int_eq(check[52], 1);
constraint int_eq(check[53], 1);
constraint int_eq(check[54], 1);
constraint int_eq(check[55], 1);
constraint int_eq(check[56], 1);
constraint int_eq(check[57], 1);
constraint int_eq(check[58], 1);
constraint int_eq(check[59], 1);
constraint int_eq(check[60], 1);
constraint int_eq(check[61], 1);
constraint int_eq(check[62], 1);
constraint int_eq(check[63], 1);
constraint int_eq(check[64], 1);
constraint int_lin_eq([-1, 1, -1], [a[1], check[1], x[1]], 0);
constraint int_lin_eq([-1, 1, -1], [a[2], check[2], x[2]], 0);
constraint int_lin_eq([-1, 1, -1], [a[3], check[3], x[3]], 0);
constraint int_lin_eq([-1, 1, -1], [a[4], check[4], x[4]], 0);
constraint int_lin_eq([-1, 1, -1], [a[5], check[5], x[5]], 0);
constraint int_lin_eq([-1, 1, -1], [a[6], check[6], x[6]], 0);
constraint int_lin_eq([-1, 1, -1], [a[7], check[7], x[7]], 0);
constraint int_lin_eq([-1, 1, -1], [a[8], check[8], x[8]], 0);
constraint int_lin_eq([-1, 1, -1], [a[9], check[9], x[9]], 0);
constraint int_lin_eq([-1, 1, -1], [a[10], check[10], x[10]], 0);
constraint int_lin_eq([-1, 1, -1], [a[11], check[11], x[11]], 0);
constraint int_lin_eq([-1, 1, -1], [a[12], check[12], x[12]], 0);
constraint int_lin_eq([-1, 1, -1], [a[13], check[13], x[13]], 0);
constraint int_lin_eq([-1, 1, -1], [a[14], check[14], x[14]], 0);
constraint int_lin_eq([-1, 1, -1], [a[15], check[15], x[15]], 0);
constraint int_lin_eq([-1, 1, -1], [a[16], check[16], x[16]], 0);
constraint int_lin_eq([-1, 1, -1], [a[17], check[17], x[17]], 0);
constraint int_lin_eq([-1, 1, -1], [a[18], check[18], x[18]], 0);
constraint int_lin_eq([-1, 1, -1], [a[19], check[19], x[19]], 0);
constraint int_lin_eq([-1, 1, -1], [a[20], check[20], x[20]], 0);
constraint int_lin_eq([-1, 1, -1], [a[21], check[21], x[21]], 0);
constraint int_lin_eq([-1, 1, -1], [a[22], check[22], x[22]], 0);
constraint int_lin_eq([-1, 1, -1], [a[23], check[23], x[23]], 0);
constraint int_lin_eq([-1, 1, -1], [a[24], check[24], x[24]], 0);
constraint int_lin_eq([-1, 1, -1], [a[25], check[25], x[25]], 0);
constraint int_lin_eq([-1, 1, -1], [a[26], check[26], x[26]], 0);
constraint int_lin_eq([-1, 1, -1], [a[27], check[27], x[27]], 0);
constraint int_lin_eq([-1, 1, -1], [a[28], check[28], x[28]], 0);
constraint int_lin_eq([-1, 1, -1], [a[29], check[29], x[29]], 0);
constraint int_lin_eq([-1, 1, -1], [a[30], check[30], x[30]], 0);
constraint int_lin_eq([-1, 1, -1], [a[31], check[31], x[31]], 0);
constraint int_lin_eq([-1, 1, -1], [a[32], check[32], x[32]], 0);
constraint int_lin_eq([-1, 1, -1], [a[33], check[33], x[33]], 0);
constraint int_lin_eq([-1, 1, -1], [a[34], check[34], x[34]], 0);
constraint int_lin_eq([-1, 1, -1], [a[35], check[35], x[35]], 0);
constraint int_lin_eq([-1, 1, -1], [a[36], check[36], x[36]], 0);
constraint int_lin_eq([-1, 1, -1], [a[37], check[37], x[37]], 0);
constraint int_lin_eq([-1, 1, -1], [a[38], check[38], x[38]], 0);
constraint int_lin_eq([-1, 1, -1], [a[39], check[39], x[39]], 0);
constraint int_lin_eq([-1, 1, -1], [a[40], check[40], x[40]], 0);
constraint int_lin_eq([-1, 1, -1], [a[41], check[41], x[41]], 0);
constraint int_lin_eq([-1, 1, -1], [a[42], check[42], x[42]], 0);
constraint int_lin_eq([-1, 1, -1], [a[43], check[43], x[43]], 0);
constraint int_lin_eq([-1, 1, -1], [a[44], check[44], x[44]], 0);
constraint int_lin_eq([-1, 1, -1], [a[45], check[45], x[45]], 0);
constraint int_lin_eq([-1, 1, -1], [a[46], check[46], x[46]], 0);
constraint int_lin_eq([-1, 1, -1], [a[47], check[47], x[47]], 0);
constraint int_lin_eq([-1, 1, -1], [a[48], check[48], x[48]], 0);
constraint int_lin_eq([-1, 1, -1], [a[49], check[49], x[49]], 0);
constraint int_lin_eq([-1, 1, -1], [a[50], check[50], x[50]], 0);
constraint int_lin_eq([-1, 1, -1], [a[51], check[51], x[51]], 0);
constraint int_lin_eq([-1, 1, -1], [a[52], check[52], x[52]], 0);
constraint int_lin_eq([-1, 1, -1], [a[53], check[53], x[53]], 0);
constraint int_lin_eq([-1, 1, -1], [a[54], check[54], x[54]], 0);
constraint int_lin_eq([-1, 1, -1], [a[55], check[55], x[55]], 0);
constraint int_lin_eq([-1, 1, -1], [a[56], check[56], x[56]], 0);
constraint int_lin_eq([-1, 1, -1], [a[57], check[57], x[57]], 0);
constraint int_lin_eq([-1, 1, -1], [a[58], check[58], x[58]], 0);
constraint int_lin_eq([-1, 1, -1], [a[59], check[59], x[59]], 0);
constraint int_lin_eq([-1, 1, -1], [a[60], check[60], x[60]], 0);
constraint int_lin_eq([-1, 1, -1], [a[61], check[61], x[61]], 0);
constraint int_lin_eq([-1, 1, -1], [a[62], check[62], x[62]], 0);
constraint int_lin_eq([-1, 1, -1], [a[63], check[63], x[63]], 0);
constraint int_lin_eq([-1, 1, -1], [a[64], check[64], x[64]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64]], 0) :: defines_var(INT____00001);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[1], x[10], x[19], x[28], x[37], x[46], x[55], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[2], x[9], x[11], x[20], x[29], x[38], x[47], x[56]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[3], x[10], x[12], x[17], x[21], x[30], x[39], x[48]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[4], x[11], x[13], x[18], x[22], x[25], x[31], x[40]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[5], x[12], x[14], x[19], x[23], x[26], x[32], x[33]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[6], x[13], x[15], x[20], x[24], x[27], x[34], x[41]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[7], x[14], x[16], x[21], x[28], x[35], x[42], x[49]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[8], x[15], x[22], x[29], x[36], x[43], x[50], x[57]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[9], x[2], x[18], x[27], x[36], x[45], x[54], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[16], x[7], x[23], x[30], x[37], x[44], x[51], x[58]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[17], x[3], x[10], x[26], x[35], x[44], x[53], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[24], x[6], x[15], x[31], x[38], x[45], x[52], x[59]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[25], x[4], x[11], x[18], x[34], x[43], x[52], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[32], x[5], x[14], x[23], x[39], x[46], x[53], x[60]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[33], x[5], x[12], x[19], x[26], x[42], x[51], x[60]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[40], x[4], x[13], x[22], x[31], x[47], x[54], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[41], x[6], x[13], x[20], x[27], x[34], x[50], x[59]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[48], x[3], x[12], x[21], x[30], x[39], x[55], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[49], x[7], x[14], x[21], x[28], x[35], x[42], x[58]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[56], x[2], x[11], x[20], x[29], x[38], x[47], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[57], x[8], x[15], x[22], x[29], x[36], x[43], x[50]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[58], x[16], x[23], x[30], x[37], x[44], x[49], x[51]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[59], x[24], x[31], x[38], x[41], x[45], x[50], x[52]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[60], x[32], x[33], x[39], x[42], x[46], x[51], x[53]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[61], x[25], x[34], x[40], x[43], x[47], x[52], x[54]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[62], x[17], x[26], x[35], x[44], x[48], x[53], x[55]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[63], x[9], x[18], x[27], x[36], x[45], x[54], x[56]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1], [a[64], x[1], x[10], x[19], x[28], x[37], x[46], x[55]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[10], x[1], x[3], x[17], x[19], x[28], x[37], x[46], x[55], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[11], x[2], x[4], x[18], x[20], x[25], x[29], x[38], x[47], x[56]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[12], x[3], x[5], x[19], x[21], x[26], x[30], x[33], x[39], x[48]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[13], x[4], x[6], x[20], x[22], x[27], x[31], x[34], x[40], x[41]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[14], x[5], x[7], x[21], x[23], x[28], x[32], x[35], x[42], x[49]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[15], x[6], x[8], x[22], x[24], x[29], x[36], x[43], x[50], x[57]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[18], x[4], x[9], x[11], x[25], x[27], x[36], x[45], x[54], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[23], x[5], x[14], x[16], x[30], x[32], x[37], x[44], x[51], x[58]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[26], x[5], x[12], x[17], x[19], x[33], x[35], x[44], x[53], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[31], x[4], x[13], x[22], x[24], x[38], x[40], x[45], x[52], x[59]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[34], x[6], x[13], x[20], x[25], x[27], x[41], x[43], x[52], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[39], x[3], x[12], x[21], x[30], x[32], x[46], x[48], x[53], x[60]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[42], x[7], x[14], x[21], x[28], x[33], x[35], x[49], x[51], x[60]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[47], x[2], x[11], x[20], x[29], x[38], x[40], x[54], x[56], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[50], x[8], x[15], x[22], x[29], x[36], x[41], x[43], x[57], x[59]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[51], x[16], x[23], x[30], x[33], x[37], x[42], x[44], x[58], x[60]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[52], x[24], x[25], x[31], x[34], x[38], x[43], x[45], x[59], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[53], x[17], x[26], x[32], x[35], x[39], x[44], x[46], x[60], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[54], x[9], x[18], x[27], x[36], x[40], x[45], x[47], x[61], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[55], x[1], x[10], x[19], x[28], x[37], x[46], x[48], x[62], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[19], x[1], x[5], x[10], x[12], x[26], x[28], x[33], x[37], x[46], x[55], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[20], x[2], x[6], x[11], x[13], x[27], x[29], x[34], x[38], x[41], x[47], x[56]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[21], x[3], x[7], x[12], x[14], x[28], x[30], x[35], x[39], x[42], x[48], x[49]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[22], x[4], x[8], x[13], x[15], x[29], x[31], x[36], x[40], x[43], x[50], x[57]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[27], x[6], x[9], x[13], x[18], x[20], x[34], x[36], x[41], x[45], x[54], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[30], x[3], x[12], x[16], x[21], x[23], x[37], x[39], x[44], x[48], x[51], x[58]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[35], x[7], x[14], x[17], x[21], x[26], x[28], x[42], x[44], x[49], x[53], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[38], x[2], x[11], x[20], x[24], x[29], x[31], x[45], x[47], x[52], x[56], x[59]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[43], x[8], x[15], x[22], x[25], x[29], x[34], x[36], x[50], x[52], x[57], x[61]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[44], x[16], x[17], x[23], x[26], x[30], x[35], x[37], x[51], x[53], x[58], x[62]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[45], x[9], x[18], x[24], x[27], x[31], x[36], x[38], x[52], x[54], x[59], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[46], x[1], x[10], x[19], x[28], x[32], x[37], x[39], x[53], x[55], x[60], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[28], x[1], x[7], x[10], x[14], x[19], x[21], x[35], x[37], x[42], x[46], x[49], x[55], x[64]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[29], x[2], x[8], x[11], x[15], x[20], x[22], x[36], x[38], x[43], x[47], x[50], x[56], x[57]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[36], x[8], x[9], x[15], x[18], x[22], x[27], x[29], x[43], x[45], x[50], x[54], x[57], x[63]], 0);
constraint int_lin_le([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [a[37], x[1], x[10], x[16], x[19], x[23], x[28], x[30], x[44], x[46], x[51], x[55], x[58], x[64]], 0);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15], a[16], a[17], a[18], a[19], a[20], a[21], a[22], a[23], a[24], a[25], a[26], a[27], a[28], a[29], a[30], a[31], a[32], a[33], a[34], a[35], a[36], a[37], a[38], a[39], a[40], a[41], a[42], a[43], a[44], a[45], a[46], a[47], a[48], a[49], a[50], a[51], a[52], a[53], a[54], a[55], a[56], a[57], a[58], a[59], a[60], a[61], a[62], a[63], a[64]], first_fail, indomain_min, complete) minimize INT____00001;
