predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var 100..999: num1;
var 100..999: num2;
var 100..999: num3;
array [1..9] of var 0..9: x;
constraint all_different_int(x);
constraint array_bool_or([BOOL____00006, BOOL____00004, BOOL____00005], true);
constraint array_bool_or([BOOL____00010, BOOL____00008, BOOL____00009], true);
constraint int_le(num1, num2);
constraint int_le(num2, num3);
constraint int_lin_eq([1, 1, 1], [num1, num2, num3], 2010);
constraint int_lin_eq([-1, 100, 10, 1], [num1, x[1], x[2], x[3]], 0);
constraint int_lin_eq([-1, 100, 10, 1], [num2, x[4], x[5], x[6]], 0);
constraint int_lin_eq([-1, 100, 10, 1], [num3, x[7], x[8], x[9]], 0);
constraint set_in_reif(num1, {100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961}, BOOL____00004) :: defines_var(BOOL____00004);
constraint set_in_reif(num1, {105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990}, BOOL____00008) :: defines_var(BOOL____00008);
constraint set_in_reif(num2, {100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961}, BOOL____00005) :: defines_var(BOOL____00005);
constraint set_in_reif(num2, {105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990}, BOOL____00009) :: defines_var(BOOL____00009);
constraint set_in_reif(num3, {100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961}, BOOL____00006) :: defines_var(BOOL____00006);
constraint set_in_reif(num3, {105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990}, BOOL____00010) :: defines_var(BOOL____00010);
solve  :: int_search(x, first_fail, indomain, complete) satisfy;
