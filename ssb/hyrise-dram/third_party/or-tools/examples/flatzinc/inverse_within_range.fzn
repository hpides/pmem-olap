predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
array [1..3] of var 1..9: x1 :: output_array([1..3]);
array [1..4] of var 1..9: x2 :: output_array([1..4]);
constraint array_bool_and([BOOL____00002, BOOL____00003], BOOL____00010) :: defines_var(BOOL____00010);
constraint array_bool_and([BOOL____00003, BOOL____00002], BOOL____00044) :: defines_var(BOOL____00044);
constraint array_bool_and([BOOL____00004, BOOL____00005], BOOL____00011) :: defines_var(BOOL____00011);
constraint array_bool_and([BOOL____00005, BOOL____00004], BOOL____00049) :: defines_var(BOOL____00049);
constraint array_bool_and([BOOL____00006, BOOL____00007], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_and([BOOL____00007, BOOL____00006], BOOL____00054) :: defines_var(BOOL____00054);
constraint array_bool_and([BOOL____00008, BOOL____00009], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_and([BOOL____00009, BOOL____00008], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_and([BOOL____00016, BOOL____00017], BOOL____00024) :: defines_var(BOOL____00024);
constraint array_bool_and([BOOL____00017, BOOL____00016], BOOL____00045) :: defines_var(BOOL____00045);
constraint array_bool_and([BOOL____00018, BOOL____00019], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_and([BOOL____00019, BOOL____00018], BOOL____00050) :: defines_var(BOOL____00050);
constraint array_bool_and([BOOL____00020, BOOL____00021], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_and([BOOL____00021, BOOL____00020], BOOL____00055) :: defines_var(BOOL____00055);
constraint array_bool_and([BOOL____00022, BOOL____00023], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00023, BOOL____00022], BOOL____00060) :: defines_var(BOOL____00060);
constraint array_bool_and([BOOL____00030, BOOL____00031], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00031, BOOL____00030], BOOL____00046) :: defines_var(BOOL____00046);
constraint array_bool_and([BOOL____00032, BOOL____00033], BOOL____00039) :: defines_var(BOOL____00039);
constraint array_bool_and([BOOL____00033, BOOL____00032], BOOL____00051) :: defines_var(BOOL____00051);
constraint array_bool_and([BOOL____00034, BOOL____00035], BOOL____00040) :: defines_var(BOOL____00040);
constraint array_bool_and([BOOL____00035, BOOL____00034], BOOL____00056) :: defines_var(BOOL____00056);
constraint array_bool_and([BOOL____00036, BOOL____00037], BOOL____00041) :: defines_var(BOOL____00041);
constraint array_bool_and([BOOL____00037, BOOL____00036], BOOL____00061) :: defines_var(BOOL____00061);
constraint array_bool_or([BOOL____00046, BOOL____00044, BOOL____00045], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_or([BOOL____00051, BOOL____00049, BOOL____00050], BOOL____00052) :: defines_var(BOOL____00052);
constraint array_bool_or([BOOL____00056, BOOL____00054, BOOL____00055], BOOL____00057) :: defines_var(BOOL____00057);
constraint array_bool_or([BOOL____00061, BOOL____00059, BOOL____00060], BOOL____00062) :: defines_var(BOOL____00062);
constraint array_bool_or([BOOL____00013, BOOL____00012, BOOL____00010, BOOL____00011], BOOL____00014) :: defines_var(BOOL____00014);
constraint array_bool_or([BOOL____00027, BOOL____00026, BOOL____00024, BOOL____00025], BOOL____00028) :: defines_var(BOOL____00028);
constraint array_bool_or([BOOL____00041, BOOL____00040, BOOL____00038, BOOL____00039], BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq(x1[1], 9);
constraint int_eq(x1[2], 4);
constraint int_eq(x1[3], 2);
constraint int_eq(x2[1], 9);
constraint int_eq(x2[2], 3);
constraint int_eq(x2[3], 9);
constraint int_eq(x2[4], 2);
constraint int_eq_reif(x1[1], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x1[1], 2, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x1[1], 3, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x1[1], 4, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x1[2], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(x1[2], 2, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(x1[2], 3, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x1[2], 4, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x1[3], 1, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x1[3], 2, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x1[3], 3, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(x1[3], 4, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x2[1], 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(x2[1], 2, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(x2[1], 3, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(x2[2], 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(x2[2], 2, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(x2[2], 3, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(x2[3], 1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(x2[3], 2, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(x2[3], 3, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(x2[4], 1, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(x2[4], 2, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(x2[4], 3, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_le_reif(x1[1], 4, BOOL____00014);
constraint int_le_reif(x1[2], 4, BOOL____00028);
constraint int_le_reif(x1[3], 4, BOOL____00042);
constraint int_le_reif(x2[1], 3, BOOL____00047);
constraint int_le_reif(x2[2], 3, BOOL____00052);
constraint int_le_reif(x2[3], 3, BOOL____00057);
constraint int_le_reif(x2[4], 3, BOOL____00062);
constraint set_in(x1[1], {1, 2, 3, 4, 9});
constraint set_in(x1[2], {1, 2, 3, 4, 9});
constraint set_in(x1[3], {1, 2, 3, 4, 9});
constraint set_in(x2[1], {1, 2, 3, 9});
constraint set_in(x2[2], {1, 2, 3, 9});
constraint set_in(x2[3], {1, 2, 3, 9});
constraint set_in(x2[4], {1, 2, 3, 9});
solve satisfy;
