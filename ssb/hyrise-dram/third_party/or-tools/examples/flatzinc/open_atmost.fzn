var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00007 :: is_defined_var :: var_is_introduced;
var 1..1: n :: output_var = 1;
var set of 1..4: s :: output_var = 2..4;
var 2..2: value :: output_var = 2;
array [1..4] of var 1..5: variables :: output_array([1..4]);
constraint bool2int(BOOL____00002, INT____00003) :: defines_var(INT____00003);
constraint bool2int(BOOL____00004, INT____00005) :: defines_var(INT____00005);
constraint bool2int(BOOL____00006, INT____00007) :: defines_var(INT____00007);
constraint int_eq(variables[1], 2);
constraint int_eq(variables[2], 2);
constraint int_eq(variables[3], 4);
constraint int_eq(variables[4], 5);
constraint int_eq_reif(2, variables[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(2, variables[2], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(2, variables[3], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(2, variables[4], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lin_le([1, 1, 1], [INT____00003, INT____00005, INT____00007], 1);
solve satisfy;
