var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00009 :: is_defined_var :: var_is_introduced;
var 3..3: nvar :: output_var = 3;
var set of 1..5: s :: output_var = 2..5;
var set of 1..8: values :: output_var = {1, 5, 8};
array [1..5] of var 1..8: variables :: output_array([1..5]);
constraint bool2int(BOOL____00002, INT____00003) :: defines_var(INT____00003);
constraint bool2int(BOOL____00004, INT____00005) :: defines_var(INT____00005);
constraint bool2int(BOOL____00006, INT____00007) :: defines_var(INT____00007);
constraint bool2int(BOOL____00008, INT____00009) :: defines_var(INT____00009);
constraint int_eq(variables[1], 8);
constraint int_eq(variables[2], 5);
constraint int_eq(variables[3], 5);
constraint int_eq(variables[4], 4);
constraint int_eq(variables[5], 1);
constraint int_lin_eq([1, 1, 1, 1], [INT____00003, INT____00005, INT____00007, INT____00009], 3);
constraint set_in_reif(variables[1], {1, 5, 8}, BOOL____00001) :: defines_var(BOOL____00001);
constraint set_in_reif(variables[2], {1, 5, 8}, BOOL____00002) :: defines_var(BOOL____00002);
constraint set_in_reif(variables[3], {1, 5, 8}, BOOL____00004) :: defines_var(BOOL____00004);
constraint set_in_reif(variables[4], {1, 5, 8}, BOOL____00006) :: defines_var(BOOL____00006);
constraint set_in_reif(variables[5], {1, 5, 8}, BOOL____00008) :: defines_var(BOOL____00008);
solve satisfy;
