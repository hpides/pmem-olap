var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 1..1: nchange :: output_var = 1;
var 2..2: tolerance :: output_var = 2;
array [1..5] of var 1..5: x :: output_array([1..5]);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint int_abs(INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_abs(INT____00005, INT____00006) :: defines_var(INT____00006);
constraint int_abs(INT____00009, INT____00010) :: defines_var(INT____00010);
constraint int_abs(INT____00013, INT____00014) :: defines_var(INT____00014);
constraint int_eq(x[1], 1);
constraint int_eq(x[2], 3);
constraint int_eq(x[3], 4);
constraint int_eq(x[4], 5);
constraint int_eq(x[5], 2);
constraint int_le_reif(3, INT____00002, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_le_reif(3, INT____00006, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_le_reif(3, INT____00010, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_le_reif(3, INT____00014, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_lin_eq([-1, -1, 1], [INT____00001, x[1], x[2]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, -1, 1], [INT____00005, x[2], x[3]], 0) :: defines_var(INT____00005);
constraint int_lin_eq([-1, -1, 1], [INT____00009, x[3], x[4]], 0) :: defines_var(INT____00009);
constraint int_lin_eq([-1, -1, 1], [INT____00013, x[4], x[5]], 0) :: defines_var(INT____00013);
constraint int_lin_eq([-1, -1, -1, -1], [INT____00004, INT____00008, INT____00012, INT____00016], -1);
solve satisfy;
