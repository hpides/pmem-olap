predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var -32..32: INT____00001 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00002 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00003 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00004 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00005 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00006 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00007 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00008 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00009 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00010 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00011 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00012 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00013 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00014 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00015 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00016 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00017 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00018 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00019 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00020 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00021 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00022 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00023 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00024 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00025 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00026 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00027 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00028 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00029 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00030 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00031 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00032 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00033 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00034 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00035 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00036 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00037 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00038 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00039 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00040 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00041 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00042 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00043 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00044 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00045 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00046 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00047 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00048 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00049 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00050 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00051 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00052 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00053 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00054 :: is_defined_var :: var_is_introduced;
var -32..32: INT____00055 :: is_defined_var :: var_is_introduced;
var 1..32: INT____00056 :: is_defined_var :: var_is_introduced;
var 2..10: p :: output_var;
array [1..8] of var 0..32: x :: output_array([1..8]);
constraint int_abs(INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_abs(INT____00003, INT____00004) :: defines_var(INT____00004);
constraint int_abs(INT____00005, INT____00006) :: defines_var(INT____00006);
constraint int_abs(INT____00007, INT____00008) :: defines_var(INT____00008);
constraint int_abs(INT____00009, INT____00010) :: defines_var(INT____00010);
constraint int_abs(INT____00011, INT____00012) :: defines_var(INT____00012);
constraint int_abs(INT____00013, INT____00014) :: defines_var(INT____00014);
constraint int_abs(INT____00015, INT____00016) :: defines_var(INT____00016);
constraint int_abs(INT____00017, INT____00018) :: defines_var(INT____00018);
constraint int_abs(INT____00019, INT____00020) :: defines_var(INT____00020);
constraint int_abs(INT____00021, INT____00022) :: defines_var(INT____00022);
constraint int_abs(INT____00023, INT____00024) :: defines_var(INT____00024);
constraint int_abs(INT____00025, INT____00026) :: defines_var(INT____00026);
constraint int_abs(INT____00027, INT____00028) :: defines_var(INT____00028);
constraint int_abs(INT____00029, INT____00030) :: defines_var(INT____00030);
constraint int_abs(INT____00031, INT____00032) :: defines_var(INT____00032);
constraint int_abs(INT____00033, INT____00034) :: defines_var(INT____00034);
constraint int_abs(INT____00035, INT____00036) :: defines_var(INT____00036);
constraint int_abs(INT____00037, INT____00038) :: defines_var(INT____00038);
constraint int_abs(INT____00039, INT____00040) :: defines_var(INT____00040);
constraint int_abs(INT____00041, INT____00042) :: defines_var(INT____00042);
constraint int_abs(INT____00043, INT____00044) :: defines_var(INT____00044);
constraint int_abs(INT____00045, INT____00046) :: defines_var(INT____00046);
constraint int_abs(INT____00047, INT____00048) :: defines_var(INT____00048);
constraint int_abs(INT____00049, INT____00050) :: defines_var(INT____00050);
constraint int_abs(INT____00051, INT____00052) :: defines_var(INT____00052);
constraint int_abs(INT____00053, INT____00054) :: defines_var(INT____00054);
constraint int_abs(INT____00055, INT____00056) :: defines_var(INT____00056);
constraint int_le(p, INT____00002);
constraint int_le(p, INT____00004);
constraint int_le(p, INT____00006);
constraint int_le(p, INT____00008);
constraint int_le(p, INT____00010);
constraint int_le(p, INT____00012);
constraint int_le(p, INT____00014);
constraint int_le(p, INT____00016);
constraint int_le(p, INT____00018);
constraint int_le(p, INT____00020);
constraint int_le(p, INT____00022);
constraint int_le(p, INT____00024);
constraint int_le(p, INT____00026);
constraint int_le(p, INT____00028);
constraint int_le(p, INT____00030);
constraint int_le(p, INT____00032);
constraint int_le(p, INT____00034);
constraint int_le(p, INT____00036);
constraint int_le(p, INT____00038);
constraint int_le(p, INT____00040);
constraint int_le(p, INT____00042);
constraint int_le(p, INT____00044);
constraint int_le(p, INT____00046);
constraint int_le(p, INT____00048);
constraint int_le(p, INT____00050);
constraint int_le(p, INT____00052);
constraint int_le(p, INT____00054);
constraint int_le(p, INT____00056);
constraint int_le(x[1], x[2]);
constraint int_le(x[2], x[3]);
constraint int_le(x[3], x[4]);
constraint int_le(x[4], x[5]);
constraint int_le(x[5], x[6]);
constraint int_le(x[6], x[7]);
constraint int_le(x[7], x[8]);
constraint int_plus(INT____00001, x[2], x[1]) :: defines_var(INT____00001);
constraint int_plus(INT____00003, x[3], x[1]) :: defines_var(INT____00003);
constraint int_plus(INT____00005, x[4], x[1]) :: defines_var(INT____00005);
constraint int_plus(INT____00007, x[5], x[1]) :: defines_var(INT____00007);
constraint int_plus(INT____00009, x[6], x[1]) :: defines_var(INT____00009);
constraint int_plus(INT____00011, x[7], x[1]) :: defines_var(INT____00011);
constraint int_plus(INT____00013, x[8], x[1]) :: defines_var(INT____00013);
constraint int_plus(INT____00015, x[3], x[2]) :: defines_var(INT____00015);
constraint int_plus(INT____00017, x[4], x[2]) :: defines_var(INT____00017);
constraint int_plus(INT____00019, x[5], x[2]) :: defines_var(INT____00019);
constraint int_plus(INT____00021, x[6], x[2]) :: defines_var(INT____00021);
constraint int_plus(INT____00023, x[7], x[2]) :: defines_var(INT____00023);
constraint int_plus(INT____00025, x[8], x[2]) :: defines_var(INT____00025);
constraint int_plus(INT____00027, x[4], x[3]) :: defines_var(INT____00027);
constraint int_plus(INT____00029, x[5], x[3]) :: defines_var(INT____00029);
constraint int_plus(INT____00031, x[6], x[3]) :: defines_var(INT____00031);
constraint int_plus(INT____00033, x[7], x[3]) :: defines_var(INT____00033);
constraint int_plus(INT____00035, x[8], x[3]) :: defines_var(INT____00035);
constraint int_plus(INT____00037, x[5], x[4]) :: defines_var(INT____00037);
constraint int_plus(INT____00039, x[6], x[4]) :: defines_var(INT____00039);
constraint int_plus(INT____00041, x[7], x[4]) :: defines_var(INT____00041);
constraint int_plus(INT____00043, x[8], x[4]) :: defines_var(INT____00043);
constraint int_plus(INT____00045, x[6], x[5]) :: defines_var(INT____00045);
constraint int_plus(INT____00047, x[7], x[5]) :: defines_var(INT____00047);
constraint int_plus(INT____00049, x[8], x[5]) :: defines_var(INT____00049);
constraint int_plus(INT____00051, x[7], x[6]) :: defines_var(INT____00051);
constraint int_plus(INT____00053, x[8], x[6]) :: defines_var(INT____00053);
constraint int_plus(INT____00055, x[8], x[7]) :: defines_var(INT____00055);
solve maximize p;
