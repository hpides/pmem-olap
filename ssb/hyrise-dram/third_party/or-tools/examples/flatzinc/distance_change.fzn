var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..4: dist :: output_var = INT____00033;
array [1..5] of var 1..3: v1 :: output_array([1..5]);
array [1..5] of var 1..4: v2 :: output_array([1..5]);
constraint array_bool_and([BOOL____00001, BOOL____00003], BOOL____00005) :: defines_var(BOOL____00005);
constraint array_bool_and([BOOL____00002, BOOL____00004], BOOL____00006) :: defines_var(BOOL____00006);
constraint array_bool_and([BOOL____00009, BOOL____00011], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_and([BOOL____00010, BOOL____00012], BOOL____00014) :: defines_var(BOOL____00014);
constraint array_bool_and([BOOL____00017, BOOL____00019], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_and([BOOL____00018, BOOL____00020], BOOL____00022) :: defines_var(BOOL____00022);
constraint array_bool_and([BOOL____00025, BOOL____00027], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_and([BOOL____00026, BOOL____00028], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_or([BOOL____00005, BOOL____00006], BOOL____00007) :: defines_var(BOOL____00007);
constraint array_bool_or([BOOL____00013, BOOL____00014], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_or([BOOL____00021, BOOL____00022], BOOL____00023) :: defines_var(BOOL____00023);
constraint array_bool_or([BOOL____00029, BOOL____00030], BOOL____00031) :: defines_var(BOOL____00031);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool_eq_reif(BOOL____00001, false, BOOL____00004) :: defines_var(BOOL____00004);
constraint bool_eq_reif(BOOL____00002, false, BOOL____00003) :: defines_var(BOOL____00003);
constraint bool_eq_reif(BOOL____00009, false, BOOL____00012) :: defines_var(BOOL____00012);
constraint bool_eq_reif(BOOL____00010, false, BOOL____00011) :: defines_var(BOOL____00011);
constraint bool_eq_reif(BOOL____00017, false, BOOL____00020) :: defines_var(BOOL____00020);
constraint bool_eq_reif(BOOL____00018, false, BOOL____00019) :: defines_var(BOOL____00019);
constraint bool_eq_reif(BOOL____00025, false, BOOL____00028) :: defines_var(BOOL____00028);
constraint bool_eq_reif(BOOL____00026, false, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq(v1[1], 3);
constraint int_eq(v1[2], 3);
constraint int_eq(v1[3], 1);
constraint int_eq(v1[4], 2);
constraint int_eq(v1[5], 2);
constraint int_eq(v2[1], 4);
constraint int_eq(v2[2], 4);
constraint int_eq(v2[3], 3);
constraint int_eq(v2[4], 3);
constraint int_eq(v2[5], 3);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00033, INT____00008, INT____00016, INT____00024, INT____00032], 0) :: defines_var(INT____00033);
constraint int_ne_reif(v1[1], v1[2], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_ne_reif(v1[2], v1[3], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_ne_reif(v1[3], v1[4], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_ne_reif(v1[4], v1[5], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_ne_reif(v2[1], v2[2], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_ne_reif(v2[2], v2[3], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_ne_reif(v2[3], v2[4], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_ne_reif(v2[4], v2[5], BOOL____00026) :: defines_var(BOOL____00026);
solve satisfy;
