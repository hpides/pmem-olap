var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
array [1..4] of var 0..6: a1 :: output_array([1..4]);
array [1..4] of var 0..6: a2 :: output_array([1..4]);
var 2..2: k :: output_var = 2;
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint int_eq(a1[1], 2);
constraint int_eq(a1[2], 5);
constraint int_eq(a1[3], 2);
constraint int_eq(a1[4], 0);
constraint int_eq(a2[1], 3);
constraint int_eq(a2[2], 6);
constraint int_eq(a2[3], 2);
constraint int_eq(a2[4], 1);
constraint int_lin_le([-1, -1, -1, -1], [INT____00002, INT____00004, INT____00006, INT____00008], -2);
constraint int_ne_reif(a1[1], a2[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_ne_reif(a1[2], a2[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_ne_reif(a1[3], a2[3], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_ne_reif(a1[4], a2[4], BOOL____00007) :: defines_var(BOOL____00007);
solve satisfy;
