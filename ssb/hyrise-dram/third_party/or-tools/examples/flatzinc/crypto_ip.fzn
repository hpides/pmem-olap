predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..26] of int: all_letters = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26];
array [1..26] of var 1..26: letters_res :: output_array([1..26]);
array [1..676] of var 0..1: x;
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[27], x[53], x[79], x[105], x[131], x[157], x[183], x[209], x[235], x[261], x[287], x[313], x[339], x[365], x[391], x[417], x[443], x[469], x[495], x[521], x[547], x[573], x[599], x[625], x[651]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[2], x[28], x[54], x[80], x[106], x[132], x[158], x[184], x[210], x[236], x[262], x[288], x[314], x[340], x[366], x[392], x[418], x[444], x[470], x[496], x[522], x[548], x[574], x[600], x[626], x[652]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[3], x[29], x[55], x[81], x[107], x[133], x[159], x[185], x[211], x[237], x[263], x[289], x[315], x[341], x[367], x[393], x[419], x[445], x[471], x[497], x[523], x[549], x[575], x[601], x[627], x[653]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[4], x[30], x[56], x[82], x[108], x[134], x[160], x[186], x[212], x[238], x[264], x[290], x[316], x[342], x[368], x[394], x[420], x[446], x[472], x[498], x[524], x[550], x[576], x[602], x[628], x[654]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[5], x[31], x[57], x[83], x[109], x[135], x[161], x[187], x[213], x[239], x[265], x[291], x[317], x[343], x[369], x[395], x[421], x[447], x[473], x[499], x[525], x[551], x[577], x[603], x[629], x[655]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[6], x[32], x[58], x[84], x[110], x[136], x[162], x[188], x[214], x[240], x[266], x[292], x[318], x[344], x[370], x[396], x[422], x[448], x[474], x[500], x[526], x[552], x[578], x[604], x[630], x[656]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[7], x[33], x[59], x[85], x[111], x[137], x[163], x[189], x[215], x[241], x[267], x[293], x[319], x[345], x[371], x[397], x[423], x[449], x[475], x[501], x[527], x[553], x[579], x[605], x[631], x[657]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[8], x[34], x[60], x[86], x[112], x[138], x[164], x[190], x[216], x[242], x[268], x[294], x[320], x[346], x[372], x[398], x[424], x[450], x[476], x[502], x[528], x[554], x[580], x[606], x[632], x[658]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[9], x[35], x[61], x[87], x[113], x[139], x[165], x[191], x[217], x[243], x[269], x[295], x[321], x[347], x[373], x[399], x[425], x[451], x[477], x[503], x[529], x[555], x[581], x[607], x[633], x[659]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[10], x[36], x[62], x[88], x[114], x[140], x[166], x[192], x[218], x[244], x[270], x[296], x[322], x[348], x[374], x[400], x[426], x[452], x[478], x[504], x[530], x[556], x[582], x[608], x[634], x[660]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[11], x[37], x[63], x[89], x[115], x[141], x[167], x[193], x[219], x[245], x[271], x[297], x[323], x[349], x[375], x[401], x[427], x[453], x[479], x[505], x[531], x[557], x[583], x[609], x[635], x[661]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[12], x[38], x[64], x[90], x[116], x[142], x[168], x[194], x[220], x[246], x[272], x[298], x[324], x[350], x[376], x[402], x[428], x[454], x[480], x[506], x[532], x[558], x[584], x[610], x[636], x[662]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[13], x[39], x[65], x[91], x[117], x[143], x[169], x[195], x[221], x[247], x[273], x[299], x[325], x[351], x[377], x[403], x[429], x[455], x[481], x[507], x[533], x[559], x[585], x[611], x[637], x[663]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[14], x[40], x[66], x[92], x[118], x[144], x[170], x[196], x[222], x[248], x[274], x[300], x[326], x[352], x[378], x[404], x[430], x[456], x[482], x[508], x[534], x[560], x[586], x[612], x[638], x[664]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[15], x[41], x[67], x[93], x[119], x[145], x[171], x[197], x[223], x[249], x[275], x[301], x[327], x[353], x[379], x[405], x[431], x[457], x[483], x[509], x[535], x[561], x[587], x[613], x[639], x[665]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[16], x[42], x[68], x[94], x[120], x[146], x[172], x[198], x[224], x[250], x[276], x[302], x[328], x[354], x[380], x[406], x[432], x[458], x[484], x[510], x[536], x[562], x[588], x[614], x[640], x[666]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[17], x[43], x[69], x[95], x[121], x[147], x[173], x[199], x[225], x[251], x[277], x[303], x[329], x[355], x[381], x[407], x[433], x[459], x[485], x[511], x[537], x[563], x[589], x[615], x[641], x[667]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[18], x[44], x[70], x[96], x[122], x[148], x[174], x[200], x[226], x[252], x[278], x[304], x[330], x[356], x[382], x[408], x[434], x[460], x[486], x[512], x[538], x[564], x[590], x[616], x[642], x[668]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[19], x[45], x[71], x[97], x[123], x[149], x[175], x[201], x[227], x[253], x[279], x[305], x[331], x[357], x[383], x[409], x[435], x[461], x[487], x[513], x[539], x[565], x[591], x[617], x[643], x[669]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[20], x[46], x[72], x[98], x[124], x[150], x[176], x[202], x[228], x[254], x[280], x[306], x[332], x[358], x[384], x[410], x[436], x[462], x[488], x[514], x[540], x[566], x[592], x[618], x[644], x[670]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[21], x[47], x[73], x[99], x[125], x[151], x[177], x[203], x[229], x[255], x[281], x[307], x[333], x[359], x[385], x[411], x[437], x[463], x[489], x[515], x[541], x[567], x[593], x[619], x[645], x[671]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[22], x[48], x[74], x[100], x[126], x[152], x[178], x[204], x[230], x[256], x[282], x[308], x[334], x[360], x[386], x[412], x[438], x[464], x[490], x[516], x[542], x[568], x[594], x[620], x[646], x[672]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[23], x[49], x[75], x[101], x[127], x[153], x[179], x[205], x[231], x[257], x[283], x[309], x[335], x[361], x[387], x[413], x[439], x[465], x[491], x[517], x[543], x[569], x[595], x[621], x[647], x[673]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[24], x[50], x[76], x[102], x[128], x[154], x[180], x[206], x[232], x[258], x[284], x[310], x[336], x[362], x[388], x[414], x[440], x[466], x[492], x[518], x[544], x[570], x[596], x[622], x[648], x[674]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[25], x[51], x[77], x[103], x[129], x[155], x[181], x[207], x[233], x[259], x[285], x[311], x[337], x[363], x[389], x[415], x[441], x[467], x[493], x[519], x[545], x[571], x[597], x[623], x[649], x[675]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[26], x[52], x[78], x[104], x[130], x[156], x[182], x[208], x[234], x[260], x[286], x[312], x[338], x[364], x[390], x[416], x[442], x[468], x[494], x[520], x[546], x[572], x[598], x[624], x[650], x[676]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[235], x[236], x[237], x[238], x[239], x[240], x[241], x[242], x[243], x[244], x[245], x[246], x[247], x[248], x[249], x[250], x[251], x[252], x[253], x[254], x[255], x[256], x[257], x[258], x[259], x[260]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[261], x[262], x[263], x[264], x[265], x[266], x[267], x[268], x[269], x[270], x[271], x[272], x[273], x[274], x[275], x[276], x[277], x[278], x[279], x[280], x[281], x[282], x[283], x[284], x[285], x[286]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[313], x[314], x[315], x[316], x[317], x[318], x[319], x[320], x[321], x[322], x[323], x[324], x[325], x[326], x[327], x[328], x[329], x[330], x[331], x[332], x[333], x[334], x[335], x[336], x[337], x[338]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[417], x[418], x[419], x[420], x[421], x[422], x[423], x[424], x[425], x[426], x[427], x[428], x[429], x[430], x[431], x[432], x[433], x[434], x[435], x[436], x[437], x[438], x[439], x[440], x[441], x[442]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[547], x[548], x[549], x[550], x[551], x[552], x[553], x[554], x[555], x[556], x[557], x[558], x[559], x[560], x[561], x[562], x[563], x[564], x[565], x[566], x[567], x[568], x[569], x[570], x[571], x[572]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[573], x[574], x[575], x[576], x[577], x[578], x[579], x[580], x[581], x[582], x[583], x[584], x[585], x[586], x[587], x[588], x[589], x[590], x[591], x[592], x[593], x[594], x[595], x[596], x[597], x[598]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[599], x[600], x[601], x[602], x[603], x[604], x[605], x[606], x[607], x[608], x[609], x[610], x[611], x[612], x[613], x[614], x[615], x[616], x[617], x[618], x[619], x[620], x[621], x[622], x[623], x[624]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[625], x[626], x[627], x[628], x[629], x[630], x[631], x[632], x[633], x[634], x[635], x[636], x[637], x[638], x[639], x[640], x[641], x[642], x[643], x[644], x[645], x[646], x[647], x[648], x[649], x[650]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[651], x[652], x[653], x[654], x[655], x[656], x[657], x[658], x[659], x[660], x[661], x[662], x[663], x[664], x[665], x[666], x[667], x[668], x[669], x[670], x[671], x[672], x[673], x[674], x[675], x[676]], 1);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[1], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[2], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[3], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[4], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[5], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[6], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[7], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[8], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[9], x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[10], x[235], x[236], x[237], x[238], x[239], x[240], x[241], x[242], x[243], x[244], x[245], x[246], x[247], x[248], x[249], x[250], x[251], x[252], x[253], x[254], x[255], x[256], x[257], x[258], x[259], x[260]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[11], x[261], x[262], x[263], x[264], x[265], x[266], x[267], x[268], x[269], x[270], x[271], x[272], x[273], x[274], x[275], x[276], x[277], x[278], x[279], x[280], x[281], x[282], x[283], x[284], x[285], x[286]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[12], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[13], x[313], x[314], x[315], x[316], x[317], x[318], x[319], x[320], x[321], x[322], x[323], x[324], x[325], x[326], x[327], x[328], x[329], x[330], x[331], x[332], x[333], x[334], x[335], x[336], x[337], x[338]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[14], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[15], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[16], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[17], x[417], x[418], x[419], x[420], x[421], x[422], x[423], x[424], x[425], x[426], x[427], x[428], x[429], x[430], x[431], x[432], x[433], x[434], x[435], x[436], x[437], x[438], x[439], x[440], x[441], x[442]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[18], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[19], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[20], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[21], x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[22], x[547], x[548], x[549], x[550], x[551], x[552], x[553], x[554], x[555], x[556], x[557], x[558], x[559], x[560], x[561], x[562], x[563], x[564], x[565], x[566], x[567], x[568], x[569], x[570], x[571], x[572]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[23], x[573], x[574], x[575], x[576], x[577], x[578], x[579], x[580], x[581], x[582], x[583], x[584], x[585], x[586], x[587], x[588], x[589], x[590], x[591], x[592], x[593], x[594], x[595], x[596], x[597], x[598]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[24], x[599], x[600], x[601], x[602], x[603], x[604], x[605], x[606], x[607], x[608], x[609], x[610], x[611], x[612], x[613], x[614], x[615], x[616], x[617], x[618], x[619], x[620], x[621], x[622], x[623], x[624]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[25], x[625], x[626], x[627], x[628], x[629], x[630], x[631], x[632], x[633], x[634], x[635], x[636], x[637], x[638], x[639], x[640], x[641], x[642], x[643], x[644], x[645], x[646], x[647], x[648], x[649], x[650]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [letters_res[26], x[651], x[652], x[653], x[654], x[655], x[656], x[657], x[658], x[659], x[660], x[661], x[662], x[663], x[664], x[665], x[666], x[667], x[668], x[669], x[670], x[671], x[672], x[673], x[674], x[675], x[676]], 0);
constraint int_lin_eq([-2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312]], -66);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], -37);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[235], x[236], x[237], x[238], x[239], x[240], x[241], x[242], x[243], x[244], x[245], x[246], x[247], x[248], x[249], x[250], x[251], x[252], x[253], x[254], x[255], x[256], x[257], x[258], x[259], x[260], x[651], x[652], x[653], x[654], x[655], x[656], x[657], x[658], x[659], x[660], x[661], x[662], x[663], x[664], x[665], x[666], x[667], x[668], x[669], x[670], x[671], x[672], x[673], x[674], x[675], x[676]], -58);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52], [x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390]], -53);
constraint int_lin_eq([-2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[313], x[314], x[315], x[316], x[317], x[318], x[319], x[320], x[321], x[322], x[323], x[324], x[325], x[326], x[327], x[328], x[329], x[330], x[331], x[332], x[333], x[334], x[335], x[336], x[337], x[338], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520]], -72);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390]], -43);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546]], -50);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468], x[625], x[626], x[627], x[628], x[629], x[630], x[631], x[632], x[633], x[634], x[635], x[636], x[637], x[638], x[639], x[640], x[641], x[642], x[643], x[644], x[645], x[646], x[647], x[648], x[649], x[650]], -47);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], -61);
constraint int_lin_eq([-2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[547], x[548], x[549], x[550], x[551], x[552], x[553], x[554], x[555], x[556], x[557], x[558], x[559], x[560], x[561], x[562], x[563], x[564], x[565], x[566], x[567], x[568], x[569], x[570], x[571], x[572]], -100);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520]], -45);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], -51);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468]], -65);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[261], x[262], x[263], x[264], x[265], x[266], x[267], x[268], x[269], x[270], x[271], x[272], x[273], x[274], x[275], x[276], x[277], x[278], x[279], x[280], x[281], x[282], x[283], x[284], x[285], x[286], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416]], -59);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520], x[573], x[574], x[575], x[576], x[577], x[578], x[579], x[580], x[581], x[582], x[583], x[584], x[585], x[586], x[587], x[588], x[589], x[590], x[591], x[592], x[593], x[594], x[595], x[596], x[597], x[598], x[651], x[652], x[653], x[654], x[655], x[656], x[657], x[658], x[659], x[660], x[661], x[662], x[663], x[664], x[665], x[666], x[667], x[668], x[669], x[670], x[671], x[672], x[673], x[674], x[675], x[676]], -34);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520], x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546]], -30);
constraint int_lin_eq([-2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520]], -74);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494]], -82);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[417], x[418], x[419], x[420], x[421], x[422], x[423], x[424], x[425], x[426], x[427], x[428], x[429], x[430], x[431], x[432], x[433], x[434], x[435], x[436], x[437], x[438], x[439], x[440], x[441], x[442], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520], x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546]], -50);
constraint int_lin_eq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494], x[599], x[600], x[601], x[602], x[603], x[604], x[605], x[606], x[607], x[608], x[609], x[610], x[611], x[612], x[613], x[614], x[615], x[616], x[617], x[618], x[619], x[620], x[621], x[622], x[623], x[624]], -134);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[235], x[236], x[237], x[238], x[239], x[240], x[241], x[242], x[243], x[244], x[245], x[246], x[247], x[248], x[249], x[250], x[251], x[252], x[253], x[254], x[255], x[256], x[257], x[258], x[259], x[260], x[261], x[262], x[263], x[264], x[265], x[266], x[267], x[268], x[269], x[270], x[271], x[272], x[273], x[274], x[275], x[276], x[277], x[278], x[279], x[280], x[281], x[282], x[283], x[284], x[285], x[286], x[287], x[288], x[289], x[290], x[291], x[292], x[293], x[294], x[295], x[296], x[297], x[298], x[299], x[300], x[301], x[302], x[303], x[304], x[305], x[306], x[307], x[308], x[309], x[310], x[311], x[312], x[313], x[314], x[315], x[316], x[317], x[318], x[319], x[320], x[321], x[322], x[323], x[324], x[325], x[326], x[327], x[328], x[329], x[330], x[331], x[332], x[333], x[334], x[335], x[336], x[337], x[338], x[339], x[340], x[341], x[342], x[343], x[344], x[345], x[346], x[347], x[348], x[349], x[350], x[351], x[352], x[353], x[354], x[355], x[356], x[357], x[358], x[359], x[360], x[361], x[362], x[363], x[364], x[365], x[366], x[367], x[368], x[369], x[370], x[371], x[372], x[373], x[374], x[375], x[376], x[377], x[378], x[379], x[380], x[381], x[382], x[383], x[384], x[385], x[386], x[387], x[388], x[389], x[390], x[391], x[392], x[393], x[394], x[395], x[396], x[397], x[398], x[399], x[400], x[401], x[402], x[403], x[404], x[405], x[406], x[407], x[408], x[409], x[410], x[411], x[412], x[413], x[414], x[415], x[416], x[417], x[418], x[419], x[420], x[421], x[422], x[423], x[424], x[425], x[426], x[427], x[428], x[429], x[430], x[431], x[432], x[433], x[434], x[435], x[436], x[437], x[438], x[439], x[440], x[441], x[442], x[443], x[444], x[445], x[446], x[447], x[448], x[449], x[450], x[451], x[452], x[453], x[454], x[455], x[456], x[457], x[458], x[459], x[460], x[461], x[462], x[463], x[464], x[465], x[466], x[467], x[468], x[469], x[470], x[471], x[472], x[473], x[474], x[475], x[476], x[477], x[478], x[479], x[480], x[481], x[482], x[483], x[484], x[485], x[486], x[487], x[488], x[489], x[490], x[491], x[492], x[493], x[494], x[495], x[496], x[497], x[498], x[499], x[500], x[501], x[502], x[503], x[504], x[505], x[506], x[507], x[508], x[509], x[510], x[511], x[512], x[513], x[514], x[515], x[516], x[517], x[518], x[519], x[520], x[521], x[522], x[523], x[524], x[525], x[526], x[527], x[528], x[529], x[530], x[531], x[532], x[533], x[534], x[535], x[536], x[537], x[538], x[539], x[540], x[541], x[542], x[543], x[544], x[545], x[546], x[547], x[548], x[549], x[550], x[551], x[552], x[553], x[554], x[555], x[556], x[557], x[558], x[559], x[560], x[561], x[562], x[563], x[564], x[565], x[566], x[567], x[568], x[569], x[570], x[571], x[572], x[573], x[574], x[575], x[576], x[577], x[578], x[579], x[580], x[581], x[582], x[583], x[584], x[585], x[586], x[587], x[588], x[589], x[590], x[591], x[592], x[593], x[594], x[595], x[596], x[597], x[598], x[599], x[600], x[601], x[602], x[603], x[604], x[605], x[606], x[607], x[608], x[609], x[610], x[611], x[612], x[613], x[614], x[615], x[616], x[617], x[618], x[619], x[620], x[621], x[622], x[623], x[624], x[625], x[626], x[627], x[628], x[629], x[630], x[631], x[632], x[633], x[634], x[635], x[636], x[637], x[638], x[639], x[640], x[641], x[642], x[643], x[644], x[645], x[646], x[647], x[648], x[649], x[650], x[651], x[652], x[653], x[654], x[655], x[656], x[657], x[658], x[659], x[660], x[661], x[662], x[663], x[664], x[665], x[666], x[667], x[668], x[669], x[670], x[671], x[672], x[673], x[674], x[675], x[676]], first_fail, indomain_median, complete) satisfy;
