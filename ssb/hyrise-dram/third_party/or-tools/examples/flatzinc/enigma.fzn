var 11..20: INT____00004 :: is_defined_var :: var_is_introduced;
var 21..30: INT____00007 :: is_defined_var :: var_is_introduced;
var 31..40: INT____00010 :: is_defined_var :: var_is_introduced;
var 41..50: INT____00013 :: is_defined_var :: var_is_introduced;
var 51..60: INT____00016 :: is_defined_var :: var_is_introduced;
var 61..70: INT____00019 :: is_defined_var :: var_is_introduced;
var 71..80: INT____00022 :: is_defined_var :: var_is_introduced;
var 81..90: INT____00025 :: is_defined_var :: var_is_introduced;
var 91..100: INT____00028 :: is_defined_var :: var_is_introduced;
var 1..10: j____00001;
var 1..10: j____00003;
var 1..10: j____00006;
var 1..10: j____00009;
var 1..10: j____00012;
var 1..10: j____00015;
var 1..10: j____00018;
var 1..10: j____00021;
var 1..10: j____00024;
var 1..10: j____00027;
array [1..100] of var 0..1: x;
array [1..10] of var 0..9: y :: output_array([1..10]);
constraint array_var_int_element(INT____00004, x, 1);
constraint array_var_int_element(INT____00007, x, 1);
constraint array_var_int_element(INT____00010, x, 1);
constraint array_var_int_element(INT____00013, x, 1);
constraint array_var_int_element(INT____00016, x, 1);
constraint array_var_int_element(INT____00019, x, 1);
constraint array_var_int_element(INT____00022, x, 1);
constraint array_var_int_element(INT____00025, x, 1);
constraint array_var_int_element(INT____00028, x, 1);
constraint array_var_int_element(j____00001, x, 1);
constraint int_lin_eq([-1, 1], [INT____00004, j____00003], -10) :: defines_var(INT____00004) :: domain;
constraint int_lin_eq([-1, 1], [INT____00007, j____00006], -20) :: defines_var(INT____00007) :: domain;
constraint int_lin_eq([-1, 1], [INT____00010, j____00009], -30) :: defines_var(INT____00010) :: domain;
constraint int_lin_eq([-1, 1], [INT____00013, j____00012], -40) :: defines_var(INT____00013) :: domain;
constraint int_lin_eq([-1, 1], [INT____00016, j____00015], -50) :: defines_var(INT____00016) :: domain;
constraint int_lin_eq([-1, 1], [INT____00019, j____00018], -60) :: defines_var(INT____00019) :: domain;
constraint int_lin_eq([-1, 1], [INT____00022, j____00021], -70) :: defines_var(INT____00022) :: domain;
constraint int_lin_eq([-1, 1], [INT____00025, j____00024], -80) :: defines_var(INT____00025) :: domain;
constraint int_lin_eq([-1, 1], [INT____00028, j____00027], -90) :: defines_var(INT____00028) :: domain;
constraint int_lin_eq([-1, 1], [j____00001, y[1]], -1);
constraint int_lin_eq([-1, 1], [j____00003, y[2]], -1);
constraint int_lin_eq([-1, 1], [j____00006, y[3]], -1);
constraint int_lin_eq([-1, 1], [j____00009, y[4]], -1);
constraint int_lin_eq([-1, 1], [j____00012, y[5]], -1);
constraint int_lin_eq([-1, 1], [j____00015, y[6]], -1);
constraint int_lin_eq([-1, 1], [j____00018, y[7]], -1);
constraint int_lin_eq([-1, 1], [j____00021, y[8]], -1);
constraint int_lin_eq([-1, 1], [j____00024, y[9]], -1);
constraint int_lin_eq([-1, 1], [j____00027, y[10]], -1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[11], x[21], x[31], x[41], x[51], x[61], x[71], x[81], x[91]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[2], x[12], x[22], x[32], x[42], x[52], x[62], x[72], x[82], x[92]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[3], x[13], x[23], x[33], x[43], x[53], x[63], x[73], x[83], x[93]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[4], x[14], x[24], x[34], x[44], x[54], x[64], x[74], x[84], x[94]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[5], x[15], x[25], x[35], x[45], x[55], x[65], x[75], x[85], x[95]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[6], x[16], x[26], x[36], x[46], x[56], x[66], x[76], x[86], x[96]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[7], x[17], x[27], x[37], x[47], x[57], x[67], x[77], x[87], x[97]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[8], x[18], x[28], x[38], x[48], x[58], x[68], x[78], x[88], x[98]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[9], x[19], x[29], x[39], x[49], x[59], x[69], x[79], x[89], x[99]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[10], x[20], x[30], x[40], x[50], x[60], x[70], x[80], x[90], x[100]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100]], 1);
constraint int_lin_eq([202, -79, 100023, -89810, -9980, 1000, 100, 10000, 100, -1, 404, -158, 200046, -179620, -19960, 2000, 200, 20000, 200, -2, 606, -237, 300069, -269430, -29940, 3000, 300, 30000, 300, -3, 808, -316, 400092, -359240, -39920, 4000, 400, 40000, 400, -4, 1010, -395, 500115, -449050, -49900, 5000, 500, 50000, 500, -5, 1212, -474, 600138, -538860, -59880, 6000, 600, 60000, 600, -6, 1414, -553, 700161, -628670, -69860, 7000, 700, 70000, 700, -7, 1616, -632, 800184, -718480, -79840, 8000, 800, 80000, 800, -8, 1818, -711, 900207, -808290, -89820, 9000, 900, 90000, 900, -9], [x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100]], 0);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100]], first_fail, indomain, complete) satisfy;
