array [1..40] of int: cost = [730, 1280, 3880, 0, 0, 0, 0, 0, 0, 0, 920, 1310, 1620, 2410, 2790, 3280, 3910, 4570, 0, 0, 1800, 2630, 3170, 3769, 4140, 4750, 5380, 5930, 6780, 7130, 4460, 6470, 7780, 8390, 9500, 0, 0, 0, 0, 0];
array [1..8] of int: min_max = [1, 1, 2, 10, 3, 10, 2, 10];
array [1..4] of int: num_players = [3, 8, 10, 5];
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var 0..26: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..30000: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00054 :: is_defined_var :: var_is_introduced;
var 0..26: num_players_choosen :: output_var = INT____00001;
array [1..40] of var 0..1: x :: output_array([1..4, 1..10]);
var 0..108779: z :: output_var = INT____00002;
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00053, INT____00054) :: defines_var(INT____00054);
constraint int_eq_reif(x[1], 0, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(x[1], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[2], 0, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(x[2], 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[3], 0, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(x[3], 1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[4], 0, true);
constraint int_eq_reif(x[5], 0, true);
constraint int_eq_reif(x[6], 0, true);
constraint int_eq_reif(x[7], 0, true);
constraint int_eq_reif(x[8], 0, true);
constraint int_eq_reif(x[9], 0, true);
constraint int_eq_reif(x[10], 0, true);
constraint int_eq_reif(x[11], 0, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(x[11], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x[12], 0, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(x[12], 1, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(x[13], 0, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(x[13], 1, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(x[14], 0, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(x[14], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(x[15], 0, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(x[15], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(x[16], 0, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(x[16], 1, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(x[17], 0, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(x[17], 1, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[18], 0, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(x[18], 1, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x[19], 0, true);
constraint int_eq_reif(x[20], 0, true);
constraint int_eq_reif(x[21], 0, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(x[21], 1, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(x[22], 0, BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(x[22], 1, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[23], 0, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(x[23], 1, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(x[24], 0, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_eq_reif(x[24], 1, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[25], 0, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(x[25], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x[26], 0, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(x[26], 1, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(x[27], 0, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(x[27], 1, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x[28], 0, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_eq_reif(x[28], 1, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(x[29], 0, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(x[29], 1, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(x[30], 0, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(x[30], 1, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(x[31], 0, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(x[31], 1, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(x[32], 0, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(x[32], 1, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(x[33], 0, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(x[33], 1, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(x[34], 0, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(x[34], 1, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(x[35], 0, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_eq_reif(x[35], 1, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(x[36], 0, true);
constraint int_eq_reif(x[37], 0, true);
constraint int_eq_reif(x[38], 0, true);
constraint int_eq_reif(x[39], 0, true);
constraint int_eq_reif(x[40], 0, true);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, 730, 1280, 3880, 920, 1310, 1620, 2410, 2790, 3280, 3910, 4570, 1800, 2630, 3170, 3769, 4140, 4750, 5380, 5930, 6780, 7130, 4460, 6470, 7780, 8390, 9500], [INT____00002, x[1], x[2], x[3], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35]], 0) :: defines_var(INT____00002);
constraint int_lin_le([-1, -1, -1], [INT____00004, INT____00006, INT____00008], -1);
constraint int_lin_le([1, 1, 1], [INT____00004, INT____00006, INT____00008], 1);
constraint int_lin_le([-1, -1, -1, -1, -1], [INT____00046, INT____00048, INT____00050, INT____00052, INT____00054], -2);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [INT____00010, INT____00012, INT____00014, INT____00016, INT____00018, INT____00020, INT____00022, INT____00024], -2);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036, INT____00038, INT____00040, INT____00042, INT____00044], -3);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40]], first_fail, indomain, complete) maximize INT____00002;
