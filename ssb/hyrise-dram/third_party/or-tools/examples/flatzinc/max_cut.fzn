array [1..44] of int: E = [1, 2, 1, 5, 2, 3, 2, 6, 3, 4, 3, 8, 4, 9, 5, 6, 5, 7, 6, 8, 7, 8, 7, 12, 8, 9, 8, 12, 9, 10, 9, 14, 10, 11, 10, 14, 11, 15, 12, 13, 13, 14, 14, 15];
array [1..22] of int: w = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
var 0..44: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..330] of var 0..1: t;
array [1..15] of var 0..1: x :: output_array([1..15]);
var 0..44: z :: output_var = INT____00001;
constraint int_lin_eq([-1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 2, 3, 3, 2, 3, 3, 3, 5, 4, 3, 2, 3, 2, 4, 2], [INT____00001, t[2], t[5], t[18], t[21], t[34], t[38], t[54], t[66], t[67], t[83], t[98], t[102], t[114], t[117], t[130], t[134], t[146], t[149], t[165], t[178], t[194], t[210], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-2, 1, 1], [t[2], x[1], x[2]], 1);
constraint int_lin_le([-2, 1, 1], [t[5], x[1], x[5]], 1);
constraint int_lin_le([-2, 1, 1], [t[18], x[2], x[3]], 1);
constraint int_lin_le([-2, 1, 1], [t[21], x[2], x[6]], 1);
constraint int_lin_le([-2, 1, 1], [t[34], x[3], x[4]], 1);
constraint int_lin_le([-2, 1, 1], [t[38], x[3], x[8]], 1);
constraint int_lin_le([-2, 1, 1], [t[54], x[4], x[9]], 1);
constraint int_lin_le([-2, 1, 1], [t[66], x[5], x[6]], 1);
constraint int_lin_le([-2, 1, 1], [t[67], x[5], x[7]], 1);
constraint int_lin_le([-2, 1, 1], [t[83], x[6], x[8]], 1);
constraint int_lin_le([-2, 1, 1], [t[98], x[7], x[8]], 1);
constraint int_lin_le([-2, 1, 1], [t[102], x[7], x[12]], 1);
constraint int_lin_le([-2, 1, 1], [t[114], x[8], x[9]], 1);
constraint int_lin_le([-2, 1, 1], [t[117], x[8], x[12]], 1);
constraint int_lin_le([-2, 1, 1], [t[130], x[9], x[10]], 1);
constraint int_lin_le([-2, 1, 1], [t[134], x[9], x[14]], 1);
constraint int_lin_le([-2, 1, 1], [t[146], x[10], x[11]], 1);
constraint int_lin_le([-2, 1, 1], [t[149], x[10], x[14]], 1);
constraint int_lin_le([-2, 1, 1], [t[165], x[11], x[15]], 1);
constraint int_lin_le([-2, 1, 1], [t[178], x[12], x[13]], 1);
constraint int_lin_le([-2, 1, 1], [t[194], x[13], x[14]], 1);
constraint int_lin_le([-2, 1, 1], [t[210], x[14], x[15]], 1);
constraint int_lin_le([2, -1, -1], [t[2], x[1], x[2]], 0);
constraint int_lin_le([2, -1, -1], [t[5], x[1], x[5]], 0);
constraint int_lin_le([2, -1, -1], [t[18], x[2], x[3]], 0);
constraint int_lin_le([2, -1, -1], [t[21], x[2], x[6]], 0);
constraint int_lin_le([2, -1, -1], [t[34], x[3], x[4]], 0);
constraint int_lin_le([2, -1, -1], [t[38], x[3], x[8]], 0);
constraint int_lin_le([2, -1, -1], [t[54], x[4], x[9]], 0);
constraint int_lin_le([2, -1, -1], [t[66], x[5], x[6]], 0);
constraint int_lin_le([2, -1, -1], [t[67], x[5], x[7]], 0);
constraint int_lin_le([2, -1, -1], [t[83], x[6], x[8]], 0);
constraint int_lin_le([2, -1, -1], [t[98], x[7], x[8]], 0);
constraint int_lin_le([2, -1, -1], [t[102], x[7], x[12]], 0);
constraint int_lin_le([2, -1, -1], [t[114], x[8], x[9]], 0);
constraint int_lin_le([2, -1, -1], [t[117], x[8], x[12]], 0);
constraint int_lin_le([2, -1, -1], [t[130], x[9], x[10]], 0);
constraint int_lin_le([2, -1, -1], [t[134], x[9], x[14]], 0);
constraint int_lin_le([2, -1, -1], [t[146], x[10], x[11]], 0);
constraint int_lin_le([2, -1, -1], [t[149], x[10], x[14]], 0);
constraint int_lin_le([2, -1, -1], [t[165], x[11], x[15]], 0);
constraint int_lin_le([2, -1, -1], [t[178], x[12], x[13]], 0);
constraint int_lin_le([2, -1, -1], [t[194], x[13], x[14]], 0);
constraint int_lin_le([2, -1, -1], [t[210], x[14], x[15]], 0);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15], t[16], t[17], t[18], t[19], t[20], t[21], t[22], t[23], t[24], t[25], t[26], t[27], t[28], t[29], t[30], t[31], t[32], t[33], t[34], t[35], t[36], t[37], t[38], t[39], t[40], t[41], t[42], t[43], t[44], t[45], t[46], t[47], t[48], t[49], t[50], t[51], t[52], t[53], t[54], t[55], t[56], t[57], t[58], t[59], t[60], t[61], t[62], t[63], t[64], t[65], t[66], t[67], t[68], t[69], t[70], t[71], t[72], t[73], t[74], t[75], t[76], t[77], t[78], t[79], t[80], t[81], t[82], t[83], t[84], t[85], t[86], t[87], t[88], t[89], t[90], t[91], t[92], t[93], t[94], t[95], t[96], t[97], t[98], t[99], t[100], t[101], t[102], t[103], t[104], t[105], t[106], t[107], t[108], t[109], t[110], t[111], t[112], t[113], t[114], t[115], t[116], t[117], t[118], t[119], t[120], t[121], t[122], t[123], t[124], t[125], t[126], t[127], t[128], t[129], t[130], t[131], t[132], t[133], t[134], t[135], t[136], t[137], t[138], t[139], t[140], t[141], t[142], t[143], t[144], t[145], t[146], t[147], t[148], t[149], t[150], t[151], t[152], t[153], t[154], t[155], t[156], t[157], t[158], t[159], t[160], t[161], t[162], t[163], t[164], t[165], t[166], t[167], t[168], t[169], t[170], t[171], t[172], t[173], t[174], t[175], t[176], t[177], t[178], t[179], t[180], t[181], t[182], t[183], t[184], t[185], t[186], t[187], t[188], t[189], t[190], t[191], t[192], t[193], t[194], t[195], t[196], t[197], t[198], t[199], t[200], t[201], t[202], t[203], t[204], t[205], t[206], t[207], t[208], t[209], t[210], t[211], t[212], t[213], t[214], t[215], t[216], t[217], t[218], t[219], t[220], t[221], t[222], t[223], t[224], t[225], t[226], t[227], t[228], t[229], t[230], t[231], t[232], t[233], t[234], t[235], t[236], t[237], t[238], t[239], t[240], t[241], t[242], t[243], t[244], t[245], t[246], t[247], t[248], t[249], t[250], t[251], t[252], t[253], t[254], t[255], t[256], t[257], t[258], t[259], t[260], t[261], t[262], t[263], t[264], t[265], t[266], t[267], t[268], t[269], t[270], t[271], t[272], t[273], t[274], t[275], t[276], t[277], t[278], t[279], t[280], t[281], t[282], t[283], t[284], t[285], t[286], t[287], t[288], t[289], t[290], t[291], t[292], t[293], t[294], t[295], t[296], t[297], t[298], t[299], t[300], t[301], t[302], t[303], t[304], t[305], t[306], t[307], t[308], t[309], t[310], t[311], t[312], t[313], t[314], t[315], t[316], t[317], t[318], t[319], t[320], t[321], t[322], t[323], t[324], t[325], t[326], t[327], t[328], t[329], t[330], INT____00001], first_fail, indomain, complete) maximize INT____00001;
