var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var 0..9: el :: output_var;
var 0..999999999: num :: output_var = 123402345;
array [1..9] of var 0..9: x :: output_array([1..9]);
constraint array_bool_or([BOOL____00009, BOOL____00008, BOOL____00007, BOOL____00006, BOOL____00005, BOOL____00004, BOOL____00003, BOOL____00002, BOOL____00001], true);
constraint int_eq_reif(x[1], el, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(x[2], el, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(x[3], el, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[4], el, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(x[5], el, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[6], el, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(x[7], el, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[8], el, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(x[9], el, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_lin_eq([-1, 100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1], [123402345, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]], 0);
solve satisfy;
