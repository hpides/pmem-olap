array [1..19] of int: arr = [72, 229, 107, 97, 110, 32, 75, 106, 101, 108, 108, 101, 114, 115, 116, 114, 97, 110, 100];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
array [1..19] of var 0..1: minus :: output_array([1..19]);
var 0..19: num_minus;
array [1..19] of var 0..1: plus :: output_array([1..19]);
array [1..19] of var -229..229: result :: output_array([1..19]);
var 666..666: total :: output_var = 666;
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint int_eq_reif(minus[1], 1, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(minus[2], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(minus[3], 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(minus[4], 1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(minus[5], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(minus[6], 1, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(minus[7], 1, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(minus[8], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(minus[9], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(minus[10], 1, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(minus[11], 1, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(minus[12], 1, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(minus[13], 1, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(minus[14], 1, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(minus[15], 1, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(minus[16], 1, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(minus[17], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(minus[18], 1, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(minus[19], 1, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_lin_eq([1, 1], [minus[1], plus[1]], 1);
constraint int_lin_eq([1, 1], [minus[2], plus[2]], 1);
constraint int_lin_eq([1, 1], [minus[3], plus[3]], 1);
constraint int_lin_eq([1, 1], [minus[4], plus[4]], 1);
constraint int_lin_eq([1, 1], [minus[5], plus[5]], 1);
constraint int_lin_eq([1, 1], [minus[6], plus[6]], 1);
constraint int_lin_eq([1, 1], [minus[7], plus[7]], 1);
constraint int_lin_eq([1, 1], [minus[8], plus[8]], 1);
constraint int_lin_eq([1, 1], [minus[9], plus[9]], 1);
constraint int_lin_eq([1, 1], [minus[10], plus[10]], 1);
constraint int_lin_eq([1, 1], [minus[11], plus[11]], 1);
constraint int_lin_eq([1, 1], [minus[12], plus[12]], 1);
constraint int_lin_eq([1, 1], [minus[13], plus[13]], 1);
constraint int_lin_eq([1, 1], [minus[14], plus[14]], 1);
constraint int_lin_eq([1, 1], [minus[15], plus[15]], 1);
constraint int_lin_eq([1, 1], [minus[16], plus[16]], 1);
constraint int_lin_eq([1, 1], [minus[17], plus[17]], 1);
constraint int_lin_eq([1, 1], [minus[18], plus[18]], 1);
constraint int_lin_eq([1, 1], [minus[19], plus[19]], 1);
constraint int_lin_eq([32, -32, 1], [minus[6], plus[6], result[6]], 0);
constraint int_lin_eq([72, -72, 1], [minus[1], plus[1], result[1]], 0);
constraint int_lin_eq([75, -75, 1], [minus[7], plus[7], result[7]], 0);
constraint int_lin_eq([97, -97, 1], [minus[4], plus[4], result[4]], 0);
constraint int_lin_eq([97, -97, 1], [minus[17], plus[17], result[17]], 0);
constraint int_lin_eq([100, -100, 1], [minus[19], plus[19], result[19]], 0);
constraint int_lin_eq([101, -101, 1], [minus[9], plus[9], result[9]], 0);
constraint int_lin_eq([101, -101, 1], [minus[12], plus[12], result[12]], 0);
constraint int_lin_eq([106, -106, 1], [minus[8], plus[8], result[8]], 0);
constraint int_lin_eq([107, -107, 1], [minus[3], plus[3], result[3]], 0);
constraint int_lin_eq([108, -108, 1], [minus[10], plus[10], result[10]], 0);
constraint int_lin_eq([108, -108, 1], [minus[11], plus[11], result[11]], 0);
constraint int_lin_eq([110, -110, 1], [minus[5], plus[5], result[5]], 0);
constraint int_lin_eq([110, -110, 1], [minus[18], plus[18], result[18]], 0);
constraint int_lin_eq([114, -114, 1], [minus[13], plus[13], result[13]], 0);
constraint int_lin_eq([114, -114, 1], [minus[16], plus[16], result[16]], 0);
constraint int_lin_eq([115, -115, 1], [minus[14], plus[14], result[14]], 0);
constraint int_lin_eq([116, -116, 1], [minus[15], plus[15], result[15]], 0);
constraint int_lin_eq([229, -229, 1], [minus[2], plus[2], result[2]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [num_minus, INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, INT____00016, INT____00018, INT____00020, INT____00022, INT____00024, INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036, INT____00038], 0);
constraint int_lin_eq([72, 229, 107, 97, 110, 32, 75, 106, 101, 108, 108, 101, 114, 115, 116, 114, 97, 110, 100, -72, -229, -107, -97, -110, -32, -75, -106, -101, -108, -108, -101, -114, -115, -116, -114, -97, -110, -100], [minus[1], minus[2], minus[3], minus[4], minus[5], minus[6], minus[7], minus[8], minus[9], minus[10], minus[11], minus[12], minus[13], minus[14], minus[15], minus[16], minus[17], minus[18], minus[19], plus[1], plus[2], plus[3], plus[4], plus[5], plus[6], plus[7], plus[8], plus[9], plus[10], plus[11], plus[12], plus[13], plus[14], plus[15], plus[16], plus[17], plus[18], plus[19]], -666);
solve satisfy;
