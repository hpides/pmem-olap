array [1..46] of var 1..15: E = [1, 2, 2, 3, 3, 4, 3, 8, 4, 9, 5, 1, 6, 5, 7, 5, 8, 6, 8, 7, 8, 9, 9, 10, 10, 11, 10, 14, 11, 15, 12, 7, 12, 8, 12, 13, 13, 8, 13, 12, 13, 14, 14, 9, 15, 14];
var 0..23: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..15] of var 1..15: k;
var 0..23: obj :: output_var = INT____00001;
array [1..23] of var 0..1: x :: output_array([1..23]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-1, 1, -23, -23], [k[1], k[5], x[1], x[5]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[5], k[6], x[5], x[6]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[5], k[7], x[5], x[7]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[6], k[8], x[6], x[8]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[7], k[8], x[7], x[8]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[7], k[12], x[7], x[12]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[8], k[12], x[8], x[12]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[8], k[13], x[8], x[13]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[9], k[14], x[9], x[14]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[12], k[13], x[12], x[13]], -1);
constraint int_lin_le([-1, 1, -23, -23], [k[14], k[15], x[14], x[15]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[1], k[2], x[1], x[2]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[2], k[3], x[2], x[3]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[3], k[4], x[3], x[4]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[3], k[8], x[3], x[8]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[4], k[9], x[4], x[9]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[8], k[9], x[8], x[9]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[9], k[10], x[9], x[10]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[10], k[11], x[10], x[11]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[10], k[14], x[10], x[14]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[11], k[15], x[11], x[15]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[12], k[13], x[12], x[13]], -1);
constraint int_lin_le([1, -1, -23, -23], [k[13], k[14], x[13], x[14]], -1);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], k[1], k[2], k[3], k[4], k[5], k[6], k[7], k[8], k[9], k[10], k[11], k[12], k[13], k[14], k[15], INT____00001], first_fail, indomain, complete) minimize INT____00001;
