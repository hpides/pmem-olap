var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00125 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00129 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00133 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00135 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00137 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00139 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00141 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00143 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00145 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00147 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00149 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00151 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00152 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00153 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00154 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00155 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00156 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00157 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00159 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00160 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00161 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00162 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00163 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00164 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00165 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00166 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00167 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00168 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00169 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00170 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00171 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00173 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00174 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00175 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00176 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00177 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00178 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00179 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00180 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00181 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00183 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00185 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00186 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00187 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00188 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00189 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00190 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00191 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00192 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00193 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00194 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00195 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00196 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00197 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00198 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00199 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00200 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00201 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00202 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00203 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00204 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00205 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00206 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00207 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00208 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00209 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00210 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00211 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00212 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00213 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00214 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00215 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00216 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00217 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00218 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00219 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00220 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00221 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00222 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00223 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00224 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00225 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00226 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00227 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00228 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00229 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00230 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00231 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00232 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00233 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00234 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00235 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00236 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00237 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00238 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00239 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00240 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00241 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00242 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00243 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00244 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00245 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00246 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00247 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00248 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00249 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00250 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00251 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00252 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00053 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00055 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00057 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00059 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00061 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00063 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00065 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00067 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00069 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00071 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00073 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00075 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00077 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00079 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00081 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00083 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00085 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00087 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00089 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00091 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00093 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00095 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00097 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00099 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00101 :: is_defined_var :: var_is_introduced;
var 1..12: INT____00102 :: is_defined_var :: var_is_introduced;
var 1..12: amountOfQueens :: output_var = INT____00102;
array [1..25] of var 0..2: board :: output_array([1..5, 1..5]);
constraint array_bool_and([BOOL____00103, BOOL____00120, BOOL____00130, BOOL____00104, BOOL____00125, BOOL____00127, BOOL____00107, BOOL____00129, BOOL____00122, BOOL____00110, BOOL____00115, BOOL____00114], BOOL____00152) :: defines_var(BOOL____00152);
constraint array_bool_and([BOOL____00113, BOOL____00110, BOOL____00105, BOOL____00118, BOOL____00127, BOOL____00119, BOOL____00124, BOOL____00122, BOOL____00120, BOOL____00126, BOOL____00112, BOOL____00114], BOOL____00151) :: defines_var(BOOL____00151);
constraint array_bool_and([BOOL____00113, BOOL____00110, BOOL____00106, BOOL____00125, BOOL____00126, BOOL____00117, BOOL____00129, BOOL____00121, BOOL____00130, BOOL____00118, BOOL____00115, BOOL____00111], BOOL____00147) :: defines_var(BOOL____00147);
constraint array_bool_and([BOOL____00113, BOOL____00114, BOOL____00120, BOOL____00112, BOOL____00121, BOOL____00125, BOOL____00109, BOOL____00107, BOOL____00129, BOOL____00106, BOOL____00103, BOOL____00124], BOOL____00132) :: defines_var(BOOL____00132);
constraint array_bool_and([BOOL____00113, BOOL____00115, BOOL____00111, BOOL____00130, BOOL____00124, BOOL____00108, BOOL____00127, BOOL____00107, BOOL____00105, BOOL____00122, BOOL____00103, BOOL____00121], BOOL____00148) :: defines_var(BOOL____00148);
constraint array_bool_and([BOOL____00113, BOOL____00120, BOOL____00118, BOOL____00107, BOOL____00127, BOOL____00109, BOOL____00129, BOOL____00119, BOOL____00110, BOOL____00124, BOOL____00115, BOOL____00108], BOOL____00142) :: defines_var(BOOL____00142);
constraint array_bool_and([BOOL____00113, BOOL____00120, BOOL____00124, BOOL____00122, BOOL____00125, BOOL____00117, BOOL____00104, BOOL____00126, BOOL____00118, BOOL____00112, BOOL____00115, BOOL____00105], BOOL____00137) :: defines_var(BOOL____00137);
constraint array_bool_and([BOOL____00113, BOOL____00121, BOOL____00130, BOOL____00129, BOOL____00119, BOOL____00127, BOOL____00104, BOOL____00118, BOOL____00126, BOOL____00111, BOOL____00106, BOOL____00114], BOOL____00149) :: defines_var(BOOL____00149);
constraint array_bool_and([BOOL____00113, BOOL____00126, BOOL____00130, BOOL____00107, BOOL____00125, BOOL____00108, BOOL____00117, BOOL____00122, BOOL____00110, BOOL____00121, BOOL____00109, BOOL____00114], BOOL____00150) :: defines_var(BOOL____00150);
constraint array_bool_and([BOOL____00114, BOOL____00115, BOOL____00113, BOOL____00111, BOOL____00112, BOOL____00110, BOOL____00108, BOOL____00109, BOOL____00104, BOOL____00107, BOOL____00105, BOOL____00106], BOOL____00116) :: defines_var(BOOL____00116);
constraint array_bool_and([BOOL____00114, BOOL____00120, BOOL____00110, BOOL____00112, BOOL____00108, BOOL____00126, BOOL____00117, BOOL____00105, BOOL____00121, BOOL____00119, BOOL____00103, BOOL____00122], BOOL____00143) :: defines_var(BOOL____00143);
constraint array_bool_and([BOOL____00114, BOOL____00125, BOOL____00111, BOOL____00118, BOOL____00107, BOOL____00109, BOOL____00127, BOOL____00105, BOOL____00119, BOOL____00104, BOOL____00103, BOOL____00121], BOOL____00138) :: defines_var(BOOL____00138);
constraint array_bool_and([BOOL____00114, BOOL____00129, BOOL____00111, BOOL____00124, BOOL____00130, BOOL____00108, BOOL____00117, BOOL____00104, BOOL____00126, BOOL____00106, BOOL____00103, BOOL____00119], BOOL____00133) :: defines_var(BOOL____00133);
constraint array_bool_and([BOOL____00122, BOOL____00115, BOOL____00121, BOOL____00112, BOOL____00120, BOOL____00119, BOOL____00109, BOOL____00104, BOOL____00118, BOOL____00105, BOOL____00103, BOOL____00117], BOOL____00123) :: defines_var(BOOL____00123);
constraint array_bool_and([BOOL____00127, BOOL____00115, BOOL____00126, BOOL____00112, BOOL____00107, BOOL____00108, BOOL____00125, BOOL____00117, BOOL____00106, BOOL____00104, BOOL____00103, BOOL____00124], BOOL____00128) :: defines_var(BOOL____00128);
constraint array_bool_and([BOOL____00130, BOOL____00115, BOOL____00110, BOOL____00111, BOOL____00118, BOOL____00109, BOOL____00119, BOOL____00124, BOOL____00106, BOOL____00117, BOOL____00103, BOOL____00129], BOOL____00131) :: defines_var(BOOL____00131);
constraint array_bool_and([BOOL____00183, BOOL____00174, BOOL____00161, BOOL____00198, BOOL____00223, BOOL____00201, BOOL____00214, BOOL____00210, BOOL____00204, BOOL____00220, BOOL____00180, BOOL____00188], BOOL____00251) :: defines_var(BOOL____00251);
constraint array_bool_and([BOOL____00183, BOOL____00174, BOOL____00162, BOOL____00217, BOOL____00220, BOOL____00195, BOOL____00227, BOOL____00207, BOOL____00230, BOOL____00198, BOOL____00189, BOOL____00179], BOOL____00247) :: defines_var(BOOL____00247);
constraint array_bool_and([BOOL____00183, BOOL____00188, BOOL____00204, BOOL____00180, BOOL____00207, BOOL____00217, BOOL____00171, BOOL____00165, BOOL____00227, BOOL____00162, BOOL____00194, BOOL____00214], BOOL____00232) :: defines_var(BOOL____00232);
constraint array_bool_and([BOOL____00183, BOOL____00189, BOOL____00179, BOOL____00230, BOOL____00214, BOOL____00170, BOOL____00223, BOOL____00165, BOOL____00161, BOOL____00210, BOOL____00194, BOOL____00207], BOOL____00248) :: defines_var(BOOL____00248);
constraint array_bool_and([BOOL____00183, BOOL____00204, BOOL____00198, BOOL____00165, BOOL____00223, BOOL____00171, BOOL____00227, BOOL____00201, BOOL____00174, BOOL____00214, BOOL____00189, BOOL____00170], BOOL____00242) :: defines_var(BOOL____00242);
constraint array_bool_and([BOOL____00183, BOOL____00204, BOOL____00214, BOOL____00210, BOOL____00217, BOOL____00195, BOOL____00190, BOOL____00220, BOOL____00198, BOOL____00180, BOOL____00189, BOOL____00161], BOOL____00237) :: defines_var(BOOL____00237);
constraint array_bool_and([BOOL____00183, BOOL____00207, BOOL____00230, BOOL____00227, BOOL____00201, BOOL____00223, BOOL____00190, BOOL____00198, BOOL____00220, BOOL____00179, BOOL____00162, BOOL____00188], BOOL____00249) :: defines_var(BOOL____00249);
constraint array_bool_and([BOOL____00183, BOOL____00220, BOOL____00230, BOOL____00165, BOOL____00217, BOOL____00170, BOOL____00195, BOOL____00210, BOOL____00174, BOOL____00207, BOOL____00171, BOOL____00188], BOOL____00250) :: defines_var(BOOL____00250);
constraint array_bool_and([BOOL____00188, BOOL____00189, BOOL____00183, BOOL____00179, BOOL____00180, BOOL____00174, BOOL____00170, BOOL____00171, BOOL____00190, BOOL____00165, BOOL____00161, BOOL____00162], BOOL____00191) :: defines_var(BOOL____00191);
constraint array_bool_and([BOOL____00188, BOOL____00204, BOOL____00174, BOOL____00180, BOOL____00170, BOOL____00220, BOOL____00195, BOOL____00161, BOOL____00207, BOOL____00201, BOOL____00194, BOOL____00210], BOOL____00243) :: defines_var(BOOL____00243);
constraint array_bool_and([BOOL____00188, BOOL____00217, BOOL____00179, BOOL____00198, BOOL____00165, BOOL____00171, BOOL____00223, BOOL____00161, BOOL____00201, BOOL____00190, BOOL____00194, BOOL____00207], BOOL____00238) :: defines_var(BOOL____00238);
constraint array_bool_and([BOOL____00188, BOOL____00227, BOOL____00179, BOOL____00214, BOOL____00230, BOOL____00170, BOOL____00195, BOOL____00190, BOOL____00220, BOOL____00162, BOOL____00194, BOOL____00201], BOOL____00233) :: defines_var(BOOL____00233);
constraint array_bool_and([BOOL____00194, BOOL____00204, BOOL____00230, BOOL____00190, BOOL____00217, BOOL____00223, BOOL____00165, BOOL____00227, BOOL____00210, BOOL____00174, BOOL____00189, BOOL____00188], BOOL____00252) :: defines_var(BOOL____00252);
constraint array_bool_and([BOOL____00210, BOOL____00189, BOOL____00207, BOOL____00180, BOOL____00204, BOOL____00201, BOOL____00171, BOOL____00190, BOOL____00198, BOOL____00161, BOOL____00194, BOOL____00195], BOOL____00211) :: defines_var(BOOL____00211);
constraint array_bool_and([BOOL____00223, BOOL____00189, BOOL____00220, BOOL____00180, BOOL____00165, BOOL____00170, BOOL____00217, BOOL____00195, BOOL____00162, BOOL____00190, BOOL____00194, BOOL____00214], BOOL____00224) :: defines_var(BOOL____00224);
constraint array_bool_and([BOOL____00230, BOOL____00189, BOOL____00174, BOOL____00179, BOOL____00198, BOOL____00171, BOOL____00201, BOOL____00214, BOOL____00162, BOOL____00195, BOOL____00194, BOOL____00227], BOOL____00231) :: defines_var(BOOL____00231);
constraint array_bool_and([BOOL____00122, BOOL____00120, BOOL____00110, BOOL____00115, BOOL____00119, BOOL____00126, BOOL____00104, BOOL____00124, BOOL____00107, BOOL____00114, BOOL____00108, BOOL____00127, BOOL____00106, BOOL____00111], BOOL____00144) :: defines_var(BOOL____00144);
constraint array_bool_and([BOOL____00122, BOOL____00125, BOOL____00121, BOOL____00118, BOOL____00107, BOOL____00112, BOOL____00104, BOOL____00130, BOOL____00117, BOOL____00111, BOOL____00105, BOOL____00126, BOOL____00106, BOOL____00108], BOOL____00139) :: defines_var(BOOL____00139);
constraint array_bool_and([BOOL____00122, BOOL____00129, BOOL____00121, BOOL____00124, BOOL____00113, BOOL____00119, BOOL____00117, BOOL____00110, BOOL____00109, BOOL____00108, BOOL____00103, BOOL____00107, BOOL____00106, BOOL____00105], BOOL____00134) :: defines_var(BOOL____00134);
constraint array_bool_and([BOOL____00127, BOOL____00120, BOOL____00110, BOOL____00107, BOOL____00129, BOOL____00105, BOOL____00117, BOOL____00121, BOOL____00118, BOOL____00122, BOOL____00119, BOOL____00130, BOOL____00109, BOOL____00111], BOOL____00145) :: defines_var(BOOL____00145);
constraint array_bool_and([BOOL____00127, BOOL____00129, BOOL____00126, BOOL____00124, BOOL____00107, BOOL____00111, BOOL____00104, BOOL____00120, BOOL____00112, BOOL____00119, BOOL____00106, BOOL____00118, BOOL____00109, BOOL____00105], BOOL____00135) :: defines_var(BOOL____00135);
constraint array_bool_and([BOOL____00130, BOOL____00120, BOOL____00103, BOOL____00118, BOOL____00126, BOOL____00104, BOOL____00124, BOOL____00121, BOOL____00125, BOOL____00127, BOOL____00107, BOOL____00113, BOOL____00112, BOOL____00111], BOOL____00146) :: defines_var(BOOL____00146);
constraint array_bool_and([BOOL____00130, BOOL____00125, BOOL____00110, BOOL____00107, BOOL____00122, BOOL____00106, BOOL____00124, BOOL____00119, BOOL____00129, BOOL____00126, BOOL____00117, BOOL____00120, BOOL____00112, BOOL____00108], BOOL____00141) :: defines_var(BOOL____00141);
constraint array_bool_and([BOOL____00130, BOOL____00129, BOOL____00110, BOOL____00114, BOOL____00118, BOOL____00117, BOOL____00104, BOOL____00121, BOOL____00115, BOOL____00107, BOOL____00109, BOOL____00125, BOOL____00112, BOOL____00105], BOOL____00136) :: defines_var(BOOL____00136);
constraint array_bool_and([BOOL____00210, BOOL____00204, BOOL____00174, BOOL____00189, BOOL____00201, BOOL____00220, BOOL____00190, BOOL____00214, BOOL____00165, BOOL____00188, BOOL____00170, BOOL____00223, BOOL____00162, BOOL____00179], BOOL____00244) :: defines_var(BOOL____00244);
constraint array_bool_and([BOOL____00210, BOOL____00217, BOOL____00207, BOOL____00198, BOOL____00165, BOOL____00180, BOOL____00190, BOOL____00230, BOOL____00195, BOOL____00179, BOOL____00161, BOOL____00220, BOOL____00162, BOOL____00170], BOOL____00239) :: defines_var(BOOL____00239);
constraint array_bool_and([BOOL____00210, BOOL____00227, BOOL____00207, BOOL____00214, BOOL____00183, BOOL____00201, BOOL____00195, BOOL____00174, BOOL____00171, BOOL____00170, BOOL____00194, BOOL____00165, BOOL____00162, BOOL____00161], BOOL____00234) :: defines_var(BOOL____00234);
constraint array_bool_and([BOOL____00223, BOOL____00204, BOOL____00174, BOOL____00165, BOOL____00227, BOOL____00161, BOOL____00195, BOOL____00207, BOOL____00198, BOOL____00210, BOOL____00201, BOOL____00230, BOOL____00171, BOOL____00179], BOOL____00245) :: defines_var(BOOL____00245);
constraint array_bool_and([BOOL____00223, BOOL____00227, BOOL____00220, BOOL____00214, BOOL____00165, BOOL____00179, BOOL____00190, BOOL____00204, BOOL____00180, BOOL____00201, BOOL____00162, BOOL____00198, BOOL____00171, BOOL____00161], BOOL____00235) :: defines_var(BOOL____00235);
constraint array_bool_and([BOOL____00230, BOOL____00204, BOOL____00194, BOOL____00198, BOOL____00220, BOOL____00190, BOOL____00214, BOOL____00207, BOOL____00217, BOOL____00223, BOOL____00165, BOOL____00183, BOOL____00180, BOOL____00179], BOOL____00246) :: defines_var(BOOL____00246);
constraint array_bool_and([BOOL____00230, BOOL____00217, BOOL____00174, BOOL____00165, BOOL____00210, BOOL____00162, BOOL____00214, BOOL____00201, BOOL____00227, BOOL____00220, BOOL____00195, BOOL____00204, BOOL____00180, BOOL____00170], BOOL____00241) :: defines_var(BOOL____00241);
constraint array_bool_and([BOOL____00230, BOOL____00227, BOOL____00174, BOOL____00188, BOOL____00198, BOOL____00195, BOOL____00190, BOOL____00207, BOOL____00189, BOOL____00165, BOOL____00171, BOOL____00217, BOOL____00180, BOOL____00161], BOOL____00236) :: defines_var(BOOL____00236);
constraint array_bool_and([BOOL____00127, BOOL____00125, BOOL____00126, BOOL____00118, BOOL____00115, BOOL____00114, BOOL____00103, BOOL____00113, BOOL____00117, BOOL____00119, BOOL____00124, BOOL____00121, BOOL____00104, BOOL____00110, BOOL____00109, BOOL____00108], BOOL____00140) :: defines_var(BOOL____00140);
constraint array_bool_and([BOOL____00223, BOOL____00217, BOOL____00220, BOOL____00198, BOOL____00189, BOOL____00188, BOOL____00194, BOOL____00183, BOOL____00195, BOOL____00201, BOOL____00214, BOOL____00207, BOOL____00190, BOOL____00174, BOOL____00171, BOOL____00170], BOOL____00240) :: defines_var(BOOL____00240);
constraint array_bool_or([BOOL____00153, BOOL____00154], BOOL____00194) :: defines_var(BOOL____00194);
constraint array_bool_or([BOOL____00155, BOOL____00156], BOOL____00190) :: defines_var(BOOL____00190);
constraint array_bool_or([BOOL____00157, BOOL____00158], BOOL____00161) :: defines_var(BOOL____00161);
constraint array_bool_or([BOOL____00159, BOOL____00160], BOOL____00162) :: defines_var(BOOL____00162);
constraint array_bool_or([BOOL____00163, BOOL____00164], BOOL____00165) :: defines_var(BOOL____00165);
constraint array_bool_or([BOOL____00166, BOOL____00167], BOOL____00170) :: defines_var(BOOL____00170);
constraint array_bool_or([BOOL____00168, BOOL____00169], BOOL____00171) :: defines_var(BOOL____00171);
constraint array_bool_or([BOOL____00172, BOOL____00173], BOOL____00174) :: defines_var(BOOL____00174);
constraint array_bool_or([BOOL____00175, BOOL____00176], BOOL____00179) :: defines_var(BOOL____00179);
constraint array_bool_or([BOOL____00177, BOOL____00178], BOOL____00180) :: defines_var(BOOL____00180);
constraint array_bool_or([BOOL____00181, BOOL____00182], BOOL____00183) :: defines_var(BOOL____00183);
constraint array_bool_or([BOOL____00184, BOOL____00185], BOOL____00188) :: defines_var(BOOL____00188);
constraint array_bool_or([BOOL____00186, BOOL____00187], BOOL____00189) :: defines_var(BOOL____00189);
constraint array_bool_or([BOOL____00192, BOOL____00193], BOOL____00195) :: defines_var(BOOL____00195);
constraint array_bool_or([BOOL____00196, BOOL____00197], BOOL____00198) :: defines_var(BOOL____00198);
constraint array_bool_or([BOOL____00199, BOOL____00200], BOOL____00201) :: defines_var(BOOL____00201);
constraint array_bool_or([BOOL____00202, BOOL____00203], BOOL____00204) :: defines_var(BOOL____00204);
constraint array_bool_or([BOOL____00205, BOOL____00206], BOOL____00207) :: defines_var(BOOL____00207);
constraint array_bool_or([BOOL____00208, BOOL____00209], BOOL____00210) :: defines_var(BOOL____00210);
constraint array_bool_or([BOOL____00212, BOOL____00213], BOOL____00214) :: defines_var(BOOL____00214);
constraint array_bool_or([BOOL____00215, BOOL____00216], BOOL____00217) :: defines_var(BOOL____00217);
constraint array_bool_or([BOOL____00218, BOOL____00219], BOOL____00220) :: defines_var(BOOL____00220);
constraint array_bool_or([BOOL____00221, BOOL____00222], BOOL____00223) :: defines_var(BOOL____00223);
constraint array_bool_or([BOOL____00225, BOOL____00226], BOOL____00227) :: defines_var(BOOL____00227);
constraint array_bool_or([BOOL____00228, BOOL____00229], BOOL____00230) :: defines_var(BOOL____00230);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00052, INT____00053) :: defines_var(INT____00053);
constraint bool2int(BOOL____00054, INT____00055) :: defines_var(INT____00055);
constraint bool2int(BOOL____00056, INT____00057) :: defines_var(INT____00057);
constraint bool2int(BOOL____00058, INT____00059) :: defines_var(INT____00059);
constraint bool2int(BOOL____00060, INT____00061) :: defines_var(INT____00061);
constraint bool2int(BOOL____00062, INT____00063) :: defines_var(INT____00063);
constraint bool2int(BOOL____00064, INT____00065) :: defines_var(INT____00065);
constraint bool2int(BOOL____00066, INT____00067) :: defines_var(INT____00067);
constraint bool2int(BOOL____00068, INT____00069) :: defines_var(INT____00069);
constraint bool2int(BOOL____00070, INT____00071) :: defines_var(INT____00071);
constraint bool2int(BOOL____00072, INT____00073) :: defines_var(INT____00073);
constraint bool2int(BOOL____00074, INT____00075) :: defines_var(INT____00075);
constraint bool2int(BOOL____00076, INT____00077) :: defines_var(INT____00077);
constraint bool2int(BOOL____00078, INT____00079) :: defines_var(INT____00079);
constraint bool2int(BOOL____00080, INT____00081) :: defines_var(INT____00081);
constraint bool2int(BOOL____00082, INT____00083) :: defines_var(INT____00083);
constraint bool2int(BOOL____00084, INT____00085) :: defines_var(INT____00085);
constraint bool2int(BOOL____00086, INT____00087) :: defines_var(INT____00087);
constraint bool2int(BOOL____00088, INT____00089) :: defines_var(INT____00089);
constraint bool2int(BOOL____00090, INT____00091) :: defines_var(INT____00091);
constraint bool2int(BOOL____00092, INT____00093) :: defines_var(INT____00093);
constraint bool2int(BOOL____00094, INT____00095) :: defines_var(INT____00095);
constraint bool2int(BOOL____00096, INT____00097) :: defines_var(INT____00097);
constraint bool2int(BOOL____00098, INT____00099) :: defines_var(INT____00099);
constraint bool2int(BOOL____00100, INT____00101) :: defines_var(INT____00101);
constraint bool_le(BOOL____00001, BOOL____00116);
constraint bool_le(BOOL____00003, BOOL____00123);
constraint bool_le(BOOL____00005, BOOL____00128);
constraint bool_le(BOOL____00007, BOOL____00131);
constraint bool_le(BOOL____00009, BOOL____00132);
constraint bool_le(BOOL____00011, BOOL____00133);
constraint bool_le(BOOL____00013, BOOL____00134);
constraint bool_le(BOOL____00015, BOOL____00135);
constraint bool_le(BOOL____00017, BOOL____00136);
constraint bool_le(BOOL____00019, BOOL____00137);
constraint bool_le(BOOL____00021, BOOL____00138);
constraint bool_le(BOOL____00023, BOOL____00139);
constraint bool_le(BOOL____00025, BOOL____00140);
constraint bool_le(BOOL____00027, BOOL____00141);
constraint bool_le(BOOL____00029, BOOL____00142);
constraint bool_le(BOOL____00031, BOOL____00143);
constraint bool_le(BOOL____00033, BOOL____00144);
constraint bool_le(BOOL____00035, BOOL____00145);
constraint bool_le(BOOL____00037, BOOL____00146);
constraint bool_le(BOOL____00039, BOOL____00147);
constraint bool_le(BOOL____00041, BOOL____00148);
constraint bool_le(BOOL____00043, BOOL____00149);
constraint bool_le(BOOL____00045, BOOL____00150);
constraint bool_le(BOOL____00047, BOOL____00151);
constraint bool_le(BOOL____00049, BOOL____00152);
constraint bool_le(BOOL____00052, BOOL____00191);
constraint bool_le(BOOL____00054, BOOL____00211);
constraint bool_le(BOOL____00056, BOOL____00224);
constraint bool_le(BOOL____00058, BOOL____00231);
constraint bool_le(BOOL____00060, BOOL____00232);
constraint bool_le(BOOL____00062, BOOL____00233);
constraint bool_le(BOOL____00064, BOOL____00234);
constraint bool_le(BOOL____00066, BOOL____00235);
constraint bool_le(BOOL____00068, BOOL____00236);
constraint bool_le(BOOL____00070, BOOL____00237);
constraint bool_le(BOOL____00072, BOOL____00238);
constraint bool_le(BOOL____00074, BOOL____00239);
constraint bool_le(BOOL____00076, BOOL____00240);
constraint bool_le(BOOL____00078, BOOL____00241);
constraint bool_le(BOOL____00080, BOOL____00242);
constraint bool_le(BOOL____00082, BOOL____00243);
constraint bool_le(BOOL____00084, BOOL____00244);
constraint bool_le(BOOL____00086, BOOL____00245);
constraint bool_le(BOOL____00088, BOOL____00246);
constraint bool_le(BOOL____00090, BOOL____00247);
constraint bool_le(BOOL____00092, BOOL____00248);
constraint bool_le(BOOL____00094, BOOL____00249);
constraint bool_le(BOOL____00096, BOOL____00250);
constraint bool_le(BOOL____00098, BOOL____00251);
constraint bool_le(BOOL____00100, BOOL____00252);
constraint int_eq(board[1], 1);
constraint int_eq_reif(board[1], 1, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(board[1], 2, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(board[2], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(board[2], 2, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(board[3], 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(board[3], 2, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(board[4], 1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(board[4], 2, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(board[5], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(board[5], 2, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(board[6], 1, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(board[6], 2, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(board[7], 1, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(board[7], 2, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(board[8], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(board[8], 2, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(board[9], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(board[9], 2, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(board[10], 1, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(board[10], 2, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(board[11], 1, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(board[11], 2, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(board[12], 1, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(board[12], 2, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(board[13], 1, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(board[13], 2, BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(board[14], 1, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(board[14], 2, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_eq_reif(board[15], 1, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(board[15], 2, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(board[16], 1, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(board[16], 2, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_eq_reif(board[17], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(board[17], 2, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(board[18], 1, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(board[18], 2, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(board[19], 1, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(board[19], 2, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(board[20], 1, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(board[20], 2, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(board[21], 1, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(board[21], 2, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(board[22], 1, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(board[22], 2, BOOL____00094) :: defines_var(BOOL____00094);
constraint int_eq_reif(board[23], 1, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(board[23], 2, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_eq_reif(board[24], 1, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(board[24], 2, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_eq_reif(board[25], 1, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(board[25], 2, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00102, INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, INT____00016, INT____00018, INT____00020, INT____00022, INT____00024, INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036, INT____00038, INT____00040, INT____00042, INT____00044, INT____00046, INT____00048, INT____00050], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00102, INT____00053, INT____00055, INT____00057, INT____00059, INT____00061, INT____00063, INT____00065, INT____00067, INT____00069, INT____00071, INT____00073, INT____00075, INT____00077, INT____00079, INT____00081, INT____00083, INT____00085, INT____00087, INT____00089, INT____00091, INT____00093, INT____00095, INT____00097, INT____00099, INT____00101], 0) :: defines_var(INT____00102);
constraint int_lt_reif(1, board[1], BOOL____00154) :: defines_var(BOOL____00154);
constraint int_lt_reif(1, board[2], BOOL____00160) :: defines_var(BOOL____00160);
constraint int_lt_reif(1, board[3], BOOL____00169) :: defines_var(BOOL____00169);
constraint int_lt_reif(1, board[4], BOOL____00178) :: defines_var(BOOL____00178);
constraint int_lt_reif(1, board[5], BOOL____00187) :: defines_var(BOOL____00187);
constraint int_lt_reif(1, board[6], BOOL____00158) :: defines_var(BOOL____00158);
constraint int_lt_reif(1, board[7], BOOL____00156) :: defines_var(BOOL____00156);
constraint int_lt_reif(1, board[8], BOOL____00193) :: defines_var(BOOL____00193);
constraint int_lt_reif(1, board[9], BOOL____00213) :: defines_var(BOOL____00213);
constraint int_lt_reif(1, board[10], BOOL____00226) :: defines_var(BOOL____00226);
constraint int_lt_reif(1, board[11], BOOL____00167) :: defines_var(BOOL____00167);
constraint int_lt_reif(1, board[12], BOOL____00200) :: defines_var(BOOL____00200);
constraint int_lt_reif(1, board[13], BOOL____00164) :: defines_var(BOOL____00164);
constraint int_lt_reif(1, board[14], BOOL____00197) :: defines_var(BOOL____00197);
constraint int_lt_reif(1, board[15], BOOL____00216) :: defines_var(BOOL____00216);
constraint int_lt_reif(1, board[16], BOOL____00176) :: defines_var(BOOL____00176);
constraint int_lt_reif(1, board[17], BOOL____00206) :: defines_var(BOOL____00206);
constraint int_lt_reif(1, board[18], BOOL____00219) :: defines_var(BOOL____00219);
constraint int_lt_reif(1, board[19], BOOL____00173) :: defines_var(BOOL____00173);
constraint int_lt_reif(1, board[20], BOOL____00203) :: defines_var(BOOL____00203);
constraint int_lt_reif(1, board[21], BOOL____00185) :: defines_var(BOOL____00185);
constraint int_lt_reif(1, board[22], BOOL____00209) :: defines_var(BOOL____00209);
constraint int_lt_reif(1, board[23], BOOL____00222) :: defines_var(BOOL____00222);
constraint int_lt_reif(1, board[24], BOOL____00229) :: defines_var(BOOL____00229);
constraint int_lt_reif(1, board[25], BOOL____00182) :: defines_var(BOOL____00182);
constraint int_lt_reif(board[1], 1, BOOL____00153) :: defines_var(BOOL____00153);
constraint int_lt_reif(board[1], 2, BOOL____00103) :: defines_var(BOOL____00103);
constraint int_lt_reif(board[2], 1, BOOL____00159) :: defines_var(BOOL____00159);
constraint int_lt_reif(board[2], 2, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_lt_reif(board[3], 1, BOOL____00168) :: defines_var(BOOL____00168);
constraint int_lt_reif(board[3], 2, BOOL____00109) :: defines_var(BOOL____00109);
constraint int_lt_reif(board[4], 1, BOOL____00177) :: defines_var(BOOL____00177);
constraint int_lt_reif(board[4], 2, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_lt_reif(board[5], 1, BOOL____00186) :: defines_var(BOOL____00186);
constraint int_lt_reif(board[5], 2, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_lt_reif(board[6], 1, BOOL____00157) :: defines_var(BOOL____00157);
constraint int_lt_reif(board[6], 2, BOOL____00105) :: defines_var(BOOL____00105);
constraint int_lt_reif(board[7], 1, BOOL____00155) :: defines_var(BOOL____00155);
constraint int_lt_reif(board[7], 2, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_lt_reif(board[8], 1, BOOL____00192) :: defines_var(BOOL____00192);
constraint int_lt_reif(board[8], 2, BOOL____00117) :: defines_var(BOOL____00117);
constraint int_lt_reif(board[9], 1, BOOL____00212) :: defines_var(BOOL____00212);
constraint int_lt_reif(board[9], 2, BOOL____00124) :: defines_var(BOOL____00124);
constraint int_lt_reif(board[10], 1, BOOL____00225) :: defines_var(BOOL____00225);
constraint int_lt_reif(board[10], 2, BOOL____00129) :: defines_var(BOOL____00129);
constraint int_lt_reif(board[11], 1, BOOL____00166) :: defines_var(BOOL____00166);
constraint int_lt_reif(board[11], 2, BOOL____00108) :: defines_var(BOOL____00108);
constraint int_lt_reif(board[12], 1, BOOL____00199) :: defines_var(BOOL____00199);
constraint int_lt_reif(board[12], 2, BOOL____00119) :: defines_var(BOOL____00119);
constraint int_lt_reif(board[13], 1, BOOL____00163) :: defines_var(BOOL____00163);
constraint int_lt_reif(board[13], 2, BOOL____00107) :: defines_var(BOOL____00107);
constraint int_lt_reif(board[14], 1, BOOL____00196) :: defines_var(BOOL____00196);
constraint int_lt_reif(board[14], 2, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_lt_reif(board[15], 1, BOOL____00215) :: defines_var(BOOL____00215);
constraint int_lt_reif(board[15], 2, BOOL____00125) :: defines_var(BOOL____00125);
constraint int_lt_reif(board[16], 1, BOOL____00175) :: defines_var(BOOL____00175);
constraint int_lt_reif(board[16], 2, BOOL____00111) :: defines_var(BOOL____00111);
constraint int_lt_reif(board[17], 1, BOOL____00205) :: defines_var(BOOL____00205);
constraint int_lt_reif(board[17], 2, BOOL____00121) :: defines_var(BOOL____00121);
constraint int_lt_reif(board[18], 1, BOOL____00218) :: defines_var(BOOL____00218);
constraint int_lt_reif(board[18], 2, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_lt_reif(board[19], 1, BOOL____00172) :: defines_var(BOOL____00172);
constraint int_lt_reif(board[19], 2, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_lt_reif(board[20], 1, BOOL____00202) :: defines_var(BOOL____00202);
constraint int_lt_reif(board[20], 2, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_lt_reif(board[21], 1, BOOL____00184) :: defines_var(BOOL____00184);
constraint int_lt_reif(board[21], 2, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_lt_reif(board[22], 1, BOOL____00208) :: defines_var(BOOL____00208);
constraint int_lt_reif(board[22], 2, BOOL____00122) :: defines_var(BOOL____00122);
constraint int_lt_reif(board[23], 1, BOOL____00221) :: defines_var(BOOL____00221);
constraint int_lt_reif(board[23], 2, BOOL____00127) :: defines_var(BOOL____00127);
constraint int_lt_reif(board[24], 1, BOOL____00228) :: defines_var(BOOL____00228);
constraint int_lt_reif(board[24], 2, BOOL____00130) :: defines_var(BOOL____00130);
constraint int_lt_reif(board[25], 1, BOOL____00181) :: defines_var(BOOL____00181);
constraint int_lt_reif(board[25], 2, BOOL____00113) :: defines_var(BOOL____00113);
solve  :: int_search([board[1], board[2], board[3], board[4], board[5], board[6], board[7], board[8], board[9], board[10], board[11], board[12], board[13], board[14], board[15], board[16], board[17], board[18], board[19], board[20], board[21], board[22], board[23], board[24], board[25]], first_fail, indomain, complete) maximize INT____00102;
