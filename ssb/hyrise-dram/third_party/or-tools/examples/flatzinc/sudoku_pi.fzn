predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..144] of int: dat = [4, 9, 7, -1, 5, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 8, 0, 0, 9, 6, 1, 5, 2, 0, 0, 8, 0, 1, 0, 0, 0, -1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 4, 0, 0, 5, 3, 9, 6, 0, 0, 0, 0, 0, 0, 0, 0, 9, 4, 0, -1, -1, -1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 2, 5, -1, 0, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 3, 8, 0, 7, 8, 4, 6, 9, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, -1, 0, 0, 4, 7, 1, 6, 9, 0, 0, 4, 0, 1, 0, 0, 0, 6, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 5, 0];
array [1..11] of int: occ = [3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1];
array [1..11] of int: occ2 = [3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1];
array [1..288] of int: regions = [1, 1, 1, 2, 1, 3, 2, 1, 2, 2, 2, 3, 3, 1, 3, 2, 4, 1, 4, 2, 5, 1, 5, 2, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 2, 4, 2, 5, 2, 6, 2, 7, 2, 8, 2, 9, 1, 10, 1, 11, 1, 12, 2, 10, 2, 11, 2, 12, 3, 11, 3, 12, 4, 11, 4, 12, 5, 11, 5, 12, 3, 3, 3, 4, 3, 5, 3, 6, 4, 3, 4, 4, 4, 5, 4, 6, 5, 3, 5, 4, 5, 5, 5, 6, 3, 7, 3, 8, 3, 9, 3, 10, 4, 7, 4, 8, 4, 9, 4, 10, 5, 7, 5, 8, 5, 9, 5, 10, 6, 1, 6, 2, 6, 3, 7, 1, 7, 2, 7, 3, 8, 1, 8, 2, 8, 3, 9, 1, 9, 2, 9, 3, 6, 4, 6, 5, 7, 4, 7, 5, 8, 4, 8, 5, 9, 4, 9, 5, 10, 4, 10, 5, 11, 4, 11, 5, 6, 6, 6, 7, 7, 6, 7, 7, 8, 6, 8, 7, 9, 6, 9, 7, 10, 6, 10, 7, 11, 6, 11, 7, 6, 8, 6, 9, 7, 8, 7, 9, 8, 8, 8, 9, 9, 8, 9, 9, 10, 8, 10, 9, 11, 8, 11, 9, 6, 10, 6, 11, 6, 12, 7, 10, 7, 11, 7, 12, 8, 10, 8, 11, 8, 12, 9, 10, 9, 11, 9, 12, 10, 1, 10, 2, 10, 3, 11, 1, 11, 2, 11, 3, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 10, 10, 10, 11, 10, 12, 11, 10, 11, 11, 11, 12, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12, 12];
array [1..144] of var -1..9: x :: output_array([1..12, 1..12]);
constraint global_cardinality([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[1], x[2], x[3], x[13], x[14], x[15], x[25], x[26], x[37], x[38], x[49], x[50]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[1], x[13], x[25], x[37], x[49], x[61], x[73], x[85], x[97], x[109], x[121], x[133]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[2], x[14], x[26], x[38], x[50], x[62], x[74], x[86], x[98], x[110], x[122], x[134]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[3], x[15], x[27], x[39], x[51], x[63], x[75], x[87], x[99], x[111], x[123], x[135]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[4], x[5], x[6], x[7], x[8], x[9], x[16], x[17], x[18], x[19], x[20], x[21]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[4], x[16], x[28], x[40], x[52], x[64], x[76], x[88], x[100], x[112], x[124], x[136]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[5], x[17], x[29], x[41], x[53], x[65], x[77], x[89], x[101], x[113], x[125], x[137]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[6], x[18], x[30], x[42], x[54], x[66], x[78], x[90], x[102], x[114], x[126], x[138]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[7], x[19], x[31], x[43], x[55], x[67], x[79], x[91], x[103], x[115], x[127], x[139]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[8], x[20], x[32], x[44], x[56], x[68], x[80], x[92], x[104], x[116], x[128], x[140]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[9], x[21], x[33], x[45], x[57], x[69], x[81], x[93], x[105], x[117], x[129], x[141]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[10], x[11], x[12], x[22], x[23], x[24], x[35], x[36], x[47], x[48], x[59], x[60]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[10], x[22], x[34], x[46], x[58], x[70], x[82], x[94], x[106], x[118], x[130], x[142]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[11], x[23], x[35], x[47], x[59], x[71], x[83], x[95], x[107], x[119], x[131], x[143]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[12], x[24], x[36], x[48], x[60], x[72], x[84], x[96], x[108], x[120], x[132], x[144]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[27], x[28], x[29], x[30], x[39], x[40], x[41], x[42], x[51], x[52], x[53], x[54]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[31], x[32], x[33], x[34], x[43], x[44], x[45], x[46], x[55], x[56], x[57], x[58]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[61], x[62], x[63], x[73], x[74], x[75], x[85], x[86], x[87], x[97], x[98], x[99]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[64], x[65], x[76], x[77], x[88], x[89], x[100], x[101], x[112], x[113], x[124], x[125]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[66], x[67], x[78], x[79], x[90], x[91], x[102], x[103], x[114], x[115], x[126], x[127]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[68], x[69], x[80], x[81], x[92], x[93], x[104], x[105], x[116], x[117], x[128], x[129]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[70], x[71], x[72], x[82], x[83], x[84], x[94], x[95], x[96], x[106], x[107], x[108]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[109], x[110], x[111], x[121], x[122], x[123], x[133], x[134], x[135], x[136], x[137], x[138]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[118], x[119], x[120], x[130], x[131], x[132], x[139], x[140], x[141], x[142], x[143], x[144]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint global_cardinality([x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], occ) :: domain;
constraint int_eq(x[1], 4);
constraint int_eq(x[2], 9);
constraint int_eq(x[3], 7);
constraint int_eq(x[4], -1);
constraint int_eq(x[5], 5);
constraint int_eq(x[14], -1);
constraint int_eq(x[16], 8);
constraint int_eq(x[19], 9);
constraint int_eq(x[20], 6);
constraint int_eq(x[21], 1);
constraint int_eq(x[22], 5);
constraint int_eq(x[23], 2);
constraint int_eq(x[26], 8);
constraint int_eq(x[28], 1);
constraint int_eq(x[32], -1);
constraint int_eq(x[34], 7);
constraint int_eq(x[44], -1);
constraint int_eq(x[46], 4);
constraint int_eq(x[49], 5);
constraint int_eq(x[50], 3);
constraint int_eq(x[51], 9);
constraint int_eq(x[52], 6);
constraint int_eq(x[61], 9);
constraint int_eq(x[62], 4);
constraint int_eq(x[64], -1);
constraint int_eq(x[65], -1);
constraint int_eq(x[66], -1);
constraint int_eq(x[67], 7);
constraint int_eq(x[78], 6);
constraint int_eq(x[79], 2);
constraint int_eq(x[80], 5);
constraint int_eq(x[81], -1);
constraint int_eq(x[83], 7);
constraint int_eq(x[84], 4);
constraint int_eq(x[93], -1);
constraint int_eq(x[94], -1);
constraint int_eq(x[95], 3);
constraint int_eq(x[96], 8);
constraint int_eq(x[98], 7);
constraint int_eq(x[99], 8);
constraint int_eq(x[100], 4);
constraint int_eq(x[101], 6);
constraint int_eq(x[102], 9);
constraint int_eq(x[111], 3);
constraint int_eq(x[113], -1);
constraint int_eq(x[116], 4);
constraint int_eq(x[117], 7);
constraint int_eq(x[118], 1);
constraint int_eq(x[119], 6);
constraint int_eq(x[120], 9);
constraint int_eq(x[123], 4);
constraint int_eq(x[125], 1);
constraint int_eq(x[129], 6);
constraint int_eq(x[131], -1);
constraint int_eq(x[141], 4);
constraint int_eq(x[143], 5);
constraint int_ne(x[1], 0);
constraint int_ne(x[2], 0);
constraint int_ne(x[3], 0);
constraint int_ne(x[4], 0);
constraint int_ne(x[5], 0);
constraint int_ne(x[6], 0);
constraint int_ne(x[7], 0);
constraint int_ne(x[8], 0);
constraint int_ne(x[9], 0);
constraint int_ne(x[10], 0);
constraint int_ne(x[11], 0);
constraint int_ne(x[12], 0);
constraint int_ne(x[13], 0);
constraint int_ne(x[14], 0);
constraint int_ne(x[15], 0);
constraint int_ne(x[16], 0);
constraint int_ne(x[17], 0);
constraint int_ne(x[18], 0);
constraint int_ne(x[19], 0);
constraint int_ne(x[20], 0);
constraint int_ne(x[21], 0);
constraint int_ne(x[22], 0);
constraint int_ne(x[23], 0);
constraint int_ne(x[24], 0);
constraint int_ne(x[25], 0);
constraint int_ne(x[26], 0);
constraint int_ne(x[27], 0);
constraint int_ne(x[28], 0);
constraint int_ne(x[29], 0);
constraint int_ne(x[30], 0);
constraint int_ne(x[31], 0);
constraint int_ne(x[32], 0);
constraint int_ne(x[33], 0);
constraint int_ne(x[34], 0);
constraint int_ne(x[35], 0);
constraint int_ne(x[36], 0);
constraint int_ne(x[37], 0);
constraint int_ne(x[38], 0);
constraint int_ne(x[39], 0);
constraint int_ne(x[40], 0);
constraint int_ne(x[41], 0);
constraint int_ne(x[42], 0);
constraint int_ne(x[43], 0);
constraint int_ne(x[44], 0);
constraint int_ne(x[45], 0);
constraint int_ne(x[46], 0);
constraint int_ne(x[47], 0);
constraint int_ne(x[48], 0);
constraint int_ne(x[49], 0);
constraint int_ne(x[50], 0);
constraint int_ne(x[51], 0);
constraint int_ne(x[52], 0);
constraint int_ne(x[53], 0);
constraint int_ne(x[54], 0);
constraint int_ne(x[55], 0);
constraint int_ne(x[56], 0);
constraint int_ne(x[57], 0);
constraint int_ne(x[58], 0);
constraint int_ne(x[59], 0);
constraint int_ne(x[60], 0);
constraint int_ne(x[61], 0);
constraint int_ne(x[62], 0);
constraint int_ne(x[63], 0);
constraint int_ne(x[64], 0);
constraint int_ne(x[65], 0);
constraint int_ne(x[66], 0);
constraint int_ne(x[67], 0);
constraint int_ne(x[68], 0);
constraint int_ne(x[69], 0);
constraint int_ne(x[70], 0);
constraint int_ne(x[71], 0);
constraint int_ne(x[72], 0);
constraint int_ne(x[73], 0);
constraint int_ne(x[74], 0);
constraint int_ne(x[75], 0);
constraint int_ne(x[76], 0);
constraint int_ne(x[77], 0);
constraint int_ne(x[78], 0);
constraint int_ne(x[79], 0);
constraint int_ne(x[80], 0);
constraint int_ne(x[81], 0);
constraint int_ne(x[82], 0);
constraint int_ne(x[83], 0);
constraint int_ne(x[84], 0);
constraint int_ne(x[85], 0);
constraint int_ne(x[86], 0);
constraint int_ne(x[87], 0);
constraint int_ne(x[88], 0);
constraint int_ne(x[89], 0);
constraint int_ne(x[90], 0);
constraint int_ne(x[91], 0);
constraint int_ne(x[92], 0);
constraint int_ne(x[93], 0);
constraint int_ne(x[94], 0);
constraint int_ne(x[95], 0);
constraint int_ne(x[96], 0);
constraint int_ne(x[97], 0);
constraint int_ne(x[98], 0);
constraint int_ne(x[99], 0);
constraint int_ne(x[100], 0);
constraint int_ne(x[101], 0);
constraint int_ne(x[102], 0);
constraint int_ne(x[103], 0);
constraint int_ne(x[104], 0);
constraint int_ne(x[105], 0);
constraint int_ne(x[106], 0);
constraint int_ne(x[107], 0);
constraint int_ne(x[108], 0);
constraint int_ne(x[109], 0);
constraint int_ne(x[110], 0);
constraint int_ne(x[111], 0);
constraint int_ne(x[112], 0);
constraint int_ne(x[113], 0);
constraint int_ne(x[114], 0);
constraint int_ne(x[115], 0);
constraint int_ne(x[116], 0);
constraint int_ne(x[117], 0);
constraint int_ne(x[118], 0);
constraint int_ne(x[119], 0);
constraint int_ne(x[120], 0);
constraint int_ne(x[121], 0);
constraint int_ne(x[122], 0);
constraint int_ne(x[123], 0);
constraint int_ne(x[124], 0);
constraint int_ne(x[125], 0);
constraint int_ne(x[126], 0);
constraint int_ne(x[127], 0);
constraint int_ne(x[128], 0);
constraint int_ne(x[129], 0);
constraint int_ne(x[130], 0);
constraint int_ne(x[131], 0);
constraint int_ne(x[132], 0);
constraint int_ne(x[133], 0);
constraint int_ne(x[134], 0);
constraint int_ne(x[135], 0);
constraint int_ne(x[136], 0);
constraint int_ne(x[137], 0);
constraint int_ne(x[138], 0);
constraint int_ne(x[139], 0);
constraint int_ne(x[140], 0);
constraint int_ne(x[141], 0);
constraint int_ne(x[142], 0);
constraint int_ne(x[143], 0);
constraint int_ne(x[144], 0);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], max_regret, indomain_max, complete) satisfy;
