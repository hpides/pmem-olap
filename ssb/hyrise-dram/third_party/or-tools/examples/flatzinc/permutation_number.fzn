predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00011 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00019 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00027 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..1: even_odd :: output_var = INT____00033;
var 0..6: perm_num :: output_var = INT____00032;
array [1..6] of var 0..6: transpositions2____00001;
array [1..6] of var 1..6: x :: output_array([1..6]);
constraint all_different_int(x);
constraint bool2int(BOOL____00002, INT____00003) :: defines_var(INT____00003);
constraint bool2int(BOOL____00004, INT____00005) :: defines_var(INT____00005);
constraint bool2int(BOOL____00006, INT____00007) :: defines_var(INT____00007);
constraint bool2int(BOOL____00008, INT____00009) :: defines_var(INT____00009);
constraint bool2int(BOOL____00010, INT____00011) :: defines_var(INT____00011);
constraint bool2int(BOOL____00012, INT____00013) :: defines_var(INT____00013);
constraint bool2int(BOOL____00014, INT____00015) :: defines_var(INT____00015);
constraint bool2int(BOOL____00016, INT____00017) :: defines_var(INT____00017);
constraint bool2int(BOOL____00018, INT____00019) :: defines_var(INT____00019);
constraint bool2int(BOOL____00020, INT____00021) :: defines_var(INT____00021);
constraint bool2int(BOOL____00022, INT____00023) :: defines_var(INT____00023);
constraint bool2int(BOOL____00024, INT____00025) :: defines_var(INT____00025);
constraint bool2int(BOOL____00026, INT____00027) :: defines_var(INT____00027);
constraint bool2int(BOOL____00028, INT____00029) :: defines_var(INT____00029);
constraint bool2int(BOOL____00030, INT____00031) :: defines_var(INT____00031);
constraint int_eq(transpositions2____00001[6], 0);
constraint int_lin_eq([-1, 1], [INT____00031, transpositions2____00001[5]], 0);
constraint int_lin_eq([-1, -1, 1], [INT____00027, INT____00029, transpositions2____00001[4]], 0);
constraint int_lin_eq([-1, -1, -1, 1], [INT____00021, INT____00023, INT____00025, transpositions2____00001[3]], 0);
constraint int_lin_eq([-1, -1, -1, -1, 1], [INT____00013, INT____00015, INT____00017, INT____00019, transpositions2____00001[2]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, 1], [INT____00003, INT____00005, INT____00007, INT____00009, INT____00011, transpositions2____00001[1]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [INT____00032, transpositions2____00001[1], transpositions2____00001[2], transpositions2____00001[3], transpositions2____00001[4], transpositions2____00001[5], transpositions2____00001[6]], 0) :: defines_var(INT____00032);
constraint int_lt_reif(x[2], x[1], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_lt_reif(x[3], x[1], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_lt_reif(x[3], x[2], BOOL____00012) :: defines_var(BOOL____00012);
constraint int_lt_reif(x[4], x[1], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lt_reif(x[4], x[2], BOOL____00014) :: defines_var(BOOL____00014);
constraint int_lt_reif(x[4], x[3], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_lt_reif(x[5], x[1], BOOL____00008) :: defines_var(BOOL____00008);
constraint int_lt_reif(x[5], x[2], BOOL____00016) :: defines_var(BOOL____00016);
constraint int_lt_reif(x[5], x[3], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_lt_reif(x[5], x[4], BOOL____00026) :: defines_var(BOOL____00026);
constraint int_lt_reif(x[6], x[1], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_lt_reif(x[6], x[2], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_lt_reif(x[6], x[3], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_lt_reif(x[6], x[4], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_lt_reif(x[6], x[5], BOOL____00030) :: defines_var(BOOL____00030);
constraint int_mod(INT____00032, 2, INT____00033) :: defines_var(INT____00033);
solve  :: int_search(x, first_fail, indomain_min, complete) satisfy;
