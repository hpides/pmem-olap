var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00037 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00041 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00045 :: is_defined_var :: var_is_introduced;
array [1..5] of var 0..1: first_pos____00001;
var 1..1: rank :: output_var = 1;
var 3..3: t_min :: output_var = 3;
array [1..5] of var 1..7: variables :: output_array([1..5]);
constraint array_bool_and([BOOL____00026, BOOL____00027], BOOL____00028) :: defines_var(BOOL____00028);
constraint array_bool_and([BOOL____00030, BOOL____00031], BOOL____00032) :: defines_var(BOOL____00032);
constraint array_bool_and([BOOL____00034, BOOL____00035], BOOL____00036) :: defines_var(BOOL____00036);
constraint array_bool_and([BOOL____00038, BOOL____00039], BOOL____00040) :: defines_var(BOOL____00040);
constraint array_bool_and([BOOL____00042, BOOL____00043], BOOL____00044) :: defines_var(BOOL____00044);
constraint array_bool_or([BOOL____00011, BOOL____00010], BOOL____00012);
constraint array_bool_or([BOOL____00016, BOOL____00015, BOOL____00014], BOOL____00017);
constraint array_bool_or([BOOL____00022, BOOL____00021, BOOL____00020, BOOL____00019], BOOL____00023);
constraint array_bool_or([BOOL____00006, BOOL____00005, BOOL____00004, BOOL____00003, BOOL____00002], true);
constraint bool2int(BOOL____00028, INT____00029) :: defines_var(INT____00029);
constraint bool2int(BOOL____00032, INT____00033) :: defines_var(INT____00033);
constraint bool2int(BOOL____00036, INT____00037) :: defines_var(INT____00037);
constraint bool2int(BOOL____00040, INT____00041) :: defines_var(INT____00041);
constraint bool2int(BOOL____00044, INT____00045) :: defines_var(INT____00045);
constraint int_eq_reif(3, variables[1], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(3, variables[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(3, variables[3], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(3, variables[4], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(3, variables[5], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(first_pos____00001[1], 0, false);
constraint int_eq_reif(first_pos____00001[1], 1, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(first_pos____00001[2], 0, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(first_pos____00001[2], 1, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(first_pos____00001[3], 0, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(first_pos____00001[3], 1, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(first_pos____00001[4], 0, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(first_pos____00001[4], 1, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(first_pos____00001[5], 0, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(first_pos____00001[5], 1, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(variables[1], variables[2], BOOL____00009);
constraint int_eq_reif(variables[1], variables[3], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(variables[1], variables[4], BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(variables[1], variables[5], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(variables[2], variables[3], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(variables[2], variables[4], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(variables[2], variables[5], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(variables[3], variables[4], BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(variables[3], variables[5], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(variables[4], variables[5], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_lin_eq([-1, -1, -1, -1, -1], [INT____00029, INT____00033, INT____00037, INT____00041, INT____00045], -1);
constraint int_lt_reif(variables[1], 3, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_lt_reif(variables[2], 3, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_lt_reif(variables[3], 3, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_lt_reif(variables[4], 3, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_lt_reif(variables[5], 3, BOOL____00043) :: defines_var(BOOL____00043);
solve satisfy;
