array [1..480] of int: E = [1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 2, 1, 2, 3, 2, 4, 2, 5, 2, 6, 2, 7, 2, 8, 2, 9, 2, 10, 2, 11, 2, 12, 2, 13, 2, 14, 2, 15, 2, 16, 3, 1, 3, 2, 3, 4, 3, 5, 3, 6, 3, 7, 3, 8, 3, 9, 3, 10, 3, 11, 3, 12, 3, 13, 3, 14, 3, 15, 3, 16, 4, 1, 4, 2, 4, 3, 4, 5, 4, 6, 4, 7, 4, 8, 4, 9, 4, 10, 4, 11, 4, 12, 4, 13, 4, 14, 4, 15, 4, 16, 5, 1, 5, 2, 5, 3, 5, 4, 5, 6, 5, 7, 5, 8, 5, 9, 5, 10, 5, 11, 5, 12, 5, 13, 5, 14, 5, 15, 5, 16, 6, 1, 6, 2, 6, 3, 6, 4, 6, 5, 6, 7, 6, 8, 6, 9, 6, 10, 6, 11, 6, 12, 6, 13, 6, 14, 6, 15, 6, 16, 7, 1, 7, 2, 7, 3, 7, 4, 7, 5, 7, 6, 7, 8, 7, 9, 7, 10, 7, 11, 7, 12, 7, 13, 7, 14, 7, 15, 7, 16, 8, 1, 8, 2, 8, 3, 8, 4, 8, 5, 8, 6, 8, 7, 8, 9, 8, 10, 8, 11, 8, 12, 8, 13, 8, 14, 8, 15, 8, 16, 9, 1, 9, 2, 9, 3, 9, 4, 9, 5, 9, 6, 9, 7, 9, 8, 9, 10, 9, 11, 9, 12, 9, 13, 9, 14, 9, 15, 9, 16, 10, 1, 10, 2, 10, 3, 10, 4, 10, 5, 10, 6, 10, 7, 10, 8, 10, 9, 10, 11, 10, 12, 10, 13, 10, 14, 10, 15, 10, 16, 11, 1, 11, 2, 11, 3, 11, 4, 11, 5, 11, 6, 11, 7, 11, 8, 11, 9, 11, 10, 11, 12, 11, 13, 11, 14, 11, 15, 11, 16, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12, 13, 12, 14, 12, 15, 12, 16, 13, 1, 13, 2, 13, 3, 13, 4, 13, 5, 13, 6, 13, 7, 13, 8, 13, 9, 13, 10, 13, 11, 13, 12, 13, 14, 13, 15, 13, 16, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 14, 11, 14, 12, 14, 13, 14, 15, 14, 16, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10, 15, 11, 15, 12, 15, 13, 15, 14, 15, 16, 16, 1, 16, 2, 16, 3, 16, 4, 16, 5, 16, 6, 16, 7, 16, 8, 16, 9, 16, 10, 16, 11, 16, 12, 16, 13, 16, 14, 16, 15];
array [1..240] of int: c = [509, 501, 312, 1019, 736, 656, 60, 1039, 726, 2314, 479, 448, 479, 619, 150, 509, 126, 474, 1526, 1226, 1133, 532, 1449, 1122, 2789, 958, 941, 978, 1127, 542, 501, 126, 541, 1516, 1184, 1084, 536, 1371, 1045, 2728, 913, 904, 946, 1115, 499, 312, 474, 541, 1157, 980, 919, 271, 1333, 1029, 2553, 751, 704, 720, 783, 455, 1019, 1526, 1516, 1157, 478, 583, 996, 858, 855, 1504, 677, 651, 600, 401, 1033, 736, 1226, 1184, 980, 478, 115, 740, 470, 379, 1581, 271, 289, 261, 308, 687, 656, 1133, 1084, 919, 583, 115, 667, 455, 288, 1661, 177, 216, 207, 343, 592, 60, 532, 536, 271, 996, 740, 667, 1066, 759, 2320, 493, 454, 479, 598, 206, 1039, 1449, 1371, 1333, 858, 470, 455, 1066, 328, 1387, 591, 650, 656, 776, 933, 726, 1122, 1045, 1029, 855, 379, 288, 759, 328, 1697, 333, 400, 427, 622, 610, 2314, 2789, 2728, 2553, 1504, 1581, 1661, 2320, 1387, 1697, 1838, 1868, 1841, 1789, 2248, 479, 958, 913, 751, 677, 271, 177, 493, 591, 333, 1838, 68, 105, 336, 417, 448, 941, 904, 704, 651, 289, 216, 454, 650, 400, 1868, 68, 52, 287, 406, 479, 978, 946, 720, 600, 261, 207, 479, 656, 427, 1841, 105, 52, 237, 449, 619, 1127, 1115, 783, 401, 308, 343, 598, 776, 622, 1789, 336, 287, 237, 636, 150, 542, 499, 455, 1033, 687, 592, 206, 933, 610, 2248, 417, 406, 449, 636];
var 0..195424: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..195424: total :: output_var = INT____00001;
array [1..240] of var 0..1: x :: output_array([1..240]);
array [1..240] of var int: y :: output_array([1..240]);
constraint int_le(0, y[1]);
constraint int_le(0, y[2]);
constraint int_le(0, y[3]);
constraint int_le(0, y[4]);
constraint int_le(0, y[5]);
constraint int_le(0, y[6]);
constraint int_le(0, y[7]);
constraint int_le(0, y[8]);
constraint int_le(0, y[9]);
constraint int_le(0, y[10]);
constraint int_le(0, y[11]);
constraint int_le(0, y[12]);
constraint int_le(0, y[13]);
constraint int_le(0, y[14]);
constraint int_le(0, y[15]);
constraint int_le(0, y[16]);
constraint int_le(0, y[17]);
constraint int_le(0, y[18]);
constraint int_le(0, y[19]);
constraint int_le(0, y[20]);
constraint int_le(0, y[21]);
constraint int_le(0, y[22]);
constraint int_le(0, y[23]);
constraint int_le(0, y[24]);
constraint int_le(0, y[25]);
constraint int_le(0, y[26]);
constraint int_le(0, y[27]);
constraint int_le(0, y[28]);
constraint int_le(0, y[29]);
constraint int_le(0, y[30]);
constraint int_le(0, y[31]);
constraint int_le(0, y[32]);
constraint int_le(0, y[33]);
constraint int_le(0, y[34]);
constraint int_le(0, y[35]);
constraint int_le(0, y[36]);
constraint int_le(0, y[37]);
constraint int_le(0, y[38]);
constraint int_le(0, y[39]);
constraint int_le(0, y[40]);
constraint int_le(0, y[41]);
constraint int_le(0, y[42]);
constraint int_le(0, y[43]);
constraint int_le(0, y[44]);
constraint int_le(0, y[45]);
constraint int_le(0, y[46]);
constraint int_le(0, y[47]);
constraint int_le(0, y[48]);
constraint int_le(0, y[49]);
constraint int_le(0, y[50]);
constraint int_le(0, y[51]);
constraint int_le(0, y[52]);
constraint int_le(0, y[53]);
constraint int_le(0, y[54]);
constraint int_le(0, y[55]);
constraint int_le(0, y[56]);
constraint int_le(0, y[57]);
constraint int_le(0, y[58]);
constraint int_le(0, y[59]);
constraint int_le(0, y[60]);
constraint int_le(0, y[61]);
constraint int_le(0, y[62]);
constraint int_le(0, y[63]);
constraint int_le(0, y[64]);
constraint int_le(0, y[65]);
constraint int_le(0, y[66]);
constraint int_le(0, y[67]);
constraint int_le(0, y[68]);
constraint int_le(0, y[69]);
constraint int_le(0, y[70]);
constraint int_le(0, y[71]);
constraint int_le(0, y[72]);
constraint int_le(0, y[73]);
constraint int_le(0, y[74]);
constraint int_le(0, y[75]);
constraint int_le(0, y[76]);
constraint int_le(0, y[77]);
constraint int_le(0, y[78]);
constraint int_le(0, y[79]);
constraint int_le(0, y[80]);
constraint int_le(0, y[81]);
constraint int_le(0, y[82]);
constraint int_le(0, y[83]);
constraint int_le(0, y[84]);
constraint int_le(0, y[85]);
constraint int_le(0, y[86]);
constraint int_le(0, y[87]);
constraint int_le(0, y[88]);
constraint int_le(0, y[89]);
constraint int_le(0, y[90]);
constraint int_le(0, y[91]);
constraint int_le(0, y[92]);
constraint int_le(0, y[93]);
constraint int_le(0, y[94]);
constraint int_le(0, y[95]);
constraint int_le(0, y[96]);
constraint int_le(0, y[97]);
constraint int_le(0, y[98]);
constraint int_le(0, y[99]);
constraint int_le(0, y[100]);
constraint int_le(0, y[101]);
constraint int_le(0, y[102]);
constraint int_le(0, y[103]);
constraint int_le(0, y[104]);
constraint int_le(0, y[105]);
constraint int_le(0, y[106]);
constraint int_le(0, y[107]);
constraint int_le(0, y[108]);
constraint int_le(0, y[109]);
constraint int_le(0, y[110]);
constraint int_le(0, y[111]);
constraint int_le(0, y[112]);
constraint int_le(0, y[113]);
constraint int_le(0, y[114]);
constraint int_le(0, y[115]);
constraint int_le(0, y[116]);
constraint int_le(0, y[117]);
constraint int_le(0, y[118]);
constraint int_le(0, y[119]);
constraint int_le(0, y[120]);
constraint int_le(0, y[121]);
constraint int_le(0, y[122]);
constraint int_le(0, y[123]);
constraint int_le(0, y[124]);
constraint int_le(0, y[125]);
constraint int_le(0, y[126]);
constraint int_le(0, y[127]);
constraint int_le(0, y[128]);
constraint int_le(0, y[129]);
constraint int_le(0, y[130]);
constraint int_le(0, y[131]);
constraint int_le(0, y[132]);
constraint int_le(0, y[133]);
constraint int_le(0, y[134]);
constraint int_le(0, y[135]);
constraint int_le(0, y[136]);
constraint int_le(0, y[137]);
constraint int_le(0, y[138]);
constraint int_le(0, y[139]);
constraint int_le(0, y[140]);
constraint int_le(0, y[141]);
constraint int_le(0, y[142]);
constraint int_le(0, y[143]);
constraint int_le(0, y[144]);
constraint int_le(0, y[145]);
constraint int_le(0, y[146]);
constraint int_le(0, y[147]);
constraint int_le(0, y[148]);
constraint int_le(0, y[149]);
constraint int_le(0, y[150]);
constraint int_le(0, y[151]);
constraint int_le(0, y[152]);
constraint int_le(0, y[153]);
constraint int_le(0, y[154]);
constraint int_le(0, y[155]);
constraint int_le(0, y[156]);
constraint int_le(0, y[157]);
constraint int_le(0, y[158]);
constraint int_le(0, y[159]);
constraint int_le(0, y[160]);
constraint int_le(0, y[161]);
constraint int_le(0, y[162]);
constraint int_le(0, y[163]);
constraint int_le(0, y[164]);
constraint int_le(0, y[165]);
constraint int_le(0, y[166]);
constraint int_le(0, y[167]);
constraint int_le(0, y[168]);
constraint int_le(0, y[169]);
constraint int_le(0, y[170]);
constraint int_le(0, y[171]);
constraint int_le(0, y[172]);
constraint int_le(0, y[173]);
constraint int_le(0, y[174]);
constraint int_le(0, y[175]);
constraint int_le(0, y[176]);
constraint int_le(0, y[177]);
constraint int_le(0, y[178]);
constraint int_le(0, y[179]);
constraint int_le(0, y[180]);
constraint int_le(0, y[181]);
constraint int_le(0, y[182]);
constraint int_le(0, y[183]);
constraint int_le(0, y[184]);
constraint int_le(0, y[185]);
constraint int_le(0, y[186]);
constraint int_le(0, y[187]);
constraint int_le(0, y[188]);
constraint int_le(0, y[189]);
constraint int_le(0, y[190]);
constraint int_le(0, y[191]);
constraint int_le(0, y[192]);
constraint int_le(0, y[193]);
constraint int_le(0, y[194]);
constraint int_le(0, y[195]);
constraint int_le(0, y[196]);
constraint int_le(0, y[197]);
constraint int_le(0, y[198]);
constraint int_le(0, y[199]);
constraint int_le(0, y[200]);
constraint int_le(0, y[201]);
constraint int_le(0, y[202]);
constraint int_le(0, y[203]);
constraint int_le(0, y[204]);
constraint int_le(0, y[205]);
constraint int_le(0, y[206]);
constraint int_le(0, y[207]);
constraint int_le(0, y[208]);
constraint int_le(0, y[209]);
constraint int_le(0, y[210]);
constraint int_le(0, y[211]);
constraint int_le(0, y[212]);
constraint int_le(0, y[213]);
constraint int_le(0, y[214]);
constraint int_le(0, y[215]);
constraint int_le(0, y[216]);
constraint int_le(0, y[217]);
constraint int_le(0, y[218]);
constraint int_le(0, y[219]);
constraint int_le(0, y[220]);
constraint int_le(0, y[221]);
constraint int_le(0, y[222]);
constraint int_le(0, y[223]);
constraint int_le(0, y[224]);
constraint int_le(0, y[225]);
constraint int_le(0, y[226]);
constraint int_le(0, y[227]);
constraint int_le(0, y[228]);
constraint int_le(0, y[229]);
constraint int_le(0, y[230]);
constraint int_le(0, y[231]);
constraint int_le(0, y[232]);
constraint int_le(0, y[233]);
constraint int_le(0, y[234]);
constraint int_le(0, y[235]);
constraint int_le(0, y[236]);
constraint int_le(0, y[237]);
constraint int_le(0, y[238]);
constraint int_le(0, y[239]);
constraint int_le(0, y[240]);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[32], x[47], x[62], x[77], x[92], x[107], x[122], x[137], x[152], x[167], x[182], x[197], x[212], x[227]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[2], x[17], x[48], x[63], x[78], x[93], x[108], x[123], x[138], x[153], x[168], x[183], x[198], x[213], x[228]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[3], x[18], x[33], x[64], x[79], x[94], x[109], x[124], x[139], x[154], x[169], x[184], x[199], x[214], x[229]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[4], x[19], x[34], x[49], x[80], x[95], x[110], x[125], x[140], x[155], x[170], x[185], x[200], x[215], x[230]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[5], x[20], x[35], x[50], x[65], x[96], x[111], x[126], x[141], x[156], x[171], x[186], x[201], x[216], x[231]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[6], x[21], x[36], x[51], x[66], x[81], x[112], x[127], x[142], x[157], x[172], x[187], x[202], x[217], x[232]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[7], x[22], x[37], x[52], x[67], x[82], x[97], x[128], x[143], x[158], x[173], x[188], x[203], x[218], x[233]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[8], x[23], x[38], x[53], x[68], x[83], x[98], x[113], x[144], x[159], x[174], x[189], x[204], x[219], x[234]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[9], x[24], x[39], x[54], x[69], x[84], x[99], x[114], x[129], x[160], x[175], x[190], x[205], x[220], x[235]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[10], x[25], x[40], x[55], x[70], x[85], x[100], x[115], x[130], x[145], x[176], x[191], x[206], x[221], x[236]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[11], x[26], x[41], x[56], x[71], x[86], x[101], x[116], x[131], x[146], x[161], x[192], x[207], x[222], x[237]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[12], x[27], x[42], x[57], x[72], x[87], x[102], x[117], x[132], x[147], x[162], x[177], x[208], x[223], x[238]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[13], x[28], x[43], x[58], x[73], x[88], x[103], x[118], x[133], x[148], x[163], x[178], x[193], x[224], x[239]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[14], x[29], x[44], x[59], x[74], x[89], x[104], x[119], x[134], x[149], x[164], x[179], x[194], x[209], x[240]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[15], x[30], x[45], x[60], x[75], x[90], x[105], x[120], x[135], x[150], x[165], x[180], x[195], x[210], x[225]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[16], x[31], x[46], x[61], x[76], x[91], x[106], x[121], x[136], x[151], x[166], x[181], x[196], x[211], x[226]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[181], x[182], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[209], x[210]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[235], x[236], x[237], x[238], x[239], x[240]], 1);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15], y[16], y[31], y[46], y[61], y[76], y[91], y[106], y[121], y[136], y[151], y[166], y[181], y[196], y[211], y[226]], -15);
constraint int_lin_eq([1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[1], y[16], y[17], y[18], y[19], y[20], y[21], y[22], y[23], y[24], y[25], y[26], y[27], y[28], y[29], y[30], y[32], y[47], y[62], y[77], y[92], y[107], y[122], y[137], y[152], y[167], y[182], y[197], y[212], y[227]], 1);
constraint int_lin_eq([1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[2], y[17], y[31], y[32], y[33], y[34], y[35], y[36], y[37], y[38], y[39], y[40], y[41], y[42], y[43], y[44], y[45], y[48], y[63], y[78], y[93], y[108], y[123], y[138], y[153], y[168], y[183], y[198], y[213], y[228]], 1);
constraint int_lin_eq([1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[3], y[18], y[33], y[46], y[47], y[48], y[49], y[50], y[51], y[52], y[53], y[54], y[55], y[56], y[57], y[58], y[59], y[60], y[64], y[79], y[94], y[109], y[124], y[139], y[154], y[169], y[184], y[199], y[214], y[229]], 1);
constraint int_lin_eq([1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[4], y[19], y[34], y[49], y[61], y[62], y[63], y[64], y[65], y[66], y[67], y[68], y[69], y[70], y[71], y[72], y[73], y[74], y[75], y[80], y[95], y[110], y[125], y[140], y[155], y[170], y[185], y[200], y[215], y[230]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[5], y[20], y[35], y[50], y[65], y[76], y[77], y[78], y[79], y[80], y[81], y[82], y[83], y[84], y[85], y[86], y[87], y[88], y[89], y[90], y[96], y[111], y[126], y[141], y[156], y[171], y[186], y[201], y[216], y[231]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [y[6], y[21], y[36], y[51], y[66], y[81], y[91], y[92], y[93], y[94], y[95], y[96], y[97], y[98], y[99], y[100], y[101], y[102], y[103], y[104], y[105], y[112], y[127], y[142], y[157], y[172], y[187], y[202], y[217], y[232]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1], [y[7], y[22], y[37], y[52], y[67], y[82], y[97], y[106], y[107], y[108], y[109], y[110], y[111], y[112], y[113], y[114], y[115], y[116], y[117], y[118], y[119], y[120], y[128], y[143], y[158], y[173], y[188], y[203], y[218], y[233]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1], [y[8], y[23], y[38], y[53], y[68], y[83], y[98], y[113], y[121], y[122], y[123], y[124], y[125], y[126], y[127], y[128], y[129], y[130], y[131], y[132], y[133], y[134], y[135], y[144], y[159], y[174], y[189], y[204], y[219], y[234]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1], [y[9], y[24], y[39], y[54], y[69], y[84], y[99], y[114], y[129], y[136], y[137], y[138], y[139], y[140], y[141], y[142], y[143], y[144], y[145], y[146], y[147], y[148], y[149], y[150], y[160], y[175], y[190], y[205], y[220], y[235]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1], [y[10], y[25], y[40], y[55], y[70], y[85], y[100], y[115], y[130], y[145], y[151], y[152], y[153], y[154], y[155], y[156], y[157], y[158], y[159], y[160], y[161], y[162], y[163], y[164], y[165], y[176], y[191], y[206], y[221], y[236]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1], [y[11], y[26], y[41], y[56], y[71], y[86], y[101], y[116], y[131], y[146], y[161], y[166], y[167], y[168], y[169], y[170], y[171], y[172], y[173], y[174], y[175], y[176], y[177], y[178], y[179], y[180], y[192], y[207], y[222], y[237]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1], [y[12], y[27], y[42], y[57], y[72], y[87], y[102], y[117], y[132], y[147], y[162], y[177], y[181], y[182], y[183], y[184], y[185], y[186], y[187], y[188], y[189], y[190], y[191], y[192], y[193], y[194], y[195], y[208], y[223], y[238]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1], [y[13], y[28], y[43], y[58], y[73], y[88], y[103], y[118], y[133], y[148], y[163], y[178], y[193], y[196], y[197], y[198], y[199], y[200], y[201], y[202], y[203], y[204], y[205], y[206], y[207], y[208], y[209], y[210], y[224], y[239]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1], [y[14], y[29], y[44], y[59], y[74], y[89], y[104], y[119], y[134], y[149], y[164], y[179], y[194], y[209], y[211], y[212], y[213], y[214], y[215], y[216], y[217], y[218], y[219], y[220], y[221], y[222], y[223], y[224], y[225], y[240]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [y[15], y[30], y[45], y[60], y[75], y[90], y[105], y[120], y[135], y[150], y[165], y[180], y[195], y[210], y[225], y[226], y[227], y[228], y[229], y[230], y[231], y[232], y[233], y[234], y[235], y[236], y[237], y[238], y[239], y[240]], 1);
constraint int_lin_eq([-1, 509, 501, 312, 1019, 736, 656, 60, 1039, 726, 2314, 479, 448, 479, 619, 150, 509, 126, 474, 1526, 1226, 1133, 532, 1449, 1122, 2789, 958, 941, 978, 1127, 542, 501, 126, 541, 1516, 1184, 1084, 536, 1371, 1045, 2728, 913, 904, 946, 1115, 499, 312, 474, 541, 1157, 980, 919, 271, 1333, 1029, 2553, 751, 704, 720, 783, 455, 1019, 1526, 1516, 1157, 478, 583, 996, 858, 855, 1504, 677, 651, 600, 401, 1033, 736, 1226, 1184, 980, 478, 115, 740, 470, 379, 1581, 271, 289, 261, 308, 687, 656, 1133, 1084, 919, 583, 115, 667, 455, 288, 1661, 177, 216, 207, 343, 592, 60, 532, 536, 271, 996, 740, 667, 1066, 759, 2320, 493, 454, 479, 598, 206, 1039, 1449, 1371, 1333, 858, 470, 455, 1066, 328, 1387, 591, 650, 656, 776, 933, 726, 1122, 1045, 1029, 855, 379, 288, 759, 328, 1697, 333, 400, 427, 622, 610, 2314, 2789, 2728, 2553, 1504, 1581, 1661, 2320, 1387, 1697, 1838, 1868, 1841, 1789, 2248, 479, 958, 913, 751, 677, 271, 177, 493, 591, 333, 1838, 68, 105, 336, 417, 448, 941, 904, 704, 651, 289, 216, 454, 650, 400, 1868, 68, 52, 287, 406, 479, 978, 946, 720, 600, 261, 207, 479, 656, 427, 1841, 105, 52, 237, 449, 619, 1127, 1115, 783, 401, 308, 343, 598, 776, 622, 1789, 336, 287, 237, 636, 150, 542, 499, 455, 1033, 687, 592, 206, 933, 610, 2248, 417, 406, 449, 636], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[235], x[236], x[237], x[238], x[239], x[240]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-15, 1], [x[1], y[1]], 0);
constraint int_lin_le([-15, 1], [x[2], y[2]], 0);
constraint int_lin_le([-15, 1], [x[3], y[3]], 0);
constraint int_lin_le([-15, 1], [x[4], y[4]], 0);
constraint int_lin_le([-15, 1], [x[5], y[5]], 0);
constraint int_lin_le([-15, 1], [x[6], y[6]], 0);
constraint int_lin_le([-15, 1], [x[7], y[7]], 0);
constraint int_lin_le([-15, 1], [x[8], y[8]], 0);
constraint int_lin_le([-15, 1], [x[9], y[9]], 0);
constraint int_lin_le([-15, 1], [x[10], y[10]], 0);
constraint int_lin_le([-15, 1], [x[11], y[11]], 0);
constraint int_lin_le([-15, 1], [x[12], y[12]], 0);
constraint int_lin_le([-15, 1], [x[13], y[13]], 0);
constraint int_lin_le([-15, 1], [x[14], y[14]], 0);
constraint int_lin_le([-15, 1], [x[15], y[15]], 0);
constraint int_lin_le([-15, 1], [x[16], y[16]], 0);
constraint int_lin_le([-15, 1], [x[17], y[17]], 0);
constraint int_lin_le([-15, 1], [x[18], y[18]], 0);
constraint int_lin_le([-15, 1], [x[19], y[19]], 0);
constraint int_lin_le([-15, 1], [x[20], y[20]], 0);
constraint int_lin_le([-15, 1], [x[21], y[21]], 0);
constraint int_lin_le([-15, 1], [x[22], y[22]], 0);
constraint int_lin_le([-15, 1], [x[23], y[23]], 0);
constraint int_lin_le([-15, 1], [x[24], y[24]], 0);
constraint int_lin_le([-15, 1], [x[25], y[25]], 0);
constraint int_lin_le([-15, 1], [x[26], y[26]], 0);
constraint int_lin_le([-15, 1], [x[27], y[27]], 0);
constraint int_lin_le([-15, 1], [x[28], y[28]], 0);
constraint int_lin_le([-15, 1], [x[29], y[29]], 0);
constraint int_lin_le([-15, 1], [x[30], y[30]], 0);
constraint int_lin_le([-15, 1], [x[31], y[31]], 0);
constraint int_lin_le([-15, 1], [x[32], y[32]], 0);
constraint int_lin_le([-15, 1], [x[33], y[33]], 0);
constraint int_lin_le([-15, 1], [x[34], y[34]], 0);
constraint int_lin_le([-15, 1], [x[35], y[35]], 0);
constraint int_lin_le([-15, 1], [x[36], y[36]], 0);
constraint int_lin_le([-15, 1], [x[37], y[37]], 0);
constraint int_lin_le([-15, 1], [x[38], y[38]], 0);
constraint int_lin_le([-15, 1], [x[39], y[39]], 0);
constraint int_lin_le([-15, 1], [x[40], y[40]], 0);
constraint int_lin_le([-15, 1], [x[41], y[41]], 0);
constraint int_lin_le([-15, 1], [x[42], y[42]], 0);
constraint int_lin_le([-15, 1], [x[43], y[43]], 0);
constraint int_lin_le([-15, 1], [x[44], y[44]], 0);
constraint int_lin_le([-15, 1], [x[45], y[45]], 0);
constraint int_lin_le([-15, 1], [x[46], y[46]], 0);
constraint int_lin_le([-15, 1], [x[47], y[47]], 0);
constraint int_lin_le([-15, 1], [x[48], y[48]], 0);
constraint int_lin_le([-15, 1], [x[49], y[49]], 0);
constraint int_lin_le([-15, 1], [x[50], y[50]], 0);
constraint int_lin_le([-15, 1], [x[51], y[51]], 0);
constraint int_lin_le([-15, 1], [x[52], y[52]], 0);
constraint int_lin_le([-15, 1], [x[53], y[53]], 0);
constraint int_lin_le([-15, 1], [x[54], y[54]], 0);
constraint int_lin_le([-15, 1], [x[55], y[55]], 0);
constraint int_lin_le([-15, 1], [x[56], y[56]], 0);
constraint int_lin_le([-15, 1], [x[57], y[57]], 0);
constraint int_lin_le([-15, 1], [x[58], y[58]], 0);
constraint int_lin_le([-15, 1], [x[59], y[59]], 0);
constraint int_lin_le([-15, 1], [x[60], y[60]], 0);
constraint int_lin_le([-15, 1], [x[61], y[61]], 0);
constraint int_lin_le([-15, 1], [x[62], y[62]], 0);
constraint int_lin_le([-15, 1], [x[63], y[63]], 0);
constraint int_lin_le([-15, 1], [x[64], y[64]], 0);
constraint int_lin_le([-15, 1], [x[65], y[65]], 0);
constraint int_lin_le([-15, 1], [x[66], y[66]], 0);
constraint int_lin_le([-15, 1], [x[67], y[67]], 0);
constraint int_lin_le([-15, 1], [x[68], y[68]], 0);
constraint int_lin_le([-15, 1], [x[69], y[69]], 0);
constraint int_lin_le([-15, 1], [x[70], y[70]], 0);
constraint int_lin_le([-15, 1], [x[71], y[71]], 0);
constraint int_lin_le([-15, 1], [x[72], y[72]], 0);
constraint int_lin_le([-15, 1], [x[73], y[73]], 0);
constraint int_lin_le([-15, 1], [x[74], y[74]], 0);
constraint int_lin_le([-15, 1], [x[75], y[75]], 0);
constraint int_lin_le([-15, 1], [x[76], y[76]], 0);
constraint int_lin_le([-15, 1], [x[77], y[77]], 0);
constraint int_lin_le([-15, 1], [x[78], y[78]], 0);
constraint int_lin_le([-15, 1], [x[79], y[79]], 0);
constraint int_lin_le([-15, 1], [x[80], y[80]], 0);
constraint int_lin_le([-15, 1], [x[81], y[81]], 0);
constraint int_lin_le([-15, 1], [x[82], y[82]], 0);
constraint int_lin_le([-15, 1], [x[83], y[83]], 0);
constraint int_lin_le([-15, 1], [x[84], y[84]], 0);
constraint int_lin_le([-15, 1], [x[85], y[85]], 0);
constraint int_lin_le([-15, 1], [x[86], y[86]], 0);
constraint int_lin_le([-15, 1], [x[87], y[87]], 0);
constraint int_lin_le([-15, 1], [x[88], y[88]], 0);
constraint int_lin_le([-15, 1], [x[89], y[89]], 0);
constraint int_lin_le([-15, 1], [x[90], y[90]], 0);
constraint int_lin_le([-15, 1], [x[91], y[91]], 0);
constraint int_lin_le([-15, 1], [x[92], y[92]], 0);
constraint int_lin_le([-15, 1], [x[93], y[93]], 0);
constraint int_lin_le([-15, 1], [x[94], y[94]], 0);
constraint int_lin_le([-15, 1], [x[95], y[95]], 0);
constraint int_lin_le([-15, 1], [x[96], y[96]], 0);
constraint int_lin_le([-15, 1], [x[97], y[97]], 0);
constraint int_lin_le([-15, 1], [x[98], y[98]], 0);
constraint int_lin_le([-15, 1], [x[99], y[99]], 0);
constraint int_lin_le([-15, 1], [x[100], y[100]], 0);
constraint int_lin_le([-15, 1], [x[101], y[101]], 0);
constraint int_lin_le([-15, 1], [x[102], y[102]], 0);
constraint int_lin_le([-15, 1], [x[103], y[103]], 0);
constraint int_lin_le([-15, 1], [x[104], y[104]], 0);
constraint int_lin_le([-15, 1], [x[105], y[105]], 0);
constraint int_lin_le([-15, 1], [x[106], y[106]], 0);
constraint int_lin_le([-15, 1], [x[107], y[107]], 0);
constraint int_lin_le([-15, 1], [x[108], y[108]], 0);
constraint int_lin_le([-15, 1], [x[109], y[109]], 0);
constraint int_lin_le([-15, 1], [x[110], y[110]], 0);
constraint int_lin_le([-15, 1], [x[111], y[111]], 0);
constraint int_lin_le([-15, 1], [x[112], y[112]], 0);
constraint int_lin_le([-15, 1], [x[113], y[113]], 0);
constraint int_lin_le([-15, 1], [x[114], y[114]], 0);
constraint int_lin_le([-15, 1], [x[115], y[115]], 0);
constraint int_lin_le([-15, 1], [x[116], y[116]], 0);
constraint int_lin_le([-15, 1], [x[117], y[117]], 0);
constraint int_lin_le([-15, 1], [x[118], y[118]], 0);
constraint int_lin_le([-15, 1], [x[119], y[119]], 0);
constraint int_lin_le([-15, 1], [x[120], y[120]], 0);
constraint int_lin_le([-15, 1], [x[121], y[121]], 0);
constraint int_lin_le([-15, 1], [x[122], y[122]], 0);
constraint int_lin_le([-15, 1], [x[123], y[123]], 0);
constraint int_lin_le([-15, 1], [x[124], y[124]], 0);
constraint int_lin_le([-15, 1], [x[125], y[125]], 0);
constraint int_lin_le([-15, 1], [x[126], y[126]], 0);
constraint int_lin_le([-15, 1], [x[127], y[127]], 0);
constraint int_lin_le([-15, 1], [x[128], y[128]], 0);
constraint int_lin_le([-15, 1], [x[129], y[129]], 0);
constraint int_lin_le([-15, 1], [x[130], y[130]], 0);
constraint int_lin_le([-15, 1], [x[131], y[131]], 0);
constraint int_lin_le([-15, 1], [x[132], y[132]], 0);
constraint int_lin_le([-15, 1], [x[133], y[133]], 0);
constraint int_lin_le([-15, 1], [x[134], y[134]], 0);
constraint int_lin_le([-15, 1], [x[135], y[135]], 0);
constraint int_lin_le([-15, 1], [x[136], y[136]], 0);
constraint int_lin_le([-15, 1], [x[137], y[137]], 0);
constraint int_lin_le([-15, 1], [x[138], y[138]], 0);
constraint int_lin_le([-15, 1], [x[139], y[139]], 0);
constraint int_lin_le([-15, 1], [x[140], y[140]], 0);
constraint int_lin_le([-15, 1], [x[141], y[141]], 0);
constraint int_lin_le([-15, 1], [x[142], y[142]], 0);
constraint int_lin_le([-15, 1], [x[143], y[143]], 0);
constraint int_lin_le([-15, 1], [x[144], y[144]], 0);
constraint int_lin_le([-15, 1], [x[145], y[145]], 0);
constraint int_lin_le([-15, 1], [x[146], y[146]], 0);
constraint int_lin_le([-15, 1], [x[147], y[147]], 0);
constraint int_lin_le([-15, 1], [x[148], y[148]], 0);
constraint int_lin_le([-15, 1], [x[149], y[149]], 0);
constraint int_lin_le([-15, 1], [x[150], y[150]], 0);
constraint int_lin_le([-15, 1], [x[151], y[151]], 0);
constraint int_lin_le([-15, 1], [x[152], y[152]], 0);
constraint int_lin_le([-15, 1], [x[153], y[153]], 0);
constraint int_lin_le([-15, 1], [x[154], y[154]], 0);
constraint int_lin_le([-15, 1], [x[155], y[155]], 0);
constraint int_lin_le([-15, 1], [x[156], y[156]], 0);
constraint int_lin_le([-15, 1], [x[157], y[157]], 0);
constraint int_lin_le([-15, 1], [x[158], y[158]], 0);
constraint int_lin_le([-15, 1], [x[159], y[159]], 0);
constraint int_lin_le([-15, 1], [x[160], y[160]], 0);
constraint int_lin_le([-15, 1], [x[161], y[161]], 0);
constraint int_lin_le([-15, 1], [x[162], y[162]], 0);
constraint int_lin_le([-15, 1], [x[163], y[163]], 0);
constraint int_lin_le([-15, 1], [x[164], y[164]], 0);
constraint int_lin_le([-15, 1], [x[165], y[165]], 0);
constraint int_lin_le([-15, 1], [x[166], y[166]], 0);
constraint int_lin_le([-15, 1], [x[167], y[167]], 0);
constraint int_lin_le([-15, 1], [x[168], y[168]], 0);
constraint int_lin_le([-15, 1], [x[169], y[169]], 0);
constraint int_lin_le([-15, 1], [x[170], y[170]], 0);
constraint int_lin_le([-15, 1], [x[171], y[171]], 0);
constraint int_lin_le([-15, 1], [x[172], y[172]], 0);
constraint int_lin_le([-15, 1], [x[173], y[173]], 0);
constraint int_lin_le([-15, 1], [x[174], y[174]], 0);
constraint int_lin_le([-15, 1], [x[175], y[175]], 0);
constraint int_lin_le([-15, 1], [x[176], y[176]], 0);
constraint int_lin_le([-15, 1], [x[177], y[177]], 0);
constraint int_lin_le([-15, 1], [x[178], y[178]], 0);
constraint int_lin_le([-15, 1], [x[179], y[179]], 0);
constraint int_lin_le([-15, 1], [x[180], y[180]], 0);
constraint int_lin_le([-15, 1], [x[181], y[181]], 0);
constraint int_lin_le([-15, 1], [x[182], y[182]], 0);
constraint int_lin_le([-15, 1], [x[183], y[183]], 0);
constraint int_lin_le([-15, 1], [x[184], y[184]], 0);
constraint int_lin_le([-15, 1], [x[185], y[185]], 0);
constraint int_lin_le([-15, 1], [x[186], y[186]], 0);
constraint int_lin_le([-15, 1], [x[187], y[187]], 0);
constraint int_lin_le([-15, 1], [x[188], y[188]], 0);
constraint int_lin_le([-15, 1], [x[189], y[189]], 0);
constraint int_lin_le([-15, 1], [x[190], y[190]], 0);
constraint int_lin_le([-15, 1], [x[191], y[191]], 0);
constraint int_lin_le([-15, 1], [x[192], y[192]], 0);
constraint int_lin_le([-15, 1], [x[193], y[193]], 0);
constraint int_lin_le([-15, 1], [x[194], y[194]], 0);
constraint int_lin_le([-15, 1], [x[195], y[195]], 0);
constraint int_lin_le([-15, 1], [x[196], y[196]], 0);
constraint int_lin_le([-15, 1], [x[197], y[197]], 0);
constraint int_lin_le([-15, 1], [x[198], y[198]], 0);
constraint int_lin_le([-15, 1], [x[199], y[199]], 0);
constraint int_lin_le([-15, 1], [x[200], y[200]], 0);
constraint int_lin_le([-15, 1], [x[201], y[201]], 0);
constraint int_lin_le([-15, 1], [x[202], y[202]], 0);
constraint int_lin_le([-15, 1], [x[203], y[203]], 0);
constraint int_lin_le([-15, 1], [x[204], y[204]], 0);
constraint int_lin_le([-15, 1], [x[205], y[205]], 0);
constraint int_lin_le([-15, 1], [x[206], y[206]], 0);
constraint int_lin_le([-15, 1], [x[207], y[207]], 0);
constraint int_lin_le([-15, 1], [x[208], y[208]], 0);
constraint int_lin_le([-15, 1], [x[209], y[209]], 0);
constraint int_lin_le([-15, 1], [x[210], y[210]], 0);
constraint int_lin_le([-15, 1], [x[211], y[211]], 0);
constraint int_lin_le([-15, 1], [x[212], y[212]], 0);
constraint int_lin_le([-15, 1], [x[213], y[213]], 0);
constraint int_lin_le([-15, 1], [x[214], y[214]], 0);
constraint int_lin_le([-15, 1], [x[215], y[215]], 0);
constraint int_lin_le([-15, 1], [x[216], y[216]], 0);
constraint int_lin_le([-15, 1], [x[217], y[217]], 0);
constraint int_lin_le([-15, 1], [x[218], y[218]], 0);
constraint int_lin_le([-15, 1], [x[219], y[219]], 0);
constraint int_lin_le([-15, 1], [x[220], y[220]], 0);
constraint int_lin_le([-15, 1], [x[221], y[221]], 0);
constraint int_lin_le([-15, 1], [x[222], y[222]], 0);
constraint int_lin_le([-15, 1], [x[223], y[223]], 0);
constraint int_lin_le([-15, 1], [x[224], y[224]], 0);
constraint int_lin_le([-15, 1], [x[225], y[225]], 0);
constraint int_lin_le([-15, 1], [x[226], y[226]], 0);
constraint int_lin_le([-15, 1], [x[227], y[227]], 0);
constraint int_lin_le([-15, 1], [x[228], y[228]], 0);
constraint int_lin_le([-15, 1], [x[229], y[229]], 0);
constraint int_lin_le([-15, 1], [x[230], y[230]], 0);
constraint int_lin_le([-15, 1], [x[231], y[231]], 0);
constraint int_lin_le([-15, 1], [x[232], y[232]], 0);
constraint int_lin_le([-15, 1], [x[233], y[233]], 0);
constraint int_lin_le([-15, 1], [x[234], y[234]], 0);
constraint int_lin_le([-15, 1], [x[235], y[235]], 0);
constraint int_lin_le([-15, 1], [x[236], y[236]], 0);
constraint int_lin_le([-15, 1], [x[237], y[237]], 0);
constraint int_lin_le([-15, 1], [x[238], y[238]], 0);
constraint int_lin_le([-15, 1], [x[239], y[239]], 0);
constraint int_lin_le([-15, 1], [x[240], y[240]], 0);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[235], x[236], x[237], x[238], x[239], x[240], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15], y[16], y[17], y[18], y[19], y[20], y[21], y[22], y[23], y[24], y[25], y[26], y[27], y[28], y[29], y[30], y[31], y[32], y[33], y[34], y[35], y[36], y[37], y[38], y[39], y[40], y[41], y[42], y[43], y[44], y[45], y[46], y[47], y[48], y[49], y[50], y[51], y[52], y[53], y[54], y[55], y[56], y[57], y[58], y[59], y[60], y[61], y[62], y[63], y[64], y[65], y[66], y[67], y[68], y[69], y[70], y[71], y[72], y[73], y[74], y[75], y[76], y[77], y[78], y[79], y[80], y[81], y[82], y[83], y[84], y[85], y[86], y[87], y[88], y[89], y[90], y[91], y[92], y[93], y[94], y[95], y[96], y[97], y[98], y[99], y[100], y[101], y[102], y[103], y[104], y[105], y[106], y[107], y[108], y[109], y[110], y[111], y[112], y[113], y[114], y[115], y[116], y[117], y[118], y[119], y[120], y[121], y[122], y[123], y[124], y[125], y[126], y[127], y[128], y[129], y[130], y[131], y[132], y[133], y[134], y[135], y[136], y[137], y[138], y[139], y[140], y[141], y[142], y[143], y[144], y[145], y[146], y[147], y[148], y[149], y[150], y[151], y[152], y[153], y[154], y[155], y[156], y[157], y[158], y[159], y[160], y[161], y[162], y[163], y[164], y[165], y[166], y[167], y[168], y[169], y[170], y[171], y[172], y[173], y[174], y[175], y[176], y[177], y[178], y[179], y[180], y[181], y[182], y[183], y[184], y[185], y[186], y[187], y[188], y[189], y[190], y[191], y[192], y[193], y[194], y[195], y[196], y[197], y[198], y[199], y[200], y[201], y[202], y[203], y[204], y[205], y[206], y[207], y[208], y[209], y[210], y[211], y[212], y[213], y[214], y[215], y[216], y[217], y[218], y[219], y[220], y[221], y[222], y[223], y[224], y[225], y[226], y[227], y[228], y[229], y[230], y[231], y[232], y[233], y[234], y[235], y[236], y[237], y[238], y[239], y[240], INT____00001], first_fail, indomain_max, complete) minimize INT____00001;
