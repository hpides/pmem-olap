var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
array [1..6] of var 0..1: a :: output_array([1..6]);
array [1..6] of var 0..1: b :: output_array([1..6]);
var 0..6: diffs :: output_var = 2;
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint int_eq(a[1], 1);
constraint int_eq(a[2], 1);
constraint int_eq(a[3], 1);
constraint int_eq(a[4], 1);
constraint int_eq(a[5], 1);
constraint int_eq(a[6], 1);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [2, INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012], 0);
constraint int_ne_reif(a[1], b[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_ne_reif(a[2], b[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_ne_reif(a[3], b[3], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_ne_reif(a[4], b[4], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_ne_reif(a[5], b[5], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_ne_reif(a[6], b[6], BOOL____00011) :: defines_var(BOOL____00011);
solve satisfy;
