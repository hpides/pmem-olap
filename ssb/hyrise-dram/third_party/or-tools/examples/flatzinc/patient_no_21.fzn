array [1..100] of int: data = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 2, 1, 0, 0, 1, 2, 0, 1, 1, 0, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 0, 2, 1, 0, 0, 1, 3, 0, 1, 1, 0, 3, 0, 0, 1, 0, 3, 1, 0, 1, 0, 3];
array [1..4] of int: testcase = [0, 1, 1, 1];
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var int: INT____00001 :: is_defined_var :: var_is_introduced;
var int: INT____00002 :: is_defined_var :: var_is_introduced;
var int: INT____00003 :: is_defined_var :: var_is_introduced;
var int: INT____00004 :: is_defined_var :: var_is_introduced;
var int: INT____00005 :: is_defined_var :: var_is_introduced;
var int: INT____00006 :: is_defined_var :: var_is_introduced;
var int: INT____00007 :: is_defined_var :: var_is_introduced;
var int: INT____00008 :: is_defined_var :: var_is_introduced;
var int: INT____00009 :: is_defined_var :: var_is_introduced;
var int: INT____00010 :: is_defined_var :: var_is_introduced;
var int: INT____00011 :: is_defined_var :: var_is_introduced;
var int: INT____00012 :: is_defined_var :: var_is_introduced;
var int: INT____00013 :: is_defined_var :: var_is_introduced;
var int: INT____00014 :: is_defined_var :: var_is_introduced;
var int: INT____00015 :: is_defined_var :: var_is_introduced;
var int: INT____00016 :: is_defined_var :: var_is_introduced;
var int: INT____00017 :: is_defined_var :: var_is_introduced;
var int: INT____00018 :: is_defined_var :: var_is_introduced;
var int: INT____00019 :: is_defined_var :: var_is_introduced;
var 5..100: INT____00082 :: is_defined_var :: var_is_introduced;
array [1..20] of var int: dists :: output_array([1..20]);
var int: min_dist;
var 1..20: min_ix :: output_var;
array [1..5] of var 0..1: x :: output_array([1..5]);
constraint array_bool_and([BOOL____00021, BOOL____00022], BOOL____00061) :: defines_var(BOOL____00061);
constraint array_bool_and([BOOL____00023, BOOL____00024], BOOL____00062) :: defines_var(BOOL____00062);
constraint array_bool_and([BOOL____00025, BOOL____00026], BOOL____00063) :: defines_var(BOOL____00063);
constraint array_bool_and([BOOL____00027, BOOL____00028], BOOL____00064) :: defines_var(BOOL____00064);
constraint array_bool_and([BOOL____00029, BOOL____00030], BOOL____00065) :: defines_var(BOOL____00065);
constraint array_bool_and([BOOL____00031, BOOL____00032], BOOL____00066) :: defines_var(BOOL____00066);
constraint array_bool_and([BOOL____00033, BOOL____00034], BOOL____00067) :: defines_var(BOOL____00067);
constraint array_bool_and([BOOL____00035, BOOL____00036], BOOL____00068) :: defines_var(BOOL____00068);
constraint array_bool_and([BOOL____00037, BOOL____00038], BOOL____00069) :: defines_var(BOOL____00069);
constraint array_bool_and([BOOL____00039, BOOL____00040], BOOL____00070) :: defines_var(BOOL____00070);
constraint array_bool_and([BOOL____00041, BOOL____00042], BOOL____00071) :: defines_var(BOOL____00071);
constraint array_bool_and([BOOL____00043, BOOL____00044], BOOL____00072) :: defines_var(BOOL____00072);
constraint array_bool_and([BOOL____00045, BOOL____00046], BOOL____00073) :: defines_var(BOOL____00073);
constraint array_bool_and([BOOL____00047, BOOL____00048], BOOL____00074) :: defines_var(BOOL____00074);
constraint array_bool_and([BOOL____00049, BOOL____00050], BOOL____00075) :: defines_var(BOOL____00075);
constraint array_bool_and([BOOL____00051, BOOL____00052], BOOL____00076) :: defines_var(BOOL____00076);
constraint array_bool_and([BOOL____00053, BOOL____00054], BOOL____00077) :: defines_var(BOOL____00077);
constraint array_bool_and([BOOL____00055, BOOL____00056], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_and([BOOL____00057, BOOL____00058], BOOL____00079) :: defines_var(BOOL____00079);
constraint array_bool_and([BOOL____00059, BOOL____00060], BOOL____00080) :: defines_var(BOOL____00080);
constraint array_bool_or([BOOL____00080, BOOL____00079, BOOL____00078, BOOL____00077, BOOL____00076, BOOL____00075, BOOL____00074, BOOL____00073, BOOL____00072, BOOL____00071, BOOL____00070, BOOL____00069, BOOL____00068, BOOL____00067, BOOL____00066, BOOL____00065, BOOL____00064, BOOL____00063, BOOL____00061, BOOL____00062], true);
constraint array_int_element(INT____00082, data, x[5]);
constraint int_eq(dists[1], 1);
constraint int_eq(dists[2], 2);
constraint int_eq(dists[3], 2);
constraint int_eq(dists[4], 3);
constraint int_eq(dists[5], 2);
constraint int_eq(dists[6], 0);
constraint int_eq(dists[7], 4);
constraint int_eq(dists[8], 3);
constraint int_eq(dists[9], 2);
constraint int_eq(dists[10], 1);
constraint int_eq(dists[11], 3);
constraint int_eq(dists[12], 3);
constraint int_eq(dists[13], 1);
constraint int_eq(dists[14], 3);
constraint int_eq(dists[15], 3);
constraint int_eq(dists[16], 4);
constraint int_eq(dists[17], 3);
constraint int_eq(dists[18], 1);
constraint int_eq(dists[19], 2);
constraint int_eq(dists[20], 3);
constraint int_eq(x[1], 0);
constraint int_eq(x[2], 1);
constraint int_eq(x[3], 1);
constraint int_eq(x[4], 1);
constraint int_eq_reif(min_ix, 1, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(min_ix, 2, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(min_ix, 3, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(min_ix, 4, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(min_ix, 5, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(min_ix, 6, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(min_ix, 7, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(min_ix, 8, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(min_ix, 9, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(min_ix, 10, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(min_ix, 11, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(min_ix, 12, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(min_ix, 13, BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(min_ix, 14, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(min_ix, 15, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(min_ix, 16, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(min_ix, 17, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(min_ix, 18, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(min_ix, 19, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(min_ix, 20, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(dists[1], min_dist, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(dists[2], min_dist, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(dists[3], min_dist, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(dists[4], min_dist, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(dists[5], min_dist, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(dists[6], min_dist, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(dists[7], min_dist, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(dists[8], min_dist, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(dists[9], min_dist, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(dists[10], min_dist, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(dists[11], min_dist, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(dists[12], min_dist, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(dists[13], min_dist, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(dists[14], min_dist, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(dists[15], min_dist, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(dists[16], min_dist, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(dists[17], min_dist, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(dists[18], min_dist, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(dists[19], min_dist, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(dists[20], min_dist, BOOL____00059) :: defines_var(BOOL____00059);
constraint int_le(0, dists[1]);
constraint int_le(0, dists[2]);
constraint int_le(0, dists[3]);
constraint int_le(0, dists[4]);
constraint int_le(0, dists[5]);
constraint int_le(0, dists[6]);
constraint int_le(0, dists[7]);
constraint int_le(0, dists[8]);
constraint int_le(0, dists[9]);
constraint int_le(0, dists[10]);
constraint int_le(0, dists[11]);
constraint int_le(0, dists[12]);
constraint int_le(0, dists[13]);
constraint int_le(0, dists[14]);
constraint int_le(0, dists[15]);
constraint int_le(0, dists[16]);
constraint int_le(0, dists[17]);
constraint int_le(0, dists[18]);
constraint int_le(0, dists[19]);
constraint int_le(0, dists[20]);
constraint int_lin_eq([-1, 5], [INT____00082, min_ix], 0) :: defines_var(INT____00082) :: domain;
constraint int_min(dists[1], dists[1], INT____00001) :: defines_var(INT____00001);
constraint int_min(dists[2], INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_min(dists[3], INT____00002, INT____00003) :: defines_var(INT____00003);
constraint int_min(dists[4], INT____00003, INT____00004) :: defines_var(INT____00004);
constraint int_min(dists[5], INT____00004, INT____00005) :: defines_var(INT____00005);
constraint int_min(dists[6], INT____00005, INT____00006) :: defines_var(INT____00006);
constraint int_min(dists[7], INT____00006, INT____00007) :: defines_var(INT____00007);
constraint int_min(dists[8], INT____00007, INT____00008) :: defines_var(INT____00008);
constraint int_min(dists[9], INT____00008, INT____00009) :: defines_var(INT____00009);
constraint int_min(dists[10], INT____00009, INT____00010) :: defines_var(INT____00010);
constraint int_min(dists[11], INT____00010, INT____00011) :: defines_var(INT____00011);
constraint int_min(dists[12], INT____00011, INT____00012) :: defines_var(INT____00012);
constraint int_min(dists[13], INT____00012, INT____00013) :: defines_var(INT____00013);
constraint int_min(dists[14], INT____00013, INT____00014) :: defines_var(INT____00014);
constraint int_min(dists[15], INT____00014, INT____00015) :: defines_var(INT____00015);
constraint int_min(dists[16], INT____00015, INT____00016) :: defines_var(INT____00016);
constraint int_min(dists[17], INT____00016, INT____00017) :: defines_var(INT____00017);
constraint int_min(dists[18], INT____00017, INT____00018) :: defines_var(INT____00018);
constraint int_min(dists[19], INT____00018, INT____00019) :: defines_var(INT____00019);
constraint int_min(dists[20], INT____00019, min_dist);
solve minimize min_dist;
