predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00054 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00058 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00060 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00062 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00064 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00066 :: is_defined_var :: var_is_introduced;
array [1..40] of var 0..9: a = [9, 4, 6, 2, 1, 5, 7, 8, 3, 0, 8, 6, 0, 4, 3, 9, 1, 2, 5, 7, 1, 6, 4, 0, 2, 9, 7, 8, 5, 3, 6, 8, 2, 4, 3, 1, 9, 0, 7, 5];
array [1..10] of var 0..9: x :: output_array([1..10]);
constraint all_different_int(x);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00053, INT____00054) :: defines_var(INT____00054);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00057, INT____00058) :: defines_var(INT____00058);
constraint bool2int(BOOL____00059, INT____00060) :: defines_var(INT____00060);
constraint bool2int(BOOL____00061, INT____00062) :: defines_var(INT____00062);
constraint bool2int(BOOL____00063, INT____00064) :: defines_var(INT____00064);
constraint bool2int(BOOL____00065, INT____00066) :: defines_var(INT____00066);
constraint int_eq_reif(x[1], 1, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(x[1], 6, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(x[1], 8, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[1], 9, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(x[2], 4, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[2], 6, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x[2], 8, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(x[3], 0, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(x[3], 2, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(x[3], 4, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(x[3], 6, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[4], 0, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(x[4], 2, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[4], 4, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[5], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x[5], 2, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(x[5], 3, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(x[6], 1, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(x[6], 5, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(x[6], 9, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[7], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x[7], 7, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(x[7], 9, BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(x[8], 0, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(x[8], 2, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(x[8], 8, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(x[9], 3, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(x[9], 5, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x[9], 7, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(x[10], 0, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(x[10], 3, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(x[10], 5, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(x[10], 7, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, INT____00016, INT____00018, INT____00020], 4);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00014, INT____00016, INT____00024, INT____00032, INT____00038, INT____00042, INT____00044, INT____00046, INT____00048, INT____00050], 4);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00022, INT____00024, INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036, INT____00038, INT____00040], 4);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00028, INT____00030, INT____00052, INT____00054, INT____00056, INT____00058, INT____00060, INT____00062, INT____00064, INT____00066], 4);
solve satisfy;
