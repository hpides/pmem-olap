predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..7] of int: col_left = [0, 5, 3, 3, 5, 2, 0];
array [1..7] of int: col_right = [0, 0, 2, 0, 0, 3, 0];
array [1..6] of int: counts = [2, 1, 1, 1, 1, 1];
array [1..6] of int: gcc = [0, 1, 2, 3, 4, 5];
array [1..7] of int: row_lower = [0, 0, 5, 4, 4, 3, 0];
array [1..7] of int: row_upper = [0, 0, 4, 3, 0, 0, 3];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
array [1..49] of var 0..5: x :: output_array([1..7, 1..7]);
constraint array_bool_and([BOOL____00002, BOOL____00003], BOOL____00006) :: defines_var(BOOL____00006);
constraint array_bool_and([BOOL____00013, BOOL____00011], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00021, BOOL____00022], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_and([BOOL____00032, BOOL____00030], BOOL____00036) :: defines_var(BOOL____00036);
constraint array_bool_and([BOOL____00044, BOOL____00042], BOOL____00048) :: defines_var(BOOL____00048);
constraint array_bool_and([BOOL____00055, BOOL____00053], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_and([BOOL____00055, BOOL____00119], BOOL____00124) :: defines_var(BOOL____00124);
constraint array_bool_and([BOOL____00062, BOOL____00063], BOOL____00066) :: defines_var(BOOL____00066);
constraint array_bool_and([BOOL____00070, BOOL____00071], BOOL____00074) :: defines_var(BOOL____00074);
constraint array_bool_and([BOOL____00078, BOOL____00079], BOOL____00082) :: defines_var(BOOL____00082);
constraint array_bool_and([BOOL____00089, BOOL____00087], BOOL____00093) :: defines_var(BOOL____00093);
constraint array_bool_and([BOOL____00097, BOOL____00098], BOOL____00101) :: defines_var(BOOL____00101);
constraint array_bool_and([BOOL____00105, BOOL____00106], BOOL____00108) :: defines_var(BOOL____00108);
constraint array_bool_and([BOOL____00112, BOOL____00113], BOOL____00116) :: defines_var(BOOL____00116);
constraint array_bool_and([BOOL____00004, BOOL____00005, BOOL____00003], BOOL____00007) :: defines_var(BOOL____00007);
constraint array_bool_and([BOOL____00012, BOOL____00011, BOOL____00010], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_and([BOOL____00012, BOOL____00107, BOOL____00106], BOOL____00109) :: defines_var(BOOL____00109);
constraint array_bool_and([BOOL____00023, BOOL____00024, BOOL____00022], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_and([BOOL____00031, BOOL____00030, BOOL____00029], BOOL____00035) :: defines_var(BOOL____00035);
constraint array_bool_and([BOOL____00043, BOOL____00042, BOOL____00041], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_and([BOOL____00054, BOOL____00053, BOOL____00052], BOOL____00058) :: defines_var(BOOL____00058);
constraint array_bool_and([BOOL____00064, BOOL____00065, BOOL____00063], BOOL____00067) :: defines_var(BOOL____00067);
constraint array_bool_and([BOOL____00072, BOOL____00073, BOOL____00071], BOOL____00075) :: defines_var(BOOL____00075);
constraint array_bool_and([BOOL____00080, BOOL____00081, BOOL____00079], BOOL____00083) :: defines_var(BOOL____00083);
constraint array_bool_and([BOOL____00088, BOOL____00087, BOOL____00086], BOOL____00092) :: defines_var(BOOL____00092);
constraint array_bool_and([BOOL____00099, BOOL____00100, BOOL____00098], BOOL____00102) :: defines_var(BOOL____00102);
constraint array_bool_and([BOOL____00114, BOOL____00115, BOOL____00113], BOOL____00117) :: defines_var(BOOL____00117);
constraint array_bool_and([BOOL____00120, BOOL____00119, BOOL____00052], BOOL____00123) :: defines_var(BOOL____00123);
constraint array_bool_and([BOOL____00008, BOOL____00011, BOOL____00010, BOOL____00009], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_and([BOOL____00027, BOOL____00030, BOOL____00029, BOOL____00028], BOOL____00034) :: defines_var(BOOL____00034);
constraint array_bool_and([BOOL____00039, BOOL____00042, BOOL____00041, BOOL____00040], BOOL____00046) :: defines_var(BOOL____00046);
constraint array_bool_and([BOOL____00050, BOOL____00053, BOOL____00052, BOOL____00051], BOOL____00057) :: defines_var(BOOL____00057);
constraint array_bool_and([BOOL____00084, BOOL____00087, BOOL____00086, BOOL____00085], BOOL____00091) :: defines_var(BOOL____00091);
constraint array_bool_and([BOOL____00118, BOOL____00119, BOOL____00052, BOOL____00041], BOOL____00122) :: defines_var(BOOL____00122);
constraint array_bool_or([BOOL____00007, BOOL____00001, BOOL____00006], true);
constraint array_bool_or([BOOL____00026, BOOL____00020, BOOL____00025], true);
constraint array_bool_or([BOOL____00067, BOOL____00061, BOOL____00066], true);
constraint array_bool_or([BOOL____00075, BOOL____00069, BOOL____00074], true);
constraint array_bool_or([BOOL____00083, BOOL____00077, BOOL____00082], true);
constraint array_bool_or([BOOL____00102, BOOL____00096, BOOL____00101], true);
constraint array_bool_or([BOOL____00109, BOOL____00104, BOOL____00108], true);
constraint array_bool_or([BOOL____00117, BOOL____00111, BOOL____00116], true);
constraint array_bool_or([BOOL____00014, BOOL____00017, BOOL____00015, BOOL____00016], true);
constraint array_bool_or([BOOL____00033, BOOL____00036, BOOL____00034, BOOL____00035], true);
constraint array_bool_or([BOOL____00045, BOOL____00048, BOOL____00046, BOOL____00047], true);
constraint array_bool_or([BOOL____00056, BOOL____00059, BOOL____00057, BOOL____00058], true);
constraint array_bool_or([BOOL____00090, BOOL____00093, BOOL____00091, BOOL____00092], true);
constraint array_bool_or([BOOL____00121, BOOL____00124, BOOL____00122, BOOL____00123], true);
constraint global_cardinality([x[1], x[2], x[3], x[4], x[5], x[6], x[7]], gcc, counts);
constraint global_cardinality([x[1], x[8], x[15], x[22], x[29], x[36], x[43]], gcc, counts);
constraint global_cardinality([x[2], x[9], x[16], x[23], x[30], x[37], x[44]], gcc, counts);
constraint global_cardinality([x[3], x[10], x[17], x[24], x[31], x[38], x[45]], gcc, counts);
constraint global_cardinality([x[4], x[11], x[18], x[25], x[32], x[39], x[46]], gcc, counts);
constraint global_cardinality([x[5], x[12], x[19], x[26], x[33], x[40], x[47]], gcc, counts);
constraint global_cardinality([x[6], x[13], x[20], x[27], x[34], x[41], x[48]], gcc, counts);
constraint global_cardinality([x[7], x[14], x[21], x[28], x[35], x[42], x[49]], gcc, counts);
constraint global_cardinality([x[8], x[9], x[10], x[11], x[12], x[13], x[14]], gcc, counts);
constraint global_cardinality([x[15], x[16], x[17], x[18], x[19], x[20], x[21]], gcc, counts);
constraint global_cardinality([x[22], x[23], x[24], x[25], x[26], x[27], x[28]], gcc, counts);
constraint global_cardinality([x[29], x[30], x[31], x[32], x[33], x[34], x[35]], gcc, counts);
constraint global_cardinality([x[36], x[37], x[38], x[39], x[40], x[41], x[42]], gcc, counts);
constraint global_cardinality([x[43], x[44], x[45], x[46], x[47], x[48], x[49]], gcc, counts);
constraint int_eq_reif(x[3], 0, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[3], 4, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(x[4], 0, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(x[4], 3, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(x[7], 0, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(x[7], 3, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(x[8], 0, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(x[8], 5, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(x[9], 0, BOOL____00073) :: defines_var(BOOL____00073);
constraint int_eq_reif(x[9], 5, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(x[10], 0, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[10], 4, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(x[10], 5, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(x[11], 0, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(x[11], 3, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[14], 0, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(x[14], 3, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(x[15], 0, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(x[15], 3, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(x[16], 0, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(x[16], 3, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_eq_reif(x[17], 3, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(x[17], 4, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(x[18], 2, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(x[18], 3, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x[19], 0, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(x[19], 2, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(x[20], 0, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(x[20], 2, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_eq_reif(x[21], 0, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(x[21], 2, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(x[21], 3, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(x[22], 0, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_eq_reif(x[22], 3, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_eq_reif(x[23], 0, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_eq_reif(x[23], 3, BOOL____00097) :: defines_var(BOOL____00097);
constraint int_eq_reif(x[24], 3, BOOL____00099) :: defines_var(BOOL____00099);
constraint int_eq_reif(x[24], 5, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(x[25], 4, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[26], 4, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(x[27], 3, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(x[29], 0, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_eq_reif(x[29], 5, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_eq_reif(x[30], 0, BOOL____00107) :: defines_var(BOOL____00107);
constraint int_eq_reif(x[30], 5, BOOL____00105) :: defines_var(BOOL____00105);
constraint int_eq_reif(x[31], 0, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x[31], 5, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(x[32], 0, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(x[32], 4, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[33], 0, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(x[33], 4, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(x[34], 0, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(x[34], 3, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(x[36], 0, BOOL____00113) :: defines_var(BOOL____00113);
constraint int_eq_reif(x[36], 2, BOOL____00111) :: defines_var(BOOL____00111);
constraint int_eq_reif(x[37], 0, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_eq_reif(x[37], 2, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_eq_reif(x[38], 0, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(x[38], 2, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_eq_reif(x[38], 5, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(x[39], 0, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(x[39], 3, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_eq_reif(x[39], 4, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(x[40], 0, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(x[40], 3, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_eq_reif(x[40], 4, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(x[41], 0, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(x[41], 3, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(x[42], 0, BOOL____00119) :: defines_var(BOOL____00119);
constraint int_eq_reif(x[42], 3, BOOL____00121) :: defines_var(BOOL____00121);
constraint int_eq_reif(x[45], 0, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(x[45], 5, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(x[46], 0, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(x[46], 4, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x[47], 0, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(x[47], 4, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(x[48], 0, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(x[48], 3, BOOL____00056) :: defines_var(BOOL____00056);
solve satisfy;
