predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..72] of int: problem = [0, 0, 0, 0, 4, 9, 0, 0, 0, 0, 11, 1, 12, 0, 0, 0, 7, 6, 8, 0, 0, 0, 9, 5, 9, 10, 0, 0, 0, 0, 4, 12, 0, 0, 0, 0, 3, 4, 2, 0, 0, 0, 1, 6, 11, 0, 0, 0, 0, 0, 6, 12, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 9, 1, 5, 0, 0, 0, 4, 2, 3, 0];
array [1..72] of var 1..12: x :: output_array([1..6, 1..12]);
constraint all_different_int([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12]]);
constraint all_different_int([x[1], x[13], x[25], x[37], x[49], x[61], x[7], x[19], x[31], x[43], x[55], x[67]]);
constraint all_different_int([x[1], x[13], x[25], x[37], x[49], x[61], x[12], x[24], x[36], x[48], x[60], x[72]]);
constraint all_different_int([x[2], x[14], x[26], x[38], x[50], x[62], x[3], x[15], x[27], x[39], x[51], x[63]]);
constraint all_different_int([x[2], x[14], x[26], x[38], x[50], x[62], x[8], x[20], x[32], x[44], x[56], x[68]]);
constraint all_different_int([x[3], x[15], x[27], x[39], x[51], x[63], x[9], x[21], x[33], x[45], x[57], x[69]]);
constraint all_different_int([x[4], x[16], x[28], x[40], x[52], x[64], x[5], x[17], x[29], x[41], x[53], x[65]]);
constraint all_different_int([x[4], x[16], x[28], x[40], x[52], x[64], x[10], x[22], x[34], x[46], x[58], x[70]]);
constraint all_different_int([x[5], x[17], x[29], x[41], x[53], x[65], x[11], x[23], x[35], x[47], x[59], x[71]]);
constraint all_different_int([x[6], x[18], x[30], x[42], x[54], x[66], x[7], x[19], x[31], x[43], x[55], x[67]]);
constraint all_different_int([x[6], x[18], x[30], x[42], x[54], x[66], x[12], x[24], x[36], x[48], x[60], x[72]]);
constraint all_different_int([x[8], x[20], x[32], x[44], x[56], x[68], x[9], x[21], x[33], x[45], x[57], x[69]]);
constraint all_different_int([x[10], x[22], x[34], x[46], x[58], x[70], x[11], x[23], x[35], x[47], x[59], x[71]]);
constraint all_different_int([x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]]);
constraint all_different_int([x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36]]);
constraint all_different_int([x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]]);
constraint all_different_int([x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60]]);
constraint all_different_int([x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]]);
constraint int_eq(x[5], 4);
constraint int_eq(x[6], 9);
constraint int_eq(x[11], 11);
constraint int_eq(x[12], 1);
constraint int_eq(x[13], 12);
constraint int_eq(x[17], 7);
constraint int_eq(x[18], 6);
constraint int_eq(x[19], 8);
constraint int_eq(x[23], 9);
constraint int_eq(x[24], 5);
constraint int_eq(x[25], 9);
constraint int_eq(x[26], 10);
constraint int_eq(x[31], 4);
constraint int_eq(x[32], 12);
constraint int_eq(x[37], 3);
constraint int_eq(x[38], 4);
constraint int_eq(x[39], 2);
constraint int_eq(x[43], 1);
constraint int_eq(x[44], 6);
constraint int_eq(x[45], 11);
constraint int_eq(x[51], 6);
constraint int_eq(x[52], 12);
constraint int_eq(x[57], 1);
constraint int_eq(x[58], 7);
constraint int_eq(x[63], 9);
constraint int_eq(x[64], 1);
constraint int_eq(x[65], 5);
constraint int_eq(x[69], 4);
constraint int_eq(x[70], 2);
constraint int_eq(x[71], 3);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], first_fail, indomain_min, complete) satisfy;
