var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
array [1..4] of var 1..9: x :: output_array([1..4]);
array [1..6] of var 1..9: y :: output_array([1..6]);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint int_eq(1, x[3]);
constraint int_eq(1, y[2]);
constraint int_eq(2, y[1]);
constraint int_eq(2, y[6]);
constraint int_eq(5, x[1]);
constraint int_eq(5, x[4]);
constraint int_eq(6, y[3]);
constraint int_eq(6, y[5]);
constraint int_eq(9, x[2]);
constraint int_eq(9, y[4]);
constraint int_eq_reif(x[1], y[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(x[1], y[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[1], y[3], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[1], y[4], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[1], y[5], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x[1], y[6], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(x[2], y[1], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(x[2], y[2], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(x[2], y[3], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(x[2], y[4], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(x[2], y[5], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[2], y[6], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x[3], y[1], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(x[3], y[2], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[3], y[3], BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(x[3], y[4], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[3], y[5], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x[3], y[6], BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(x[4], y[1], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x[4], y[2], BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(x[4], y[3], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(x[4], y[4], BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(x[4], y[5], BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(x[4], y[6], BOOL____00047) :: defines_var(BOOL____00047);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00014, INT____00016, INT____00018, INT____00020, INT____00022, INT____00024], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00038, INT____00040, INT____00042, INT____00044, INT____00046, INT____00048], 1);
solve satisfy;
