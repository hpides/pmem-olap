predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00054 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00058 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00060 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00062 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00064 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00066 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00068 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00070 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00072 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00074 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00076 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00078 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00080 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00082 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00084 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00086 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00088 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00090 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00092 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00094 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00096 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00098 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00100 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00102 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00104 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00106 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00108 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00110 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00112 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00114 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00116 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00118 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00120 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00122 :: is_defined_var :: var_is_introduced;
array [1..9] of var 0..9: gcc1____00001;
array [1..9] of var 0..9: gcc2____00002;
array [1..10] of var 0..9: values :: output_array([1..5, 1..2]);
array [1..6] of var 1..9: variables1 :: output_array([1..6]);
array [1..6] of var 1..9: variables2 :: output_array([1..6]);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00053, INT____00054) :: defines_var(INT____00054);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00057, INT____00058) :: defines_var(INT____00058);
constraint bool2int(BOOL____00059, INT____00060) :: defines_var(INT____00060);
constraint bool2int(BOOL____00061, INT____00062) :: defines_var(INT____00062);
constraint bool2int(BOOL____00063, INT____00064) :: defines_var(INT____00064);
constraint bool2int(BOOL____00065, INT____00066) :: defines_var(INT____00066);
constraint bool2int(BOOL____00067, INT____00068) :: defines_var(INT____00068);
constraint bool2int(BOOL____00069, INT____00070) :: defines_var(INT____00070);
constraint bool2int(BOOL____00071, INT____00072) :: defines_var(INT____00072);
constraint bool2int(BOOL____00073, INT____00074) :: defines_var(INT____00074);
constraint bool2int(BOOL____00075, INT____00076) :: defines_var(INT____00076);
constraint bool2int(BOOL____00077, INT____00078) :: defines_var(INT____00078);
constraint bool2int(BOOL____00079, INT____00080) :: defines_var(INT____00080);
constraint bool2int(BOOL____00081, INT____00082) :: defines_var(INT____00082);
constraint bool2int(BOOL____00083, INT____00084) :: defines_var(INT____00084);
constraint bool2int(BOOL____00085, INT____00086) :: defines_var(INT____00086);
constraint bool2int(BOOL____00087, INT____00088) :: defines_var(INT____00088);
constraint bool2int(BOOL____00089, INT____00090) :: defines_var(INT____00090);
constraint bool2int(BOOL____00091, INT____00092) :: defines_var(INT____00092);
constraint bool2int(BOOL____00093, INT____00094) :: defines_var(INT____00094);
constraint bool2int(BOOL____00095, INT____00096) :: defines_var(INT____00096);
constraint bool2int(BOOL____00097, INT____00098) :: defines_var(INT____00098);
constraint bool2int(BOOL____00099, INT____00100) :: defines_var(INT____00100);
constraint bool2int(BOOL____00101, INT____00102) :: defines_var(INT____00102);
constraint bool2int(BOOL____00103, INT____00104) :: defines_var(INT____00104);
constraint bool2int(BOOL____00105, INT____00106) :: defines_var(INT____00106);
constraint bool2int(BOOL____00107, INT____00108) :: defines_var(INT____00108);
constraint bool2int(BOOL____00109, INT____00110) :: defines_var(INT____00110);
constraint bool2int(BOOL____00111, INT____00112) :: defines_var(INT____00112);
constraint bool2int(BOOL____00113, INT____00114) :: defines_var(INT____00114);
constraint bool2int(BOOL____00115, INT____00116) :: defines_var(INT____00116);
constraint bool2int(BOOL____00117, INT____00118) :: defines_var(INT____00118);
constraint bool2int(BOOL____00119, INT____00120) :: defines_var(INT____00120);
constraint bool2int(BOOL____00121, INT____00122) :: defines_var(INT____00122);
constraint global_cardinality(variables1, [1, 2, 3, 4, 5, 6, 7, 8, 9], gcc1____00001);
constraint global_cardinality(variables1, [1, 2, 3, 4, 5, 6, 7, 8, 9], gcc2____00002);
constraint int_eq(0, values[8]);
constraint int_eq(1, values[1]);
constraint int_eq(1, values[4]);
constraint int_eq(1, values[6]);
constraint int_eq(1, values[10]);
constraint int_eq(2, values[3]);
constraint int_eq(3, values[2]);
constraint int_eq(5, values[5]);
constraint int_eq(7, values[7]);
constraint int_eq(9, values[9]);
constraint int_eq(gcc1____00001[1], gcc2____00002[1]);
constraint int_eq(gcc1____00001[2], gcc2____00002[2]);
constraint int_eq(gcc1____00001[3], gcc2____00002[3]);
constraint int_eq(gcc1____00001[4], gcc2____00002[4]);
constraint int_eq(gcc1____00001[5], gcc2____00002[5]);
constraint int_eq(gcc1____00001[6], gcc2____00002[6]);
constraint int_eq(gcc1____00001[7], gcc2____00002[7]);
constraint int_eq(gcc1____00001[8], gcc2____00002[8]);
constraint int_eq(gcc1____00001[9], gcc2____00002[9]);
constraint int_eq(variables1[1], 1);
constraint int_eq(variables1[2], 9);
constraint int_eq(variables1[3], 1);
constraint int_eq(variables1[4], 5);
constraint int_eq(variables1[5], 2);
constraint int_eq(variables1[6], 1);
constraint int_eq(variables2[1], 9);
constraint int_eq(variables2[2], 1);
constraint int_eq(variables2[3], 1);
constraint int_eq(variables2[4], 1);
constraint int_eq(variables2[5], 2);
constraint int_eq(variables2[6], 5);
constraint int_eq_reif(variables1[1], values[1], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(variables1[1], values[3], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(variables1[1], values[5], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(variables1[1], values[7], BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(variables1[1], values[9], BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(variables1[2], values[1], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(variables1[2], values[3], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(variables1[2], values[5], BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(variables1[2], values[7], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(variables1[2], values[9], BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(variables1[3], values[1], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(variables1[3], values[3], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(variables1[3], values[5], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(variables1[3], values[7], BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(variables1[3], values[9], BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(variables1[4], values[1], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(variables1[4], values[3], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(variables1[4], values[5], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(variables1[4], values[7], BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(variables1[4], values[9], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(variables1[5], values[1], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(variables1[5], values[3], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(variables1[5], values[5], BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(variables1[5], values[7], BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(variables1[5], values[9], BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(variables1[6], values[1], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(variables1[6], values[3], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(variables1[6], values[5], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(variables1[6], values[7], BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(variables1[6], values[9], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(variables2[1], values[1], BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(variables2[1], values[3], BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(variables2[1], values[5], BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(variables2[1], values[7], BOOL____00099) :: defines_var(BOOL____00099);
constraint int_eq_reif(variables2[1], values[9], BOOL____00111) :: defines_var(BOOL____00111);
constraint int_eq_reif(variables2[2], values[1], BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(variables2[2], values[3], BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(variables2[2], values[5], BOOL____00089) :: defines_var(BOOL____00089);
constraint int_eq_reif(variables2[2], values[7], BOOL____00101) :: defines_var(BOOL____00101);
constraint int_eq_reif(variables2[2], values[9], BOOL____00113) :: defines_var(BOOL____00113);
constraint int_eq_reif(variables2[3], values[1], BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(variables2[3], values[3], BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(variables2[3], values[5], BOOL____00091) :: defines_var(BOOL____00091);
constraint int_eq_reif(variables2[3], values[7], BOOL____00103) :: defines_var(BOOL____00103);
constraint int_eq_reif(variables2[3], values[9], BOOL____00115) :: defines_var(BOOL____00115);
constraint int_eq_reif(variables2[4], values[1], BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(variables2[4], values[3], BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(variables2[4], values[5], BOOL____00093) :: defines_var(BOOL____00093);
constraint int_eq_reif(variables2[4], values[7], BOOL____00105) :: defines_var(BOOL____00105);
constraint int_eq_reif(variables2[4], values[9], BOOL____00117) :: defines_var(BOOL____00117);
constraint int_eq_reif(variables2[5], values[1], BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(variables2[5], values[3], BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(variables2[5], values[5], BOOL____00095) :: defines_var(BOOL____00095);
constraint int_eq_reif(variables2[5], values[7], BOOL____00107) :: defines_var(BOOL____00107);
constraint int_eq_reif(variables2[5], values[9], BOOL____00119) :: defines_var(BOOL____00119);
constraint int_eq_reif(variables2[6], values[1], BOOL____00073) :: defines_var(BOOL____00073);
constraint int_eq_reif(variables2[6], values[3], BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(variables2[6], values[5], BOOL____00097) :: defines_var(BOOL____00097);
constraint int_eq_reif(variables2[6], values[7], BOOL____00109) :: defines_var(BOOL____00109);
constraint int_eq_reif(variables2[6], values[9], BOOL____00121) :: defines_var(BOOL____00121);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, values[2]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00016, INT____00018, INT____00020, INT____00022, INT____00024, INT____00026, values[4]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00028, INT____00030, INT____00032, INT____00034, INT____00036, INT____00038, values[6]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00040, INT____00042, INT____00044, INT____00046, INT____00048, INT____00050, values[8]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00052, INT____00054, INT____00056, INT____00058, INT____00060, INT____00062, values[10]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00064, INT____00066, INT____00068, INT____00070, INT____00072, INT____00074, values[2]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00076, INT____00078, INT____00080, INT____00082, INT____00084, INT____00086, values[4]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00088, INT____00090, INT____00092, INT____00094, INT____00096, INT____00098, values[6]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00100, INT____00102, INT____00104, INT____00106, INT____00108, INT____00110, values[8]], 0);
constraint int_lin_eq([-1, -1, -1, -1, -1, -1, 1], [INT____00112, INT____00114, INT____00116, INT____00118, INT____00120, INT____00122, values[10]], 0);
solve satisfy;
