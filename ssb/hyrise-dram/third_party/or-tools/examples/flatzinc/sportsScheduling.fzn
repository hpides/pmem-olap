predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..18] of int: allowed = [1, 2, 1, 1, 3, 2, 1, 4, 3, 2, 3, 4, 2, 4, 5, 3, 4, 6];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00125 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00129 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
array [1..6] of var 1..6: game :: output_array([1..3, 1..2]);
array [1..12] of var 1..4: schedule :: output_array([1..3, 1..2, 1..2]);
constraint all_different_int([schedule[1], schedule[2], schedule[3], schedule[4]]);
constraint all_different_int([schedule[5], schedule[6], schedule[7], schedule[8]]);
constraint all_different_int([schedule[9], schedule[10], schedule[11], schedule[12]]);
constraint all_different_int([game[1], game[2], game[3], game[4], game[5], game[6]]);
constraint array_bool_and([BOOL____00027, BOOL____00026, BOOL____00025], BOOL____00037) :: defines_var(BOOL____00037);
constraint array_bool_and([BOOL____00029, BOOL____00028, BOOL____00025], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00031, BOOL____00030, BOOL____00025], BOOL____00039) :: defines_var(BOOL____00039);
constraint array_bool_and([BOOL____00033, BOOL____00028, BOOL____00032], BOOL____00040) :: defines_var(BOOL____00040);
constraint array_bool_and([BOOL____00034, BOOL____00030, BOOL____00032], BOOL____00041) :: defines_var(BOOL____00041);
constraint array_bool_and([BOOL____00036, BOOL____00030, BOOL____00035], BOOL____00042) :: defines_var(BOOL____00042);
constraint array_bool_and([BOOL____00045, BOOL____00044, BOOL____00043], BOOL____00055) :: defines_var(BOOL____00055);
constraint array_bool_and([BOOL____00047, BOOL____00046, BOOL____00043], BOOL____00056) :: defines_var(BOOL____00056);
constraint array_bool_and([BOOL____00049, BOOL____00048, BOOL____00043], BOOL____00057) :: defines_var(BOOL____00057);
constraint array_bool_and([BOOL____00051, BOOL____00046, BOOL____00050], BOOL____00058) :: defines_var(BOOL____00058);
constraint array_bool_and([BOOL____00052, BOOL____00048, BOOL____00050], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_and([BOOL____00054, BOOL____00048, BOOL____00053], BOOL____00060) :: defines_var(BOOL____00060);
constraint array_bool_and([BOOL____00063, BOOL____00062, BOOL____00061], BOOL____00073) :: defines_var(BOOL____00073);
constraint array_bool_and([BOOL____00065, BOOL____00064, BOOL____00061], BOOL____00074) :: defines_var(BOOL____00074);
constraint array_bool_and([BOOL____00067, BOOL____00066, BOOL____00061], BOOL____00075) :: defines_var(BOOL____00075);
constraint array_bool_and([BOOL____00069, BOOL____00064, BOOL____00068], BOOL____00076) :: defines_var(BOOL____00076);
constraint array_bool_and([BOOL____00070, BOOL____00066, BOOL____00068], BOOL____00077) :: defines_var(BOOL____00077);
constraint array_bool_and([BOOL____00072, BOOL____00066, BOOL____00071], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_and([BOOL____00081, BOOL____00080, BOOL____00079], BOOL____00091) :: defines_var(BOOL____00091);
constraint array_bool_and([BOOL____00083, BOOL____00082, BOOL____00079], BOOL____00092) :: defines_var(BOOL____00092);
constraint array_bool_and([BOOL____00085, BOOL____00084, BOOL____00079], BOOL____00093) :: defines_var(BOOL____00093);
constraint array_bool_and([BOOL____00087, BOOL____00082, BOOL____00086], BOOL____00094) :: defines_var(BOOL____00094);
constraint array_bool_and([BOOL____00088, BOOL____00084, BOOL____00086], BOOL____00095) :: defines_var(BOOL____00095);
constraint array_bool_and([BOOL____00090, BOOL____00084, BOOL____00089], BOOL____00096) :: defines_var(BOOL____00096);
constraint array_bool_and([BOOL____00099, BOOL____00098, BOOL____00097], BOOL____00109) :: defines_var(BOOL____00109);
constraint array_bool_and([BOOL____00101, BOOL____00100, BOOL____00097], BOOL____00110) :: defines_var(BOOL____00110);
constraint array_bool_and([BOOL____00103, BOOL____00102, BOOL____00097], BOOL____00111) :: defines_var(BOOL____00111);
constraint array_bool_and([BOOL____00105, BOOL____00100, BOOL____00104], BOOL____00112) :: defines_var(BOOL____00112);
constraint array_bool_and([BOOL____00106, BOOL____00102, BOOL____00104], BOOL____00113) :: defines_var(BOOL____00113);
constraint array_bool_and([BOOL____00108, BOOL____00102, BOOL____00107], BOOL____00114) :: defines_var(BOOL____00114);
constraint array_bool_and([BOOL____00117, BOOL____00116, BOOL____00115], BOOL____00127) :: defines_var(BOOL____00127);
constraint array_bool_and([BOOL____00119, BOOL____00118, BOOL____00115], BOOL____00128) :: defines_var(BOOL____00128);
constraint array_bool_and([BOOL____00121, BOOL____00120, BOOL____00115], BOOL____00129) :: defines_var(BOOL____00129);
constraint array_bool_and([BOOL____00123, BOOL____00118, BOOL____00122], BOOL____00130) :: defines_var(BOOL____00130);
constraint array_bool_and([BOOL____00124, BOOL____00120, BOOL____00122], BOOL____00131) :: defines_var(BOOL____00131);
constraint array_bool_and([BOOL____00126, BOOL____00120, BOOL____00125], BOOL____00132) :: defines_var(BOOL____00132);
constraint array_bool_or([BOOL____00042, BOOL____00041, BOOL____00040, BOOL____00039, BOOL____00037, BOOL____00038], true);
constraint array_bool_or([BOOL____00060, BOOL____00059, BOOL____00058, BOOL____00057, BOOL____00055, BOOL____00056], true);
constraint array_bool_or([BOOL____00078, BOOL____00077, BOOL____00076, BOOL____00075, BOOL____00073, BOOL____00074], true);
constraint array_bool_or([BOOL____00096, BOOL____00095, BOOL____00094, BOOL____00093, BOOL____00091, BOOL____00092], true);
constraint array_bool_or([BOOL____00114, BOOL____00113, BOOL____00112, BOOL____00111, BOOL____00109, BOOL____00110], true);
constraint array_bool_or([BOOL____00132, BOOL____00131, BOOL____00130, BOOL____00129, BOOL____00127, BOOL____00128], true);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint int_eq_reif(1, schedule[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(1, schedule[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(1, schedule[5], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(1, schedule[6], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(1, schedule[9], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(1, schedule[10], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(2, schedule[3], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(2, schedule[4], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(2, schedule[7], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(2, schedule[8], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(2, schedule[11], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(2, schedule[12], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(game[1], 1, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(game[1], 2, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(game[1], 3, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(game[1], 4, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(game[1], 5, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(game[1], 6, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(game[2], 1, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(game[2], 2, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(game[2], 3, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(game[2], 4, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(game[2], 5, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(game[2], 6, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(game[3], 1, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(game[3], 2, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(game[3], 3, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(game[3], 4, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(game[3], 5, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(game[3], 6, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(game[4], 1, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(game[4], 2, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(game[4], 3, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(game[4], 4, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(game[4], 5, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(game[4], 6, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(game[5], 1, BOOL____00099) :: defines_var(BOOL____00099);
constraint int_eq_reif(game[5], 2, BOOL____00101) :: defines_var(BOOL____00101);
constraint int_eq_reif(game[5], 3, BOOL____00103) :: defines_var(BOOL____00103);
constraint int_eq_reif(game[5], 4, BOOL____00105) :: defines_var(BOOL____00105);
constraint int_eq_reif(game[5], 5, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_eq_reif(game[5], 6, BOOL____00108) :: defines_var(BOOL____00108);
constraint int_eq_reif(game[6], 1, BOOL____00117) :: defines_var(BOOL____00117);
constraint int_eq_reif(game[6], 2, BOOL____00119) :: defines_var(BOOL____00119);
constraint int_eq_reif(game[6], 3, BOOL____00121) :: defines_var(BOOL____00121);
constraint int_eq_reif(game[6], 4, BOOL____00123) :: defines_var(BOOL____00123);
constraint int_eq_reif(game[6], 5, BOOL____00124) :: defines_var(BOOL____00124);
constraint int_eq_reif(game[6], 6, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_eq_reif(schedule[1], 1, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(schedule[1], 2, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(schedule[1], 3, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(schedule[2], 2, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(schedule[2], 3, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(schedule[2], 4, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(schedule[3], 1, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(schedule[3], 2, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(schedule[3], 3, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(schedule[4], 2, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(schedule[4], 3, BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(schedule[4], 4, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(schedule[5], 1, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(schedule[5], 2, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(schedule[5], 3, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(schedule[6], 2, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(schedule[6], 3, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(schedule[6], 4, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(schedule[7], 1, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(schedule[7], 2, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(schedule[7], 3, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_eq_reif(schedule[8], 2, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(schedule[8], 3, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_eq_reif(schedule[8], 4, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(schedule[9], 1, BOOL____00097) :: defines_var(BOOL____00097);
constraint int_eq_reif(schedule[9], 2, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_eq_reif(schedule[9], 3, BOOL____00107) :: defines_var(BOOL____00107);
constraint int_eq_reif(schedule[10], 2, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_eq_reif(schedule[10], 3, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_eq_reif(schedule[10], 4, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_eq_reif(schedule[11], 1, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_eq_reif(schedule[11], 2, BOOL____00122) :: defines_var(BOOL____00122);
constraint int_eq_reif(schedule[11], 3, BOOL____00125) :: defines_var(BOOL____00125);
constraint int_eq_reif(schedule[12], 2, BOOL____00116) :: defines_var(BOOL____00116);
constraint int_eq_reif(schedule[12], 3, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_eq_reif(schedule[12], 4, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1], [INT____00014, INT____00016, INT____00018, INT____00020, INT____00022, INT____00024], 2);
solve  :: int_search([schedule[1], schedule[2], schedule[3], schedule[4], schedule[5], schedule[6], schedule[7], schedule[8], schedule[9], schedule[10], schedule[11], schedule[12], game[1], game[2], game[3], game[4], game[5], game[6]], first_fail, indomain_max, complete) satisfy;
