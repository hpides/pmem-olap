var -8..8: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00002 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00004 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00006 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00008 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00010 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00011 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00012 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00014 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00016 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00018 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00019 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00020 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00022 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00024 :: is_defined_var :: var_is_introduced;
var 2..2: c :: output_var = 2;
array [1..4] of var 1..9: x :: output_array([1..4]);
constraint int_abs(INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_abs(INT____00003, INT____00004) :: defines_var(INT____00004);
constraint int_abs(INT____00005, INT____00006) :: defines_var(INT____00006);
constraint int_abs(INT____00007, INT____00008) :: defines_var(INT____00008);
constraint int_abs(INT____00009, INT____00010) :: defines_var(INT____00010);
constraint int_abs(INT____00011, INT____00012) :: defines_var(INT____00012);
constraint int_abs(INT____00013, INT____00014) :: defines_var(INT____00014);
constraint int_abs(INT____00015, INT____00016) :: defines_var(INT____00016);
constraint int_abs(INT____00017, INT____00018) :: defines_var(INT____00018);
constraint int_abs(INT____00019, INT____00020) :: defines_var(INT____00020);
constraint int_abs(INT____00021, INT____00022) :: defines_var(INT____00022);
constraint int_abs(INT____00023, INT____00024) :: defines_var(INT____00024);
constraint int_eq(1, x[2]);
constraint int_eq(3, x[4]);
constraint int_eq(5, x[1]);
constraint int_eq(9, x[3]);
constraint int_le(c, INT____00002);
constraint int_le(c, INT____00004);
constraint int_le(c, INT____00006);
constraint int_le(c, INT____00008);
constraint int_le(c, INT____00010);
constraint int_le(c, INT____00012);
constraint int_le(c, INT____00014);
constraint int_le(c, INT____00016);
constraint int_le(c, INT____00018);
constraint int_le(c, INT____00020);
constraint int_le(c, INT____00022);
constraint int_le(c, INT____00024);
constraint int_lin_eq([-1, -1, 1], [INT____00007, x[1], x[2]], 0) :: defines_var(INT____00007);
constraint int_lin_eq([-1, -1, 1], [INT____00013, x[1], x[3]], 0) :: defines_var(INT____00013);
constraint int_lin_eq([-1, -1, 1], [INT____00015, x[2], x[3]], 0) :: defines_var(INT____00015);
constraint int_lin_eq([-1, -1, 1], [INT____00019, x[1], x[4]], 0) :: defines_var(INT____00019);
constraint int_lin_eq([-1, -1, 1], [INT____00021, x[2], x[4]], 0) :: defines_var(INT____00021);
constraint int_lin_eq([-1, -1, 1], [INT____00023, x[3], x[4]], 0) :: defines_var(INT____00023);
constraint int_plus(INT____00001, x[2], x[1]) :: defines_var(INT____00001);
constraint int_plus(INT____00003, x[3], x[1]) :: defines_var(INT____00003);
constraint int_plus(INT____00005, x[4], x[1]) :: defines_var(INT____00005);
constraint int_plus(INT____00009, x[3], x[2]) :: defines_var(INT____00009);
constraint int_plus(INT____00011, x[4], x[2]) :: defines_var(INT____00011);
constraint int_plus(INT____00017, x[4], x[3]) :: defines_var(INT____00017);
solve satisfy;
