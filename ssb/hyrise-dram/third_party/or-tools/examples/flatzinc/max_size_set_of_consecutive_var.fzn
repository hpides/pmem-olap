predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00133 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..40: INT____00019 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..50: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..60: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..70: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..80: INT____00039 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00041 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00045 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00049 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..40: INT____00053 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..50: INT____00057 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00060 :: is_defined_var :: var_is_introduced;
var 0..60: INT____00061 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00064 :: is_defined_var :: var_is_introduced;
var 0..70: INT____00065 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00067 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00070 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00071 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00074 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00075 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00078 :: is_defined_var :: var_is_introduced;
var 0..40: INT____00079 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00082 :: is_defined_var :: var_is_introduced;
var 0..50: INT____00083 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00086 :: is_defined_var :: var_is_introduced;
var 0..60: INT____00087 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00089 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00092 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00093 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00096 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00097 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00100 :: is_defined_var :: var_is_introduced;
var 0..40: INT____00101 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00104 :: is_defined_var :: var_is_introduced;
var 0..50: INT____00105 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00107 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00110 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00111 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00114 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00115 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00118 :: is_defined_var :: var_is_introduced;
var 0..40: INT____00119 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00121 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00124 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00125 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00128 :: is_defined_var :: var_is_introduced;
var 0..30: INT____00129 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00131 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00134 :: is_defined_var :: var_is_introduced;
var 0..20: INT____00135 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00137 :: is_defined_var :: var_is_introduced;
array [1..64] of var 0..10: mat____00002;
var 6..6: max_set :: output_var = 6;
array [1..8] of var 0..10: occ____00001;
array [1..10] of var 1..8: variables :: output_array([1..10]);
constraint array_bool_and([BOOL____00006, BOOL____00003], BOOL____00007) :: defines_var(BOOL____00007);
constraint array_bool_and([BOOL____00011, BOOL____00006], BOOL____00043) :: defines_var(BOOL____00043);
constraint array_bool_and([BOOL____00016, BOOL____00011], BOOL____00069) :: defines_var(BOOL____00069);
constraint array_bool_and([BOOL____00021, BOOL____00016], BOOL____00091) :: defines_var(BOOL____00091);
constraint array_bool_and([BOOL____00026, BOOL____00021], BOOL____00109) :: defines_var(BOOL____00109);
constraint array_bool_and([BOOL____00031, BOOL____00026], BOOL____00123) :: defines_var(BOOL____00123);
constraint array_bool_and([BOOL____00036, BOOL____00031], BOOL____00133) :: defines_var(BOOL____00133);
constraint array_bool_and([BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_and([BOOL____00016, BOOL____00011, BOOL____00006], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_and([BOOL____00021, BOOL____00016, BOOL____00011], BOOL____00073) :: defines_var(BOOL____00073);
constraint array_bool_and([BOOL____00026, BOOL____00021, BOOL____00016], BOOL____00095) :: defines_var(BOOL____00095);
constraint array_bool_and([BOOL____00031, BOOL____00026, BOOL____00021], BOOL____00113) :: defines_var(BOOL____00113);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026], BOOL____00127) :: defines_var(BOOL____00127);
constraint array_bool_and([BOOL____00016, BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006], BOOL____00051) :: defines_var(BOOL____00051);
constraint array_bool_and([BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011], BOOL____00077) :: defines_var(BOOL____00077);
constraint array_bool_and([BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016], BOOL____00099) :: defines_var(BOOL____00099);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026, BOOL____00021], BOOL____00117) :: defines_var(BOOL____00117);
constraint array_bool_and([BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00022) :: defines_var(BOOL____00022);
constraint array_bool_and([BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006], BOOL____00055) :: defines_var(BOOL____00055);
constraint array_bool_and([BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011], BOOL____00081) :: defines_var(BOOL____00081);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016], BOOL____00103) :: defines_var(BOOL____00103);
constraint array_bool_and([BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011], BOOL____00085) :: defines_var(BOOL____00085);
constraint array_bool_and([BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00032) :: defines_var(BOOL____00032);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006], BOOL____00063) :: defines_var(BOOL____00063);
constraint array_bool_and([BOOL____00036, BOOL____00031, BOOL____00026, BOOL____00021, BOOL____00016, BOOL____00011, BOOL____00006, BOOL____00003], BOOL____00037) :: defines_var(BOOL____00037);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00006, INT____00041) :: defines_var(INT____00041);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00011, INT____00067) :: defines_var(INT____00067);
constraint bool2int(BOOL____00012, INT____00013) :: defines_var(INT____00013);
constraint bool2int(BOOL____00016, INT____00089) :: defines_var(INT____00089);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00021, INT____00107) :: defines_var(INT____00107);
constraint bool2int(BOOL____00022, INT____00023) :: defines_var(INT____00023);
constraint bool2int(BOOL____00026, INT____00121) :: defines_var(INT____00121);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00031, INT____00131) :: defines_var(INT____00131);
constraint bool2int(BOOL____00032, INT____00033) :: defines_var(INT____00033);
constraint bool2int(BOOL____00036, INT____00137) :: defines_var(INT____00137);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00059, INT____00060) :: defines_var(INT____00060);
constraint bool2int(BOOL____00063, INT____00064) :: defines_var(INT____00064);
constraint bool2int(BOOL____00069, INT____00070) :: defines_var(INT____00070);
constraint bool2int(BOOL____00073, INT____00074) :: defines_var(INT____00074);
constraint bool2int(BOOL____00077, INT____00078) :: defines_var(INT____00078);
constraint bool2int(BOOL____00081, INT____00082) :: defines_var(INT____00082);
constraint bool2int(BOOL____00085, INT____00086) :: defines_var(INT____00086);
constraint bool2int(BOOL____00091, INT____00092) :: defines_var(INT____00092);
constraint bool2int(BOOL____00095, INT____00096) :: defines_var(INT____00096);
constraint bool2int(BOOL____00099, INT____00100) :: defines_var(INT____00100);
constraint bool2int(BOOL____00103, INT____00104) :: defines_var(INT____00104);
constraint bool2int(BOOL____00109, INT____00110) :: defines_var(INT____00110);
constraint bool2int(BOOL____00113, INT____00114) :: defines_var(INT____00114);
constraint bool2int(BOOL____00117, INT____00118) :: defines_var(INT____00118);
constraint bool2int(BOOL____00123, INT____00124) :: defines_var(INT____00124);
constraint bool2int(BOOL____00127, INT____00128) :: defines_var(INT____00128);
constraint bool2int(BOOL____00133, INT____00134) :: defines_var(INT____00134);
constraint global_cardinality(variables, [1, 2, 3, 4, 5, 6, 7, 8], occ____00001);
constraint int_eq(mat____00002[9], 0);
constraint int_eq(mat____00002[17], 0);
constraint int_eq(mat____00002[18], 0);
constraint int_eq(mat____00002[25], 0);
constraint int_eq(mat____00002[26], 0);
constraint int_eq(mat____00002[27], 0);
constraint int_eq(mat____00002[33], 0);
constraint int_eq(mat____00002[34], 0);
constraint int_eq(mat____00002[35], 0);
constraint int_eq(mat____00002[36], 0);
constraint int_eq(mat____00002[41], 0);
constraint int_eq(mat____00002[42], 0);
constraint int_eq(mat____00002[43], 0);
constraint int_eq(mat____00002[44], 0);
constraint int_eq(mat____00002[45], 0);
constraint int_eq(mat____00002[49], 0);
constraint int_eq(mat____00002[50], 0);
constraint int_eq(mat____00002[51], 0);
constraint int_eq(mat____00002[52], 0);
constraint int_eq(mat____00002[53], 0);
constraint int_eq(mat____00002[54], 0);
constraint int_eq(mat____00002[57], 0);
constraint int_eq(mat____00002[58], 0);
constraint int_eq(mat____00002[59], 0);
constraint int_eq(mat____00002[60], 0);
constraint int_eq(mat____00002[61], 0);
constraint int_eq(mat____00002[62], 0);
constraint int_eq(mat____00002[63], 0);
constraint int_eq(variables[1], 3);
constraint int_eq(variables[2], 1);
constraint int_eq(variables[3], 3);
constraint int_eq(variables[4], 7);
constraint int_eq(variables[5], 4);
constraint int_eq(variables[6], 1);
constraint int_eq(variables[7], 2);
constraint int_eq(variables[8], 8);
constraint int_eq(variables[9], 7);
constraint int_eq(variables[10], 6);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00014, occ____00001[1], occ____00001[2], occ____00001[3]], 0) :: defines_var(INT____00014);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00049, occ____00001[2], occ____00001[3], occ____00001[4]], 0) :: defines_var(INT____00049);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00075, occ____00001[3], occ____00001[4], occ____00001[5]], 0) :: defines_var(INT____00075);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00097, occ____00001[4], occ____00001[5], occ____00001[6]], 0) :: defines_var(INT____00097);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00115, occ____00001[5], occ____00001[6], occ____00001[7]], 0) :: defines_var(INT____00115);
constraint int_lin_eq([-1, 1, 1, 1], [INT____00129, occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00129);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00019, occ____00001[1], occ____00001[2], occ____00001[3], occ____00001[4]], 0) :: defines_var(INT____00019);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00053, occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5]], 0) :: defines_var(INT____00053);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00079, occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6]], 0) :: defines_var(INT____00079);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00101, occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7]], 0) :: defines_var(INT____00101);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00119, occ____00001[5], occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00119);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [INT____00024, occ____00001[1], occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5]], 0) :: defines_var(INT____00024);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [INT____00057, occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6]], 0) :: defines_var(INT____00057);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [INT____00083, occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7]], 0) :: defines_var(INT____00083);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [INT____00105, occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00105);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [INT____00029, occ____00001[1], occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6]], 0) :: defines_var(INT____00029);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [INT____00061, occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7]], 0) :: defines_var(INT____00061);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [INT____00087, occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00087);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1], [INT____00034, occ____00001[1], occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7]], 0) :: defines_var(INT____00034);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1], [INT____00065, occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00065);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00039, occ____00001[1], occ____00001[2], occ____00001[3], occ____00001[4], occ____00001[5], occ____00001[6], occ____00001[7], occ____00001[8]], 0) :: defines_var(INT____00039);
constraint int_lt_reif(0, occ____00001[1], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lt_reif(0, occ____00001[2], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lt_reif(0, occ____00001[3], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_lt_reif(0, occ____00001[4], BOOL____00016) :: defines_var(BOOL____00016);
constraint int_lt_reif(0, occ____00001[5], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_lt_reif(0, occ____00001[6], BOOL____00026) :: defines_var(BOOL____00026);
constraint int_lt_reif(0, occ____00001[7], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_lt_reif(0, occ____00001[8], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_plus(occ____00001[1], occ____00001[2], INT____00009) :: defines_var(INT____00009);
constraint int_plus(occ____00001[2], occ____00001[3], INT____00045) :: defines_var(INT____00045);
constraint int_plus(occ____00001[3], occ____00001[4], INT____00071) :: defines_var(INT____00071);
constraint int_plus(occ____00001[4], occ____00001[5], INT____00093) :: defines_var(INT____00093);
constraint int_plus(occ____00001[5], occ____00001[6], INT____00111) :: defines_var(INT____00111);
constraint int_plus(occ____00001[6], occ____00001[7], INT____00125) :: defines_var(INT____00125);
constraint int_plus(occ____00001[7], occ____00001[8], INT____00135) :: defines_var(INT____00135);
constraint int_times(INT____00004, occ____00001[1], mat____00002[1]);
constraint int_times(INT____00008, INT____00009, mat____00002[2]);
constraint int_times(INT____00013, INT____00014, mat____00002[3]);
constraint int_times(INT____00018, INT____00019, mat____00002[4]);
constraint int_times(INT____00023, INT____00024, mat____00002[5]);
constraint int_times(INT____00028, INT____00029, mat____00002[6]);
constraint int_times(INT____00033, INT____00034, mat____00002[7]);
constraint int_times(INT____00038, INT____00039, mat____00002[8]);
constraint int_times(INT____00041, occ____00001[2], mat____00002[10]);
constraint int_times(INT____00044, INT____00045, mat____00002[11]);
constraint int_times(INT____00048, INT____00049, mat____00002[12]);
constraint int_times(INT____00052, INT____00053, mat____00002[13]);
constraint int_times(INT____00056, INT____00057, mat____00002[14]);
constraint int_times(INT____00060, INT____00061, mat____00002[15]);
constraint int_times(INT____00064, INT____00065, mat____00002[16]);
constraint int_times(INT____00067, occ____00001[3], mat____00002[19]);
constraint int_times(INT____00070, INT____00071, mat____00002[20]);
constraint int_times(INT____00074, INT____00075, mat____00002[21]);
constraint int_times(INT____00078, INT____00079, mat____00002[22]);
constraint int_times(INT____00082, INT____00083, mat____00002[23]);
constraint int_times(INT____00086, INT____00087, mat____00002[24]);
constraint int_times(INT____00089, occ____00001[4], mat____00002[28]);
constraint int_times(INT____00092, INT____00093, mat____00002[29]);
constraint int_times(INT____00096, INT____00097, mat____00002[30]);
constraint int_times(INT____00100, INT____00101, mat____00002[31]);
constraint int_times(INT____00104, INT____00105, mat____00002[32]);
constraint int_times(INT____00107, occ____00001[5], mat____00002[37]);
constraint int_times(INT____00110, INT____00111, mat____00002[38]);
constraint int_times(INT____00114, INT____00115, mat____00002[39]);
constraint int_times(INT____00118, INT____00119, mat____00002[40]);
constraint int_times(INT____00121, occ____00001[6], mat____00002[46]);
constraint int_times(INT____00124, INT____00125, mat____00002[47]);
constraint int_times(INT____00128, INT____00129, mat____00002[48]);
constraint int_times(INT____00131, occ____00001[7], mat____00002[55]);
constraint int_times(INT____00134, INT____00135, mat____00002[56]);
constraint int_times(INT____00137, occ____00001[8], mat____00002[64]);
constraint maximum_int(6, [mat____00002[1], mat____00002[2], mat____00002[3], mat____00002[4], mat____00002[5], mat____00002[6], mat____00002[7], mat____00002[8], mat____00002[9], mat____00002[10], mat____00002[11], mat____00002[12], mat____00002[13], mat____00002[14], mat____00002[15], mat____00002[16], mat____00002[17], mat____00002[18], mat____00002[19], mat____00002[20], mat____00002[21], mat____00002[22], mat____00002[23], mat____00002[24], mat____00002[25], mat____00002[26], mat____00002[27], mat____00002[28], mat____00002[29], mat____00002[30], mat____00002[31], mat____00002[32], mat____00002[33], mat____00002[34], mat____00002[35], mat____00002[36], mat____00002[37], mat____00002[38], mat____00002[39], mat____00002[40], mat____00002[41], mat____00002[42], mat____00002[43], mat____00002[44], mat____00002[45], mat____00002[46], mat____00002[47], mat____00002[48], mat____00002[49], mat____00002[50], mat____00002[51], mat____00002[52], mat____00002[53], mat____00002[54], mat____00002[55], mat____00002[56], mat____00002[57], mat____00002[58], mat____00002[59], mat____00002[60], mat____00002[61], mat____00002[62], mat____00002[63], mat____00002[64]]);
solve satisfy;
