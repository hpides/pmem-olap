array [1..18] of int: combinations = [5, 0, 0, 4, 1, 0, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 3, 0];
array [1..3] of int: cuts = [3, 5, 9];
array [1..3] of int: demand = [25, 20, 15];
var int: INT____00001 :: is_defined_var :: var_is_introduced;
var int: total_sum :: output_var = INT____00001;
array [1..6] of var int: x :: output_array([1..6]);
constraint int_le(0, x[1]);
constraint int_le(0, x[2]);
constraint int_le(0, x[3]);
constraint int_le(0, x[4]);
constraint int_le(0, x[5]);
constraint int_le(0, x[6]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-1, -1], [x[4], x[5]], -15);
constraint int_lin_le([-1, -2, -1, -3], [x[2], x[3], x[5], x[6]], -20);
constraint int_lin_le([-5, -4, -2, -2, -1], [x[1], x[2], x[3], x[4], x[5]], -25);
solve minimize INT____00001;
