<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <AssemblyName>Google.OrTools</AssemblyName>
    <Version>@PROJECT_VERSION@</Version>

    <!-- Nuget Properties -->
    <Description>.NET wrapper for the Operations Research Tools project</Description>

    <!-- Pack Option -->
    <Title>Google.OrTools v@PROJECT_VERSION@</Title>
    <PackageId>Google.OrTools</PackageId>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

    <!-- Signing -->
    <AssemblyOriginatorKeyFile>../or-tools.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign>false</PublicSign>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <!-- On windows we can build cross-platform netstandard and windows-only netframework.-->
  <PropertyGroup Condition=" '$(OS)' != 'Windows_NT' And '$(OS)' != 'Windows' ">
    <TargetFrameworks>netstandard2.1;netstandard2.0</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(OS)' == 'Windows_NT' Or '$(OS)' == 'Windows' ">
    <TargetFrameworks>netstandard2.1;netstandard2.0;net452</TargetFrameworks>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/algorithms/*.cs">
      <Link>algorithms/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/graph/*.cs">
      <Link>graph/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="@PROJECT_SOURCE_DIR@/ortools/graph/csharp/*.cs">
      <Link>graph/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/linear_solver/*.cs">
      <Link>linear_solver/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="@PROJECT_SOURCE_DIR@/ortools/linear_solver/csharp/*.cs">
      <Link>linear_solver/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/constraint_solver/*.cs">
      <Link>constraint_solver/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="@PROJECT_SOURCE_DIR@/ortools/constraint_solver/csharp/*.cs">
      <Link>constraint_solver/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/sat/*.cs">
      <Link>sat/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="@PROJECT_SOURCE_DIR@/ortools/sat/csharp/*.cs">
      <Link>sat/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="@PROJECT_DOTNET_DIR@/ortools/util/*.cs">
      <Link>util/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="@PROJECT_SOURCE_DIR@/ortools/util/csharp/*.cs">
      <Link>util/%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <!-- Validate at least one runtime package has been generated -->
  <Target Name="ValidateRuntimePack" BeforeTargets="GenerateNuspec">
    <ItemGroup>
      <RuntimeLinux Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.linux-x64.*.nupkg"/>
      <RuntimeOsx Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.osx-x64.*.nupkg"/>
      <RuntimeWin Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.win-x64.*.nupkg"/>
    </ItemGroup>
    <Message Importance="high" Text="Package Google.OrTools.runtime.linux-x64: found" Condition="Exists('@(RuntimeLinux)')"/>
    <Message Importance="high" Text="-------  $(OS)  "/>
    <Message Importance="high" Text="Package Google.OrTools.runtime.linux-x64: not found" Condition="!Exists('@(RuntimeLinux)')"/>
    <Message Importance="high" Text="Package Google.OrTools.runtime.osx-x64: found" Condition="Exists('@(RuntimeOsx)')"/>
    <Message Importance="high" Text="Package Google.OrTools.runtime.osx-x64: not found" Condition="!Exists('@(RuntimeOsx)')"/>
    <Message Importance="high" Text="Package Google.OrTools.runtime.win-x64: found" Condition="Exists('@(RuntimeWin)')"/>
    <Message Importance="high" Text="Package Google.OrTools.runtime.win-x64: not found" Condition="!Exists('@(RuntimeWin)')"/>
    <Error Text="You must locally 'dotnet pack' at least one Google.OrTools.runtime.{rid} Project." Condition="!Exists('@(RuntimeLinux)') AND !Exists('@(RuntimeOsx)') AND !Exists('@(RuntimeWin)')"/>
  </Target>

  <!-- Copy all .proto file(s) -->
  <ItemGroup>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/algorithms/*.proto">
      <PackagePath>content/algorithms</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/bop/*.proto">
      <PackagePath>content/bop</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/constraint_solver/*.proto">
      <PackagePath>content/constraint_solver</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/data/*.proto">
      <PackagePath>content/data</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/glop/*.proto">
      <PackagePath>content/glop</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/graph/*.proto">
      <PackagePath>content/graph</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/linear_solver/*.proto">
      <PackagePath>content/linear_solver</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/sat/*.proto">
      <PackagePath>content/sat</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="@PROJECT_SOURCE_DIR@/ortools/util/*.proto">
      <PackagePath>content/util</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.12.2"/>
  </ItemGroup>

  <!-- Need to add required runtime dependencies so Meta-Project will pull runtime Nuget(s) -->
  <PropertyGroup>
    <RestoreSources>@DOTNET_PACKAGES_DIR@;$(RestoreSources);https://api.nuget.org/v3/index.json</RestoreSources>
  </PropertyGroup>

  <ItemGroup>
    <RuntimeLinux Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.linux-x64.*.nupkg"/>
    <RuntimeOsx Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.osx-x64.*.nupkg"/>
    <RuntimeWin Include="@DOTNET_PACKAGES_DIR@/Google.OrTools.runtime.win-x64.*.nupkg"/>
    <PackageReference Include="Google.OrTools.runtime.linux-x64" Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeLinux)')"/>
    <PackageReference Include="Google.OrTools.runtime.osx-x64"   Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeOsx)')"  />
    <PackageReference Include="Google.OrTools.runtime.win-x64"   Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeWin)')"  />
  </ItemGroup>
</Project>
