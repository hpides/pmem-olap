<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFrameworks>netstandard2.1;netstandard2.0;net452</TargetFrameworks>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <AssemblyName>google-ortools-native</AssemblyName>
    <Version>@PROJECT_VERSION@</Version>

    <!-- Nuget Properties -->
    <Description>.NET native wrapper for the Operations Research Tools project</Description>
    <IncludeBuildOutput>false</IncludeBuildOutput>

    <!-- Pack Option -->
    <Title>Google.OrTools win-x64 v@PROJECT_VERSION@</Title>
    <PackageId>Google.OrTools.runtime.win-x64</PackageId>

    <!-- Signing -->
    <AssemblyOriginatorKeyFile>../or-tools.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign>false</PublicSign>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <ItemGroup>
    <!-- Native library must be in native directory... -->
    <!-- On windows libortools is built as static -->
    <Content Include="@native@">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>

    <!-- For netframework we need to copy the native binary manually during build on Nuget consumer side. That's why we need a separate target file doing this for us. -->
    <Content Include="$(MSBuildThisFileDirectory)\Google.OrTools.runtime.win-x64.targets">
      <PackagePath>build/net45/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>
