diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 849679995..1efc6141c 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -15,6 +15,10 @@ endif ()
 if(POLICY CMP0048)
   cmake_policy(SET CMP0048 NEW)
 endif()
+# option() honors normal variables.
+if(POLICY CMP0077)
+	cmake_policy(SET CMP0077 NEW)
+endif()
 
 # Project
 project(protobuf C CXX)
@@ -48,7 +52,7 @@ else (BUILD_SHARED_LIBS)
 endif (BUILD_SHARED_LIBS)
 option(protobuf_BUILD_SHARED_LIBS "Build Shared Libraries" ${protobuf_BUILD_SHARED_LIBS_DEFAULT})
 include(CMakeDependentOption)
-cmake_dependent_option(protobuf_MSVC_STATIC_RUNTIME "Link static runtime libraries" ON
+cmake_dependent_option(protobuf_MSVC_STATIC_RUNTIME "Link static runtime libraries" OFF
   "NOT protobuf_BUILD_SHARED_LIBS" OFF)
 set(protobuf_WITH_ZLIB_DEFAULT ON)
 option(protobuf_WITH_ZLIB "Build with zlib support" ${protobuf_WITH_ZLIB_DEFAULT})
@@ -116,8 +120,10 @@ endif (CMAKE_USE_PTHREADS_INIT)
 
 set(_protobuf_FIND_ZLIB)
 if (protobuf_WITH_ZLIB)
-  find_package(ZLIB)
-  if (ZLIB_FOUND)
+  if (NOT TARGET ZLIB::ZLIB)
+    find_package(ZLIB)
+  endif()
+  if (ZLIB_FOUND OR TARGET ZLIB::ZLIB)
     set(HAVE_ZLIB 1)
     # FindZLIB module define ZLIB_INCLUDE_DIRS variable
     # Set ZLIB_INCLUDE_DIRECTORIES for compatible
@@ -125,15 +131,15 @@ if (protobuf_WITH_ZLIB)
     # Using imported target if exists
     if (TARGET ZLIB::ZLIB)
       set(ZLIB_LIBRARIES ZLIB::ZLIB)
-      set(_protobuf_FIND_ZLIB "if(NOT ZLIB_FOUND)\n  find_package(ZLIB)\nendif()")
+      set(_protobuf_FIND_ZLIB "if(NOT ZLIB_FOUND AND NOT TARGET ZLIB::ZLIB)\n  find_package(ZLIB)\nendif()")
     endif (TARGET ZLIB::ZLIB)
-  else (ZLIB_FOUND)
+  else (ZLIB_FOUND OR TARGET ZLIB::ZLIB)
     set(HAVE_ZLIB 0)
     # Explicitly set these to empty (override NOT_FOUND) so cmake doesn't
     # complain when we use them later.
     set(ZLIB_INCLUDE_DIRECTORIES)
     set(ZLIB_LIBRARIES)
-  endif (ZLIB_FOUND)
+  endif (ZLIB_FOUND OR TARGET ZLIB::ZLIB)
 endif (protobuf_WITH_ZLIB)
 
 if (HAVE_ZLIB)
