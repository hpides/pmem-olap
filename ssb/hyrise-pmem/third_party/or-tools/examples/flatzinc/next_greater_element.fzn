var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var 7..7: var1 :: output_var = 7;
var 8..8: var2 :: output_var = 8;
array [1..4] of var 1..9: variables :: output_array([1..4]);
constraint array_bool_and([BOOL____00001, BOOL____00002], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_and([BOOL____00005, BOOL____00003, BOOL____00004], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_and([BOOL____00006, BOOL____00007, BOOL____00008, BOOL____00005], BOOL____00014) :: defines_var(BOOL____00014);
constraint array_bool_and([BOOL____00009, BOOL____00010, BOOL____00011, BOOL____00008, BOOL____00005], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_or([BOOL____00015, BOOL____00014, BOOL____00012, BOOL____00013], true);
constraint int_eq(variables[1], 3);
constraint int_eq(variables[2], 5);
constraint int_eq(variables[3], 8);
constraint int_eq(variables[4], 9);
constraint int_eq_reif(variables[1], 8, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(variables[2], 8, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(variables[3], 8, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(variables[4], 8, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_lt_reif(7, variables[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_lt_reif(7, variables[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lt_reif(7, variables[3], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lt_reif(7, variables[4], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_lt_reif(variables[1], 7, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_lt_reif(variables[2], 7, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_lt_reif(variables[3], 7, BOOL____00011) :: defines_var(BOOL____00011);
solve satisfy;
