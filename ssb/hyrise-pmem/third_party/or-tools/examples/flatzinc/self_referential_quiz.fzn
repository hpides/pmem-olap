var 0..10: AE;
var bool: AE1;
var bool: AE10;
var bool: AE2;
var bool: AE3;
var bool: AE4;
var bool: AE5;
var bool: AE6;
var bool: AE7;
var bool: AE8;
var bool: AE9;
var bool: AfterQ4;
var 0..10: BCD;
var bool: BCD1;
var bool: BCD10;
var bool: BCD2;
var bool: BCD3;
var bool: BCD4;
var bool: BCD5;
var bool: BCD6;
var bool: BCD7;
var bool: BCD8;
var bool: BCD9;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: var_is_introduced = BOOL____00016;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00135 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00139 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00143 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00147 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00173 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00175 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00176 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00177 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00179 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00181 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00183 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BeforeQ4;
var 0..1: INT____00150 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00151 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00152 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00153 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00154 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00155 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00156 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00157 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00158 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00159 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00161 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00162 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00163 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00164 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00165 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00166 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00167 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00168 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00169 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00170 :: is_defined_var :: var_is_introduced;
var 1..5: Q1;
var 1..5: Q10;
var 1..5: Q2;
var 1..5: Q3;
var 1..5: Q4;
var 1..5: Q5;
var 1..5: Q6;
var 1..5: Q7;
var 1..5: Q8;
var 1..5: Q9;
array [1..10] of var 1..5: LD :: output_array([1..10]) = [Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10];
constraint array_bool_and([BOOL____00014, BOOL____00003], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_and([BOOL____00041, BOOL____00040], BOOL____00041);
constraint array_bool_and([BOOL____00058, BOOL____00025], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_and([BOOL____00079, AfterQ4], BOOL____00080) :: defines_var(BOOL____00080);
constraint array_bool_and([BOOL____00110, BOOL____00111], BCD1);
constraint array_bool_and([BOOL____00114, BOOL____00115], BCD2);
constraint array_bool_and([BOOL____00118, BOOL____00119], BCD3);
constraint array_bool_and([BOOL____00122, BOOL____00123], BCD4);
constraint array_bool_and([BOOL____00126, BOOL____00127], BCD5);
constraint array_bool_and([BOOL____00130, BOOL____00131], BCD6);
constraint array_bool_and([BOOL____00134, BOOL____00135], BCD7);
constraint array_bool_and([BOOL____00138, BOOL____00139], BCD8);
constraint array_bool_and([BOOL____00142, BOOL____00143], BCD9);
constraint array_bool_and([BOOL____00146, BOOL____00147], BCD10);
constraint array_bool_and([BOOL____00184, BOOL____00099], BOOL____00109) :: defines_var(BOOL____00109);
constraint array_bool_and([BeforeQ4, AfterQ4], BOOL____00082) :: defines_var(BOOL____00082);
constraint array_bool_and([BeforeQ4, BOOL____00077], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_and([BOOL____00004, BOOL____00002, BOOL____00003], BOOL____00009) :: defines_var(BOOL____00009);
constraint array_bool_and([BOOL____00029, BOOL____00078, BOOL____00025], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_and([BOOL____00044, BOOL____00080, BOOL____00040], BOOL____00045) :: defines_var(BOOL____00045);
constraint array_bool_and([BOOL____00099, BOOL____00177, BOOL____00098], BOOL____00107) :: defines_var(BOOL____00107);
constraint array_bool_and([BOOL____00005, BOOL____00004, BOOL____00002, BOOL____00003], BOOL____00006) :: defines_var(BOOL____00006);
constraint array_bool_and([BOOL____00033, BOOL____00029, BOOL____00100, BOOL____00025], BOOL____00034) :: defines_var(BOOL____00034);
constraint array_bool_and([BOOL____00048, BOOL____00044, BOOL____00173, BOOL____00040], BOOL____00049) :: defines_var(BOOL____00049);
constraint array_bool_and([BOOL____00099, BOOL____00098, BOOL____00109, BOOL____00097], BOOL____00105) :: defines_var(BOOL____00105);
constraint array_bool_and([BOOL____00037, BOOL____00033, BOOL____00029, BOOL____00172, BOOL____00025], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00052, BOOL____00048, BOOL____00044, BOOL____00051, BOOL____00040], BOOL____00053) :: defines_var(BOOL____00053);
constraint array_bool_and([BOOL____00056, BOOL____00055, BOOL____00054, BOOL____00182, BOOL____00060], BOOL____00070) :: defines_var(BOOL____00070);
constraint array_bool_and([BOOL____00057, BOOL____00055, BOOL____00066, BOOL____00105, BOOL____00060], BOOL____00067) :: defines_var(BOOL____00067);
constraint array_bool_and([BOOL____00057, BOOL____00056, BOOL____00054, BOOL____00063, BOOL____00060], BOOL____00063);
constraint array_bool_and([BOOL____00057, BOOL____00056, BOOL____00055, BOOL____00012, BOOL____00054], BOOL____00058) :: defines_var(BOOL____00058);
constraint array_bool_and([BOOL____00057, BOOL____00056, BOOL____00055, BOOL____00030, BOOL____00060], BOOL____00061) :: defines_var(BOOL____00061);
constraint array_bool_and([BOOL____00099, BOOL____00098, BOOL____00097, BOOL____00102, BOOL____00096], BOOL____00103) :: defines_var(BOOL____00103);
constraint array_bool_and([BOOL____00099, BOOL____00098, BOOL____00097, BOOL____00096, BOOL____00070, BOOL____00095], BOOL____00100) :: defines_var(BOOL____00100);
constraint array_bool_and([BOOL____00093, BOOL____00092, BOOL____00091, BOOL____00090, BOOL____00089, BOOL____00088, BOOL____00087, BOOL____00086, BOOL____00084, BOOL____00085], BOOL____00094) :: defines_var(BOOL____00094);
constraint array_bool_or([BOOL____00075, BOOL____00183, BOOL____00107, BOOL____00176], AfterQ4);
constraint array_bool_or([BOOL____00067, BOOL____00049, BOOL____00034, BOOL____00006, BOOL____00020], BeforeQ4);
constraint bool2int(AE1, INT____00161) :: defines_var(INT____00161);
constraint bool2int(AE10, INT____00170) :: defines_var(INT____00170);
constraint bool2int(AE2, INT____00162) :: defines_var(INT____00162);
constraint bool2int(AE3, INT____00163) :: defines_var(INT____00163);
constraint bool2int(AE4, INT____00164) :: defines_var(INT____00164);
constraint bool2int(AE5, INT____00165) :: defines_var(INT____00165);
constraint bool2int(AE6, INT____00166) :: defines_var(INT____00166);
constraint bool2int(AE7, INT____00167) :: defines_var(INT____00167);
constraint bool2int(AE8, INT____00168) :: defines_var(INT____00168);
constraint bool2int(AE9, INT____00169) :: defines_var(INT____00169);
constraint bool2int(BCD1, INT____00150) :: defines_var(INT____00150);
constraint bool2int(BCD10, INT____00159) :: defines_var(INT____00159);
constraint bool2int(BCD2, INT____00151) :: defines_var(INT____00151);
constraint bool2int(BCD3, INT____00152) :: defines_var(INT____00152);
constraint bool2int(BCD4, INT____00153) :: defines_var(INT____00153);
constraint bool2int(BCD5, INT____00154) :: defines_var(INT____00154);
constraint bool2int(BCD6, INT____00155) :: defines_var(INT____00155);
constraint bool2int(BCD7, INT____00156) :: defines_var(INT____00156);
constraint bool2int(BCD8, INT____00157) :: defines_var(INT____00157);
constraint bool2int(BCD9, INT____00158) :: defines_var(INT____00158);
constraint bool_eq_reif(AfterQ4, false, BOOL____00077) :: defines_var(BOOL____00077);
constraint bool_eq_reif(BCD1, false, AE1);
constraint bool_eq_reif(BCD10, false, AE10);
constraint bool_eq_reif(BCD2, false, AE2);
constraint bool_eq_reif(BCD3, false, AE3);
constraint bool_eq_reif(BCD4, false, AE4);
constraint bool_eq_reif(BCD5, false, AE5);
constraint bool_eq_reif(BCD6, false, AE6);
constraint bool_eq_reif(BCD7, false, AE7);
constraint bool_eq_reif(BCD8, false, AE8);
constraint bool_eq_reif(BCD9, false, AE9);
constraint bool_eq_reif(BeforeQ4, false, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(AE, 0, BOOL____00179) :: defines_var(BOOL____00179);
constraint int_eq_reif(AE, 1, BOOL____00181) :: defines_var(BOOL____00181);
constraint int_eq_reif(AE, 2, BOOL____00182) :: defines_var(BOOL____00182);
constraint int_eq_reif(AE, 3, BOOL____00183) :: defines_var(BOOL____00183);
constraint int_eq_reif(AE, 4, BOOL____00184) :: defines_var(BOOL____00184);
constraint int_eq_reif(BCD, 3, BOOL____00177) :: defines_var(BOOL____00177);
constraint int_eq_reif(BCD, 4, BOOL____00176) :: defines_var(BOOL____00176);
constraint int_eq_reif(BCD, 5, BOOL____00175) :: defines_var(BOOL____00175);
constraint int_eq_reif(BCD, 6, BOOL____00173) :: defines_var(BOOL____00173);
constraint int_eq_reif(BCD, 7, BOOL____00172) :: defines_var(BOOL____00172);
constraint int_eq_reif(Q1, 1, BOOL____00006);
constraint int_eq_reif(Q1, 2, BOOL____00009);
constraint int_eq_reif(Q1, 3, BOOL____00012);
constraint int_eq_reif(Q1, 4, BOOL____00006);
constraint int_eq_reif(Q10, 2, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(Q10, 4, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(Q2, 1, BOOL____00014);
constraint int_eq_reif(Q2, 2, BOOL____00016);
constraint int_eq_reif(Q2, 3, BOOL____00018);
constraint int_eq_reif(Q2, 4, BOOL____00020);
constraint int_eq_reif(Q2, 5, BOOL____00022);
constraint int_eq_reif(Q3, 1, BOOL____00002);
constraint int_eq_reif(Q3, 2, BOOL____00026);
constraint int_eq_reif(Q3, 3, BOOL____00030);
constraint int_eq_reif(Q3, 4, BOOL____00034);
constraint int_eq_reif(Q3, 5, BOOL____00038);
constraint int_eq_reif(Q3, Q4, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(Q4, 1, BOOL____00002);
constraint int_eq_reif(Q4, 2, BOOL____00041);
constraint int_eq_reif(Q4, 3, BOOL____00045);
constraint int_eq_reif(Q4, 4, BOOL____00049);
constraint int_eq_reif(Q4, 5, BOOL____00053);
constraint int_eq_reif(Q4, Q5, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(Q5, 1, BOOL____00058);
constraint int_eq_reif(Q5, 2, BOOL____00061);
constraint int_eq_reif(Q5, 3, BOOL____00063);
constraint int_eq_reif(Q5, 4, BOOL____00067);
constraint int_eq_reif(Q5, 5, BOOL____00070);
constraint int_eq_reif(Q5, Q6, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(Q6, 1, BOOL____00078);
constraint int_eq_reif(Q6, 2, BOOL____00080);
constraint int_eq_reif(Q6, 3, BOOL____00082);
constraint int_eq_reif(Q6, 4, BOOL____00094);
constraint int_eq_reif(Q6, 5, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_eq_reif(Q6, Q7, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(Q7, 1, BOOL____00100);
constraint int_eq_reif(Q7, 2, BOOL____00103);
constraint int_eq_reif(Q7, 3, BOOL____00105);
constraint int_eq_reif(Q7, 4, BOOL____00107);
constraint int_eq_reif(Q7, 5, BOOL____00109);
constraint int_eq_reif(Q7, Q8, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(Q8, 1, BOOL____00172);
constraint int_eq_reif(Q8, 2, BOOL____00173);
constraint int_eq_reif(Q8, 3, BOOL____00175);
constraint int_eq_reif(Q8, 4, BOOL____00176);
constraint int_eq_reif(Q8, 5, BOOL____00177);
constraint int_eq_reif(Q9, 1, BOOL____00179);
constraint int_eq_reif(Q9, 2, BOOL____00181);
constraint int_eq_reif(Q9, 3, BOOL____00182);
constraint int_eq_reif(Q9, 4, BOOL____00183);
constraint int_eq_reif(Q9, 5, BOOL____00184);
constraint int_le_reif(2, Q1, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_le_reif(2, Q10, BOOL____00146) :: defines_var(BOOL____00146);
constraint int_le_reif(2, Q2, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_le_reif(2, Q3, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_le_reif(2, Q4, BOOL____00122) :: defines_var(BOOL____00122);
constraint int_le_reif(2, Q5, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_le_reif(2, Q6, BOOL____00130) :: defines_var(BOOL____00130);
constraint int_le_reif(2, Q7, BOOL____00134) :: defines_var(BOOL____00134);
constraint int_le_reif(2, Q8, BOOL____00138) :: defines_var(BOOL____00138);
constraint int_le_reif(2, Q9, BOOL____00142) :: defines_var(BOOL____00142);
constraint int_le_reif(Q1, 4, BOOL____00111) :: defines_var(BOOL____00111);
constraint int_le_reif(Q10, 4, BOOL____00147) :: defines_var(BOOL____00147);
constraint int_le_reif(Q2, 4, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_le_reif(Q3, 4, BOOL____00119) :: defines_var(BOOL____00119);
constraint int_le_reif(Q4, 4, BOOL____00123) :: defines_var(BOOL____00123);
constraint int_le_reif(Q5, 4, BOOL____00127) :: defines_var(BOOL____00127);
constraint int_le_reif(Q6, 4, BOOL____00131) :: defines_var(BOOL____00131);
constraint int_le_reif(Q7, 4, BOOL____00135) :: defines_var(BOOL____00135);
constraint int_le_reif(Q8, 4, BOOL____00139) :: defines_var(BOOL____00139);
constraint int_le_reif(Q9, 4, BOOL____00143) :: defines_var(BOOL____00143);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [AE, INT____00161, INT____00162, INT____00163, INT____00164, INT____00165, INT____00166, INT____00167, INT____00168, INT____00169, INT____00170], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [BCD, INT____00150, INT____00151, INT____00152, INT____00153, INT____00154, INT____00155, INT____00156, INT____00157, INT____00158, INT____00159], 0);
constraint int_ne_reif(Q1, 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_ne_reif(Q1, 3, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_ne_reif(Q1, 4, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_ne_reif(Q10, 4, BOOL____00093) :: defines_var(BOOL____00093);
constraint int_ne_reif(Q10, 5, BOOL____00099) :: defines_var(BOOL____00099);
constraint int_ne_reif(Q2, 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_ne_reif(Q2, 2, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_ne_reif(Q2, 3, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_ne_reif(Q2, 4, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_ne_reif(Q3, 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_ne_reif(Q3, 3, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_ne_reif(Q3, 4, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_ne_reif(Q4, 1, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_ne_reif(Q4, 2, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_ne_reif(Q4, 4, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_ne_reif(Q5, 1, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_ne_reif(Q5, 3, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_ne_reif(Q5, 4, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_ne_reif(Q6, 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_ne_reif(Q6, 2, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_ne_reif(Q6, 4, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_ne_reif(Q6, 5, BOOL____00095) :: defines_var(BOOL____00095);
constraint int_ne_reif(Q7, 1, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_ne_reif(Q7, 3, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_ne_reif(Q7, 4, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_ne_reif(Q7, 5, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_ne_reif(Q8, 2, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_ne_reif(Q8, 4, BOOL____00091) :: defines_var(BOOL____00091);
constraint int_ne_reif(Q8, 5, BOOL____00097) :: defines_var(BOOL____00097);
constraint int_ne_reif(Q9, 3, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_ne_reif(Q9, 4, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_ne_reif(Q9, 5, BOOL____00098) :: defines_var(BOOL____00098);
solve  :: int_search(LD, first_fail, indomain_min, complete) satisfy;
