array [1..3] of int: capacity = [8, 5, 3];
array [1..3] of int: goal = [4, 4, 0];
array [1..3] of int: start = [8, 0, 0];
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00125 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00129 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00133 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00135 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00137 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00139 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00141 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00143 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00145 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00147 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00149 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00151 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00153 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00155 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00157 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00159 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00160 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00161 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00162 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00163 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00164 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00165 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00166 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00167 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00168 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00169 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00170 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00171 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00173 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00174 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00175 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00177 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00179 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00181 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00183 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00185 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00186 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00187 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00188 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00189 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00190 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00191 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00192 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00193 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00194 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00195 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00196 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00197 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00198 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00199 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00201 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00203 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00205 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00206 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00207 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00208 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00209 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00210 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00211 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00212 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00213 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00214 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00215 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00216 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00217 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00218 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00219 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00220 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00221 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00222 :: is_defined_var :: var_is_introduced;
var 1..28: INT____00001 :: is_defined_var :: var_is_introduced;
var 2..29: INT____00003 :: is_defined_var :: var_is_introduced;
var 3..30: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00058 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00060 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00080 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00082 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00084 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00104 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00106 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00108 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00128 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00130 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00132 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00152 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00154 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00156 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00176 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00178 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00180 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00200 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00202 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00204 :: is_defined_var :: var_is_introduced;
var 1..10: goal_step :: output_var;
array [1..30] of var int: state :: output_array([1..10, 1..3]);
constraint array_bool_and([BOOL____00007, BOOL____00009], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00007, BOOL____00011], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_and([BOOL____00009, BOOL____00007], BOOL____00023) :: defines_var(BOOL____00023);
constraint array_bool_and([BOOL____00009, BOOL____00011], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_and([BOOL____00011, BOOL____00007], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00011, BOOL____00009], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_and([BOOL____00031, BOOL____00033], BOOL____00041) :: defines_var(BOOL____00041);
constraint array_bool_and([BOOL____00031, BOOL____00035], BOOL____00045) :: defines_var(BOOL____00045);
constraint array_bool_and([BOOL____00033, BOOL____00031], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_and([BOOL____00033, BOOL____00035], BOOL____00049) :: defines_var(BOOL____00049);
constraint array_bool_and([BOOL____00035, BOOL____00031], BOOL____00051) :: defines_var(BOOL____00051);
constraint array_bool_and([BOOL____00035, BOOL____00033], BOOL____00053) :: defines_var(BOOL____00053);
constraint array_bool_and([BOOL____00055, BOOL____00057], BOOL____00065) :: defines_var(BOOL____00065);
constraint array_bool_and([BOOL____00055, BOOL____00059], BOOL____00069) :: defines_var(BOOL____00069);
constraint array_bool_and([BOOL____00057, BOOL____00055], BOOL____00071) :: defines_var(BOOL____00071);
constraint array_bool_and([BOOL____00057, BOOL____00059], BOOL____00073) :: defines_var(BOOL____00073);
constraint array_bool_and([BOOL____00059, BOOL____00055], BOOL____00075) :: defines_var(BOOL____00075);
constraint array_bool_and([BOOL____00059, BOOL____00057], BOOL____00077) :: defines_var(BOOL____00077);
constraint array_bool_and([BOOL____00079, BOOL____00081], BOOL____00089) :: defines_var(BOOL____00089);
constraint array_bool_and([BOOL____00079, BOOL____00083], BOOL____00093) :: defines_var(BOOL____00093);
constraint array_bool_and([BOOL____00081, BOOL____00079], BOOL____00095) :: defines_var(BOOL____00095);
constraint array_bool_and([BOOL____00081, BOOL____00083], BOOL____00097) :: defines_var(BOOL____00097);
constraint array_bool_and([BOOL____00083, BOOL____00079], BOOL____00099) :: defines_var(BOOL____00099);
constraint array_bool_and([BOOL____00083, BOOL____00081], BOOL____00101) :: defines_var(BOOL____00101);
constraint array_bool_and([BOOL____00103, BOOL____00105], BOOL____00113) :: defines_var(BOOL____00113);
constraint array_bool_and([BOOL____00103, BOOL____00107], BOOL____00117) :: defines_var(BOOL____00117);
constraint array_bool_and([BOOL____00105, BOOL____00103], BOOL____00119) :: defines_var(BOOL____00119);
constraint array_bool_and([BOOL____00105, BOOL____00107], BOOL____00121) :: defines_var(BOOL____00121);
constraint array_bool_and([BOOL____00107, BOOL____00103], BOOL____00123) :: defines_var(BOOL____00123);
constraint array_bool_and([BOOL____00107, BOOL____00105], BOOL____00125) :: defines_var(BOOL____00125);
constraint array_bool_and([BOOL____00127, BOOL____00129], BOOL____00137) :: defines_var(BOOL____00137);
constraint array_bool_and([BOOL____00127, BOOL____00131], BOOL____00141) :: defines_var(BOOL____00141);
constraint array_bool_and([BOOL____00129, BOOL____00127], BOOL____00143) :: defines_var(BOOL____00143);
constraint array_bool_and([BOOL____00129, BOOL____00131], BOOL____00145) :: defines_var(BOOL____00145);
constraint array_bool_and([BOOL____00131, BOOL____00127], BOOL____00147) :: defines_var(BOOL____00147);
constraint array_bool_and([BOOL____00131, BOOL____00129], BOOL____00149) :: defines_var(BOOL____00149);
constraint array_bool_and([BOOL____00151, BOOL____00153], BOOL____00161) :: defines_var(BOOL____00161);
constraint array_bool_and([BOOL____00151, BOOL____00155], BOOL____00165) :: defines_var(BOOL____00165);
constraint array_bool_and([BOOL____00153, BOOL____00151], BOOL____00167) :: defines_var(BOOL____00167);
constraint array_bool_and([BOOL____00153, BOOL____00155], BOOL____00169) :: defines_var(BOOL____00169);
constraint array_bool_and([BOOL____00155, BOOL____00151], BOOL____00171) :: defines_var(BOOL____00171);
constraint array_bool_and([BOOL____00155, BOOL____00153], BOOL____00173) :: defines_var(BOOL____00173);
constraint array_bool_and([BOOL____00175, BOOL____00177], BOOL____00185) :: defines_var(BOOL____00185);
constraint array_bool_and([BOOL____00175, BOOL____00179], BOOL____00189) :: defines_var(BOOL____00189);
constraint array_bool_and([BOOL____00177, BOOL____00175], BOOL____00191) :: defines_var(BOOL____00191);
constraint array_bool_and([BOOL____00177, BOOL____00179], BOOL____00193) :: defines_var(BOOL____00193);
constraint array_bool_and([BOOL____00179, BOOL____00175], BOOL____00195) :: defines_var(BOOL____00195);
constraint array_bool_and([BOOL____00179, BOOL____00177], BOOL____00197) :: defines_var(BOOL____00197);
constraint array_bool_and([BOOL____00199, BOOL____00201], BOOL____00209) :: defines_var(BOOL____00209);
constraint array_bool_and([BOOL____00199, BOOL____00203], BOOL____00213) :: defines_var(BOOL____00213);
constraint array_bool_and([BOOL____00201, BOOL____00199], BOOL____00215) :: defines_var(BOOL____00215);
constraint array_bool_and([BOOL____00201, BOOL____00203], BOOL____00217) :: defines_var(BOOL____00217);
constraint array_bool_and([BOOL____00203, BOOL____00199], BOOL____00219) :: defines_var(BOOL____00219);
constraint array_bool_and([BOOL____00203, BOOL____00201], BOOL____00221) :: defines_var(BOOL____00221);
constraint array_bool_or([BOOL____00014, BOOL____00013, BOOL____00015, BOOL____00016], BOOL____00024) :: defines_var(BOOL____00024);
constraint array_bool_or([BOOL____00014, BOOL____00013, BOOL____00019, BOOL____00020], BOOL____00028) :: defines_var(BOOL____00028);
constraint array_bool_or([BOOL____00016, BOOL____00015, BOOL____00013, BOOL____00014], BOOL____00018) :: defines_var(BOOL____00018);
constraint array_bool_or([BOOL____00016, BOOL____00015, BOOL____00019, BOOL____00020], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_or([BOOL____00020, BOOL____00019, BOOL____00013, BOOL____00014], BOOL____00022) :: defines_var(BOOL____00022);
constraint array_bool_or([BOOL____00020, BOOL____00019, BOOL____00015, BOOL____00016], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_or([BOOL____00038, BOOL____00037, BOOL____00039, BOOL____00040], BOOL____00048) :: defines_var(BOOL____00048);
constraint array_bool_or([BOOL____00038, BOOL____00037, BOOL____00043, BOOL____00044], BOOL____00052) :: defines_var(BOOL____00052);
constraint array_bool_or([BOOL____00040, BOOL____00039, BOOL____00037, BOOL____00038], BOOL____00042) :: defines_var(BOOL____00042);
constraint array_bool_or([BOOL____00040, BOOL____00039, BOOL____00043, BOOL____00044], BOOL____00054) :: defines_var(BOOL____00054);
constraint array_bool_or([BOOL____00044, BOOL____00043, BOOL____00037, BOOL____00038], BOOL____00046) :: defines_var(BOOL____00046);
constraint array_bool_or([BOOL____00044, BOOL____00043, BOOL____00039, BOOL____00040], BOOL____00050) :: defines_var(BOOL____00050);
constraint array_bool_or([BOOL____00062, BOOL____00061, BOOL____00063, BOOL____00064], BOOL____00072) :: defines_var(BOOL____00072);
constraint array_bool_or([BOOL____00062, BOOL____00061, BOOL____00067, BOOL____00068], BOOL____00076) :: defines_var(BOOL____00076);
constraint array_bool_or([BOOL____00064, BOOL____00063, BOOL____00061, BOOL____00062], BOOL____00066) :: defines_var(BOOL____00066);
constraint array_bool_or([BOOL____00064, BOOL____00063, BOOL____00067, BOOL____00068], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_or([BOOL____00068, BOOL____00067, BOOL____00061, BOOL____00062], BOOL____00070) :: defines_var(BOOL____00070);
constraint array_bool_or([BOOL____00068, BOOL____00067, BOOL____00063, BOOL____00064], BOOL____00074) :: defines_var(BOOL____00074);
constraint array_bool_or([BOOL____00086, BOOL____00085, BOOL____00087, BOOL____00088], BOOL____00096) :: defines_var(BOOL____00096);
constraint array_bool_or([BOOL____00086, BOOL____00085, BOOL____00091, BOOL____00092], BOOL____00100) :: defines_var(BOOL____00100);
constraint array_bool_or([BOOL____00088, BOOL____00087, BOOL____00085, BOOL____00086], BOOL____00090) :: defines_var(BOOL____00090);
constraint array_bool_or([BOOL____00088, BOOL____00087, BOOL____00091, BOOL____00092], BOOL____00102) :: defines_var(BOOL____00102);
constraint array_bool_or([BOOL____00092, BOOL____00091, BOOL____00085, BOOL____00086], BOOL____00094) :: defines_var(BOOL____00094);
constraint array_bool_or([BOOL____00092, BOOL____00091, BOOL____00087, BOOL____00088], BOOL____00098) :: defines_var(BOOL____00098);
constraint array_bool_or([BOOL____00110, BOOL____00109, BOOL____00111, BOOL____00112], BOOL____00120) :: defines_var(BOOL____00120);
constraint array_bool_or([BOOL____00110, BOOL____00109, BOOL____00115, BOOL____00116], BOOL____00124) :: defines_var(BOOL____00124);
constraint array_bool_or([BOOL____00112, BOOL____00111, BOOL____00109, BOOL____00110], BOOL____00114) :: defines_var(BOOL____00114);
constraint array_bool_or([BOOL____00112, BOOL____00111, BOOL____00115, BOOL____00116], BOOL____00126) :: defines_var(BOOL____00126);
constraint array_bool_or([BOOL____00116, BOOL____00115, BOOL____00109, BOOL____00110], BOOL____00118) :: defines_var(BOOL____00118);
constraint array_bool_or([BOOL____00116, BOOL____00115, BOOL____00111, BOOL____00112], BOOL____00122) :: defines_var(BOOL____00122);
constraint array_bool_or([BOOL____00134, BOOL____00133, BOOL____00135, BOOL____00136], BOOL____00144) :: defines_var(BOOL____00144);
constraint array_bool_or([BOOL____00134, BOOL____00133, BOOL____00139, BOOL____00140], BOOL____00148) :: defines_var(BOOL____00148);
constraint array_bool_or([BOOL____00136, BOOL____00135, BOOL____00133, BOOL____00134], BOOL____00138) :: defines_var(BOOL____00138);
constraint array_bool_or([BOOL____00136, BOOL____00135, BOOL____00139, BOOL____00140], BOOL____00150) :: defines_var(BOOL____00150);
constraint array_bool_or([BOOL____00140, BOOL____00139, BOOL____00133, BOOL____00134], BOOL____00142) :: defines_var(BOOL____00142);
constraint array_bool_or([BOOL____00140, BOOL____00139, BOOL____00135, BOOL____00136], BOOL____00146) :: defines_var(BOOL____00146);
constraint array_bool_or([BOOL____00158, BOOL____00157, BOOL____00159, BOOL____00160], BOOL____00168) :: defines_var(BOOL____00168);
constraint array_bool_or([BOOL____00158, BOOL____00157, BOOL____00163, BOOL____00164], BOOL____00172) :: defines_var(BOOL____00172);
constraint array_bool_or([BOOL____00160, BOOL____00159, BOOL____00157, BOOL____00158], BOOL____00162) :: defines_var(BOOL____00162);
constraint array_bool_or([BOOL____00160, BOOL____00159, BOOL____00163, BOOL____00164], BOOL____00174) :: defines_var(BOOL____00174);
constraint array_bool_or([BOOL____00164, BOOL____00163, BOOL____00157, BOOL____00158], BOOL____00166) :: defines_var(BOOL____00166);
constraint array_bool_or([BOOL____00164, BOOL____00163, BOOL____00159, BOOL____00160], BOOL____00170) :: defines_var(BOOL____00170);
constraint array_bool_or([BOOL____00182, BOOL____00181, BOOL____00183, BOOL____00184], BOOL____00192) :: defines_var(BOOL____00192);
constraint array_bool_or([BOOL____00182, BOOL____00181, BOOL____00187, BOOL____00188], BOOL____00196) :: defines_var(BOOL____00196);
constraint array_bool_or([BOOL____00184, BOOL____00183, BOOL____00181, BOOL____00182], BOOL____00186) :: defines_var(BOOL____00186);
constraint array_bool_or([BOOL____00184, BOOL____00183, BOOL____00187, BOOL____00188], BOOL____00198) :: defines_var(BOOL____00198);
constraint array_bool_or([BOOL____00188, BOOL____00187, BOOL____00181, BOOL____00182], BOOL____00190) :: defines_var(BOOL____00190);
constraint array_bool_or([BOOL____00188, BOOL____00187, BOOL____00183, BOOL____00184], BOOL____00194) :: defines_var(BOOL____00194);
constraint array_bool_or([BOOL____00206, BOOL____00205, BOOL____00207, BOOL____00208], BOOL____00216) :: defines_var(BOOL____00216);
constraint array_bool_or([BOOL____00206, BOOL____00205, BOOL____00211, BOOL____00212], BOOL____00220) :: defines_var(BOOL____00220);
constraint array_bool_or([BOOL____00208, BOOL____00207, BOOL____00205, BOOL____00206], BOOL____00210) :: defines_var(BOOL____00210);
constraint array_bool_or([BOOL____00208, BOOL____00207, BOOL____00211, BOOL____00212], BOOL____00222) :: defines_var(BOOL____00222);
constraint array_bool_or([BOOL____00212, BOOL____00211, BOOL____00205, BOOL____00206], BOOL____00214) :: defines_var(BOOL____00214);
constraint array_bool_or([BOOL____00212, BOOL____00211, BOOL____00207, BOOL____00208], BOOL____00218) :: defines_var(BOOL____00218);
constraint array_var_int_element(INT____00001, state, 4);
constraint array_var_int_element(INT____00003, state, 4);
constraint array_var_int_element(INT____00005, state, 0);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00057, INT____00058) :: defines_var(INT____00058);
constraint bool2int(BOOL____00059, INT____00060) :: defines_var(INT____00060);
constraint bool2int(BOOL____00079, INT____00080) :: defines_var(INT____00080);
constraint bool2int(BOOL____00081, INT____00082) :: defines_var(INT____00082);
constraint bool2int(BOOL____00083, INT____00084) :: defines_var(INT____00084);
constraint bool2int(BOOL____00103, INT____00104) :: defines_var(INT____00104);
constraint bool2int(BOOL____00105, INT____00106) :: defines_var(INT____00106);
constraint bool2int(BOOL____00107, INT____00108) :: defines_var(INT____00108);
constraint bool2int(BOOL____00127, INT____00128) :: defines_var(INT____00128);
constraint bool2int(BOOL____00129, INT____00130) :: defines_var(INT____00130);
constraint bool2int(BOOL____00131, INT____00132) :: defines_var(INT____00132);
constraint bool2int(BOOL____00151, INT____00152) :: defines_var(INT____00152);
constraint bool2int(BOOL____00153, INT____00154) :: defines_var(INT____00154);
constraint bool2int(BOOL____00155, INT____00156) :: defines_var(INT____00156);
constraint bool2int(BOOL____00175, INT____00176) :: defines_var(INT____00176);
constraint bool2int(BOOL____00177, INT____00178) :: defines_var(INT____00178);
constraint bool2int(BOOL____00179, INT____00180) :: defines_var(INT____00180);
constraint bool2int(BOOL____00199, INT____00200) :: defines_var(INT____00200);
constraint bool2int(BOOL____00201, INT____00202) :: defines_var(INT____00202);
constraint bool2int(BOOL____00203, INT____00204) :: defines_var(INT____00204);
constraint bool_le(BOOL____00017, BOOL____00018);
constraint bool_le(BOOL____00021, BOOL____00022);
constraint bool_le(BOOL____00023, BOOL____00024);
constraint bool_le(BOOL____00025, BOOL____00026);
constraint bool_le(BOOL____00027, BOOL____00028);
constraint bool_le(BOOL____00029, BOOL____00030);
constraint bool_le(BOOL____00041, BOOL____00042);
constraint bool_le(BOOL____00045, BOOL____00046);
constraint bool_le(BOOL____00047, BOOL____00048);
constraint bool_le(BOOL____00049, BOOL____00050);
constraint bool_le(BOOL____00051, BOOL____00052);
constraint bool_le(BOOL____00053, BOOL____00054);
constraint bool_le(BOOL____00065, BOOL____00066);
constraint bool_le(BOOL____00069, BOOL____00070);
constraint bool_le(BOOL____00071, BOOL____00072);
constraint bool_le(BOOL____00073, BOOL____00074);
constraint bool_le(BOOL____00075, BOOL____00076);
constraint bool_le(BOOL____00077, BOOL____00078);
constraint bool_le(BOOL____00089, BOOL____00090);
constraint bool_le(BOOL____00093, BOOL____00094);
constraint bool_le(BOOL____00095, BOOL____00096);
constraint bool_le(BOOL____00097, BOOL____00098);
constraint bool_le(BOOL____00099, BOOL____00100);
constraint bool_le(BOOL____00101, BOOL____00102);
constraint bool_le(BOOL____00113, BOOL____00114);
constraint bool_le(BOOL____00117, BOOL____00118);
constraint bool_le(BOOL____00119, BOOL____00120);
constraint bool_le(BOOL____00121, BOOL____00122);
constraint bool_le(BOOL____00123, BOOL____00124);
constraint bool_le(BOOL____00125, BOOL____00126);
constraint bool_le(BOOL____00137, BOOL____00138);
constraint bool_le(BOOL____00141, BOOL____00142);
constraint bool_le(BOOL____00143, BOOL____00144);
constraint bool_le(BOOL____00145, BOOL____00146);
constraint bool_le(BOOL____00147, BOOL____00148);
constraint bool_le(BOOL____00149, BOOL____00150);
constraint bool_le(BOOL____00161, BOOL____00162);
constraint bool_le(BOOL____00165, BOOL____00166);
constraint bool_le(BOOL____00167, BOOL____00168);
constraint bool_le(BOOL____00169, BOOL____00170);
constraint bool_le(BOOL____00171, BOOL____00172);
constraint bool_le(BOOL____00173, BOOL____00174);
constraint bool_le(BOOL____00185, BOOL____00186);
constraint bool_le(BOOL____00189, BOOL____00190);
constraint bool_le(BOOL____00191, BOOL____00192);
constraint bool_le(BOOL____00193, BOOL____00194);
constraint bool_le(BOOL____00195, BOOL____00196);
constraint bool_le(BOOL____00197, BOOL____00198);
constraint bool_le(BOOL____00209, BOOL____00210);
constraint bool_le(BOOL____00213, BOOL____00214);
constraint bool_le(BOOL____00215, BOOL____00216);
constraint bool_le(BOOL____00217, BOOL____00218);
constraint bool_le(BOOL____00219, BOOL____00220);
constraint bool_le(BOOL____00221, BOOL____00222);
constraint int_eq(state[1], 8);
constraint int_eq(state[2], 0);
constraint int_eq(state[3], 0);
constraint int_eq_reif(state[4], 0, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(state[4], 8, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(state[5], 0, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(state[5], 5, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(state[6], 0, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(state[6], 3, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(state[7], 0, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(state[7], 8, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(state[8], 0, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(state[8], 5, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(state[9], 0, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(state[9], 3, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(state[10], 0, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(state[10], 8, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(state[11], 0, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(state[11], 5, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(state[12], 0, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(state[12], 3, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(state[13], 0, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(state[13], 8, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(state[14], 0, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(state[14], 5, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(state[15], 0, BOOL____00091) :: defines_var(BOOL____00091);
constraint int_eq_reif(state[15], 3, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(state[16], 0, BOOL____00109) :: defines_var(BOOL____00109);
constraint int_eq_reif(state[16], 8, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_eq_reif(state[17], 0, BOOL____00111) :: defines_var(BOOL____00111);
constraint int_eq_reif(state[17], 5, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_eq_reif(state[18], 0, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_eq_reif(state[18], 3, BOOL____00116) :: defines_var(BOOL____00116);
constraint int_eq_reif(state[19], 0, BOOL____00133) :: defines_var(BOOL____00133);
constraint int_eq_reif(state[19], 8, BOOL____00134) :: defines_var(BOOL____00134);
constraint int_eq_reif(state[20], 0, BOOL____00135) :: defines_var(BOOL____00135);
constraint int_eq_reif(state[20], 5, BOOL____00136) :: defines_var(BOOL____00136);
constraint int_eq_reif(state[21], 0, BOOL____00139) :: defines_var(BOOL____00139);
constraint int_eq_reif(state[21], 3, BOOL____00140) :: defines_var(BOOL____00140);
constraint int_eq_reif(state[22], 0, BOOL____00157) :: defines_var(BOOL____00157);
constraint int_eq_reif(state[22], 8, BOOL____00158) :: defines_var(BOOL____00158);
constraint int_eq_reif(state[23], 0, BOOL____00159) :: defines_var(BOOL____00159);
constraint int_eq_reif(state[23], 5, BOOL____00160) :: defines_var(BOOL____00160);
constraint int_eq_reif(state[24], 0, BOOL____00163) :: defines_var(BOOL____00163);
constraint int_eq_reif(state[24], 3, BOOL____00164) :: defines_var(BOOL____00164);
constraint int_eq_reif(state[25], 0, BOOL____00181) :: defines_var(BOOL____00181);
constraint int_eq_reif(state[25], 8, BOOL____00182) :: defines_var(BOOL____00182);
constraint int_eq_reif(state[26], 0, BOOL____00183) :: defines_var(BOOL____00183);
constraint int_eq_reif(state[26], 5, BOOL____00184) :: defines_var(BOOL____00184);
constraint int_eq_reif(state[27], 0, BOOL____00187) :: defines_var(BOOL____00187);
constraint int_eq_reif(state[27], 3, BOOL____00188) :: defines_var(BOOL____00188);
constraint int_eq_reif(state[28], 0, BOOL____00205) :: defines_var(BOOL____00205);
constraint int_eq_reif(state[28], 8, BOOL____00206) :: defines_var(BOOL____00206);
constraint int_eq_reif(state[29], 0, BOOL____00207) :: defines_var(BOOL____00207);
constraint int_eq_reif(state[29], 5, BOOL____00208) :: defines_var(BOOL____00208);
constraint int_eq_reif(state[30], 0, BOOL____00211) :: defines_var(BOOL____00211);
constraint int_eq_reif(state[30], 3, BOOL____00212) :: defines_var(BOOL____00212);
constraint int_le(0, state[1]);
constraint int_le(0, state[2]);
constraint int_le(0, state[3]);
constraint int_le(0, state[4]);
constraint int_le(0, state[5]);
constraint int_le(0, state[6]);
constraint int_le(0, state[7]);
constraint int_le(0, state[8]);
constraint int_le(0, state[9]);
constraint int_le(0, state[10]);
constraint int_le(0, state[11]);
constraint int_le(0, state[12]);
constraint int_le(0, state[13]);
constraint int_le(0, state[14]);
constraint int_le(0, state[15]);
constraint int_le(0, state[16]);
constraint int_le(0, state[17]);
constraint int_le(0, state[18]);
constraint int_le(0, state[19]);
constraint int_le(0, state[20]);
constraint int_le(0, state[21]);
constraint int_le(0, state[22]);
constraint int_le(0, state[23]);
constraint int_le(0, state[24]);
constraint int_le(0, state[25]);
constraint int_le(0, state[26]);
constraint int_le(0, state[27]);
constraint int_le(0, state[28]);
constraint int_le(0, state[29]);
constraint int_le(0, state[30]);
constraint int_le(state[1], 8);
constraint int_le(state[2], 5);
constraint int_le(state[3], 3);
constraint int_le(state[4], 8);
constraint int_le(state[5], 5);
constraint int_le(state[6], 3);
constraint int_le(state[7], 8);
constraint int_le(state[8], 5);
constraint int_le(state[9], 3);
constraint int_le(state[10], 8);
constraint int_le(state[11], 5);
constraint int_le(state[12], 3);
constraint int_le(state[13], 8);
constraint int_le(state[14], 5);
constraint int_le(state[15], 3);
constraint int_le(state[16], 8);
constraint int_le(state[17], 5);
constraint int_le(state[18], 3);
constraint int_le(state[19], 8);
constraint int_le(state[20], 5);
constraint int_le(state[21], 3);
constraint int_le(state[22], 8);
constraint int_le(state[23], 5);
constraint int_le(state[24], 3);
constraint int_le(state[25], 8);
constraint int_le(state[26], 5);
constraint int_le(state[27], 3);
constraint int_le(state[28], 8);
constraint int_le(state[29], 5);
constraint int_le(state[30], 3);
constraint int_lin_eq([-1, 3], [INT____00001, goal_step], 2) :: defines_var(INT____00001) :: domain;
constraint int_lin_eq([-1, 3], [INT____00003, goal_step], 1) :: defines_var(INT____00003) :: domain;
constraint int_lin_eq([-1, 3], [INT____00005, goal_step], 0) :: defines_var(INT____00005) :: domain;
constraint int_lin_eq([1, 1, 1], [INT____00008, INT____00010, INT____00012], 2);
constraint int_lin_eq([1, 1, 1], [INT____00032, INT____00034, INT____00036], 2);
constraint int_lin_eq([1, 1, 1], [INT____00056, INT____00058, INT____00060], 2);
constraint int_lin_eq([1, 1, 1], [INT____00080, INT____00082, INT____00084], 2);
constraint int_lin_eq([1, 1, 1], [INT____00104, INT____00106, INT____00108], 2);
constraint int_lin_eq([1, 1, 1], [INT____00128, INT____00130, INT____00132], 2);
constraint int_lin_eq([1, 1, 1], [INT____00152, INT____00154, INT____00156], 2);
constraint int_lin_eq([1, 1, 1], [INT____00176, INT____00178, INT____00180], 2);
constraint int_lin_eq([1, 1, 1], [INT____00200, INT____00202, INT____00204], 2);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[1], state[2], state[3], state[4], state[5], state[6]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[4], state[5], state[6], state[7], state[8], state[9]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[7], state[8], state[9], state[10], state[11], state[12]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[10], state[11], state[12], state[13], state[14], state[15]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[13], state[14], state[15], state[16], state[17], state[18]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[16], state[17], state[18], state[19], state[20], state[21]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[19], state[20], state[21], state[22], state[23], state[24]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[22], state[23], state[24], state[25], state[26], state[27]], 0);
constraint int_lin_eq([1, 1, 1, -1, -1, -1], [state[25], state[26], state[27], state[28], state[29], state[30]], 0);
constraint int_ne_reif(state[1], state[4], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_ne_reif(state[2], state[5], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_ne_reif(state[3], state[6], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_ne_reif(state[4], state[7], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_ne_reif(state[5], state[8], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_ne_reif(state[6], state[9], BOOL____00035) :: defines_var(BOOL____00035);
constraint int_ne_reif(state[7], state[10], BOOL____00055) :: defines_var(BOOL____00055);
constraint int_ne_reif(state[8], state[11], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_ne_reif(state[9], state[12], BOOL____00059) :: defines_var(BOOL____00059);
constraint int_ne_reif(state[10], state[13], BOOL____00079) :: defines_var(BOOL____00079);
constraint int_ne_reif(state[11], state[14], BOOL____00081) :: defines_var(BOOL____00081);
constraint int_ne_reif(state[12], state[15], BOOL____00083) :: defines_var(BOOL____00083);
constraint int_ne_reif(state[13], state[16], BOOL____00103) :: defines_var(BOOL____00103);
constraint int_ne_reif(state[14], state[17], BOOL____00105) :: defines_var(BOOL____00105);
constraint int_ne_reif(state[15], state[18], BOOL____00107) :: defines_var(BOOL____00107);
constraint int_ne_reif(state[16], state[19], BOOL____00127) :: defines_var(BOOL____00127);
constraint int_ne_reif(state[17], state[20], BOOL____00129) :: defines_var(BOOL____00129);
constraint int_ne_reif(state[18], state[21], BOOL____00131) :: defines_var(BOOL____00131);
constraint int_ne_reif(state[19], state[22], BOOL____00151) :: defines_var(BOOL____00151);
constraint int_ne_reif(state[20], state[23], BOOL____00153) :: defines_var(BOOL____00153);
constraint int_ne_reif(state[21], state[24], BOOL____00155) :: defines_var(BOOL____00155);
constraint int_ne_reif(state[22], state[25], BOOL____00175) :: defines_var(BOOL____00175);
constraint int_ne_reif(state[23], state[26], BOOL____00177) :: defines_var(BOOL____00177);
constraint int_ne_reif(state[24], state[27], BOOL____00179) :: defines_var(BOOL____00179);
constraint int_ne_reif(state[25], state[28], BOOL____00199) :: defines_var(BOOL____00199);
constraint int_ne_reif(state[26], state[29], BOOL____00201) :: defines_var(BOOL____00201);
constraint int_ne_reif(state[27], state[30], BOOL____00203) :: defines_var(BOOL____00203);
solve minimize goal_step;
