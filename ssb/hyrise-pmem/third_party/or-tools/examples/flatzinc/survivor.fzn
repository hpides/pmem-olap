array [1..6] of int: defence = [1, 5, 2, 15, 3, 20];
array [1..6] of int: food = [5, 10, 8, 20, 12, 25];
array [1..6] of int: shelter = [5, 5, 8, 15, 12, 20];
array [1..6] of int: water = [3, 10, 5, 20, 8, 25];
var 1..5: INT____00001 :: is_defined_var :: var_is_introduced;
var 5..25: INT____00002 :: is_defined_var :: var_is_introduced;
var 1..5: INT____00003 :: is_defined_var :: var_is_introduced;
var 3..25: INT____00004 :: is_defined_var :: var_is_introduced;
var 1..5: INT____00005 :: is_defined_var :: var_is_introduced;
var 5..20: INT____00006 :: is_defined_var :: var_is_introduced;
var 1..5: INT____00007 :: is_defined_var :: var_is_introduced;
var 1..20: INT____00008 :: is_defined_var :: var_is_introduced;
var 14..25: INT____00009 :: is_defined_var :: var_is_introduced;
var 2..6: INT____00010 :: is_defined_var :: var_is_introduced;
var 5..25: INT____00011 :: is_defined_var :: var_is_introduced;
var 2..6: INT____00012 :: is_defined_var :: var_is_introduced;
var 3..25: INT____00013 :: is_defined_var :: var_is_introduced;
var 2..6: INT____00014 :: is_defined_var :: var_is_introduced;
var 5..20: INT____00015 :: is_defined_var :: var_is_introduced;
var 2..6: INT____00016 :: is_defined_var :: var_is_introduced;
var 1..20: INT____00017 :: is_defined_var :: var_is_introduced;
var 14..90: INT____00018 :: is_defined_var :: var_is_introduced;
var 14..90: sum_survival_points :: output_var = INT____00018;
var 14..90: sum_weight :: output_var = INT____00009;
array [1..4] of var 1..3: x :: output_array([1..4]);
constraint array_int_element(INT____00001, food, INT____00002) :: defines_var(INT____00002);
constraint array_int_element(INT____00003, water, INT____00004) :: defines_var(INT____00004);
constraint array_int_element(INT____00005, shelter, INT____00006) :: defines_var(INT____00006);
constraint array_int_element(INT____00007, defence, INT____00008) :: defines_var(INT____00008);
constraint array_int_element(INT____00010, food, INT____00011) :: defines_var(INT____00011);
constraint array_int_element(INT____00012, water, INT____00013) :: defines_var(INT____00013);
constraint array_int_element(INT____00014, shelter, INT____00015) :: defines_var(INT____00015);
constraint array_int_element(INT____00016, defence, INT____00017) :: defines_var(INT____00017);
constraint int_lin_eq([-1, 2], [INT____00001, x[1]], 1) :: defines_var(INT____00001) :: domain;
constraint int_lin_eq([-1, 2], [INT____00003, x[2]], 1) :: defines_var(INT____00003) :: domain;
constraint int_lin_eq([-1, 2], [INT____00005, x[3]], 1) :: defines_var(INT____00005) :: domain;
constraint int_lin_eq([-1, 2], [INT____00007, x[4]], 1) :: defines_var(INT____00007) :: domain;
constraint int_lin_eq([-1, 2], [INT____00010, x[1]], 0) :: defines_var(INT____00010) :: domain;
constraint int_lin_eq([-1, 2], [INT____00012, x[2]], 0) :: defines_var(INT____00012) :: domain;
constraint int_lin_eq([-1, 2], [INT____00014, x[3]], 0) :: defines_var(INT____00014) :: domain;
constraint int_lin_eq([-1, 2], [INT____00016, x[4]], 0) :: defines_var(INT____00016) :: domain;
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00009, INT____00002, INT____00004, INT____00006, INT____00008], 0) :: defines_var(INT____00009);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00018, INT____00011, INT____00013, INT____00015, INT____00017], 0) :: defines_var(INT____00018);
solve maximize INT____00018;
