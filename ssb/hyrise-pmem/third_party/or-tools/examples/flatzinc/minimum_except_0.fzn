var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var 0..10000: t_min :: output_var;
array [1..6] of var 0..7: variables :: output_array([1..6]);
constraint array_bool_and([BOOL____00025, BOOL____00018, BOOL____00015, BOOL____00012, BOOL____00009, BOOL____00006, BOOL____00003], BOOL____00033) :: defines_var(BOOL____00033);
constraint array_bool_and([BOOL____00032, BOOL____00031, BOOL____00030, BOOL____00029, BOOL____00028, BOOL____00027, BOOL____00026], BOOL____00034) :: defines_var(BOOL____00034);
constraint array_bool_or([BOOL____00033, BOOL____00034], true);
constraint array_bool_or([BOOL____00024, BOOL____00023, BOOL____00022, BOOL____00021, BOOL____00020, BOOL____00019], BOOL____00025) :: defines_var(BOOL____00025);
constraint bool_eq_reif(BOOL____00001, BOOL____00002, BOOL____00003) :: defines_var(BOOL____00003);
constraint bool_eq_reif(BOOL____00004, BOOL____00005, BOOL____00006) :: defines_var(BOOL____00006);
constraint bool_eq_reif(BOOL____00007, BOOL____00008, BOOL____00009) :: defines_var(BOOL____00009);
constraint bool_eq_reif(BOOL____00010, BOOL____00011, BOOL____00012) :: defines_var(BOOL____00012);
constraint bool_eq_reif(BOOL____00013, BOOL____00014, BOOL____00015) :: defines_var(BOOL____00015);
constraint bool_eq_reif(BOOL____00016, BOOL____00017, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(t_min, 10000, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(t_min, variables[1], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(t_min, variables[2], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(t_min, variables[3], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(t_min, variables[4], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(t_min, variables[5], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(t_min, variables[6], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(variables[1], 0, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(variables[2], 0, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(variables[3], 0, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(variables[4], 0, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(variables[5], 0, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(variables[6], 0, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_le_reif(t_min, variables[1], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_le_reif(t_min, variables[2], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_le_reif(t_min, variables[3], BOOL____00008) :: defines_var(BOOL____00008);
constraint int_le_reif(t_min, variables[4], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_le_reif(t_min, variables[5], BOOL____00014) :: defines_var(BOOL____00014);
constraint int_le_reif(t_min, variables[6], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_lt_reif(0, variables[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_lt_reif(0, variables[2], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_lt_reif(0, variables[3], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_lt_reif(0, variables[4], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_lt_reif(0, variables[5], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_lt_reif(0, variables[6], BOOL____00016) :: defines_var(BOOL____00016);
solve satisfy;
