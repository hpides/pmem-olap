var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
array [1..4] of var 0..10: duration :: output_array([1..4]);
array [1..4] of var 0..10: end_time :: output_array([1..4]);
array [1..4] of var 1..10: origin :: output_array([1..4]);
array [1..4] of var 0..1: used :: output_array([1..4]);
constraint array_bool_and([BOOL____00015, BOOL____00016], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00029, BOOL____00030], BOOL____00031) :: defines_var(BOOL____00031);
constraint array_bool_and([BOOL____00040, BOOL____00041], BOOL____00042) :: defines_var(BOOL____00042);
constraint array_bool_and([BOOL____00044, BOOL____00045], BOOL____00046) :: defines_var(BOOL____00046);
constraint array_bool_and([BOOL____00048, BOOL____00049], BOOL____00050) :: defines_var(BOOL____00050);
constraint array_bool_and([BOOL____00037, BOOL____00033, BOOL____00034], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00019, BOOL____00020, BOOL____00025, BOOL____00026], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00002, BOOL____00003, BOOL____00012, BOOL____00010, BOOL____00011], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_or([BOOL____00004, BOOL____00005], BOOL____00011) :: defines_var(BOOL____00011);
constraint array_bool_or([BOOL____00006, BOOL____00007], BOOL____00010) :: defines_var(BOOL____00010);
constraint array_bool_or([BOOL____00008, BOOL____00009], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_or([BOOL____00021, BOOL____00022], BOOL____00026) :: defines_var(BOOL____00026);
constraint array_bool_or([BOOL____00023, BOOL____00024], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_or([BOOL____00035, BOOL____00036], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq(duration[1], 3);
constraint int_eq(duration[2], 0);
constraint int_eq(duration[3], 2);
constraint int_eq(duration[4], 1);
constraint int_eq(origin[1], 1);
constraint int_eq(origin[2], 2);
constraint int_eq(origin[3], 7);
constraint int_eq(origin[4], 4);
constraint int_eq_reif(duration[1], 0, BOOL____00017);
constraint int_eq_reif(duration[2], 0, BOOL____00031);
constraint int_eq_reif(duration[3], 0, BOOL____00042);
constraint int_eq_reif(duration[4], 0, BOOL____00050);
constraint int_eq_reif(end_time[1], 0, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(end_time[2], 0, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(end_time[3], 0, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(end_time[4], 0, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(used[1], 0, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(used[1], 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(used[2], 0, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(used[2], 1, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(used[3], 0, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(used[3], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(used[4], 0, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(used[4], 1, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_le_reif(end_time[1], origin[2], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_le_reif(end_time[1], origin[3], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_le_reif(end_time[1], origin[4], BOOL____00008) :: defines_var(BOOL____00008);
constraint int_le_reif(end_time[2], origin[1], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_le_reif(end_time[2], origin[3], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_le_reif(end_time[2], origin[4], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_le_reif(end_time[3], origin[1], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_le_reif(end_time[3], origin[2], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_le_reif(end_time[3], origin[4], BOOL____00035) :: defines_var(BOOL____00035);
constraint int_le_reif(end_time[4], origin[1], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_le_reif(end_time[4], origin[2], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_le_reif(end_time[4], origin[3], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_lin_eq_reif([-1, 1, -1], [duration[1], end_time[1], origin[1]], 0, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lin_eq_reif([-1, 1, -1], [duration[2], end_time[2], origin[2]], 0, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_lin_eq_reif([-1, 1, -1], [duration[3], end_time[3], origin[3]], 0, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_lin_eq_reif([-1, 1, -1], [duration[4], end_time[4], origin[4]], 0, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_lt_reif(0, duration[1], BOOL____00013);
constraint int_lt_reif(0, duration[2], BOOL____00027);
constraint int_lt_reif(0, duration[3], BOOL____00038);
constraint int_lt_reif(0, duration[4], BOOL____00046);
solve satisfy;
