var 0..64: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..64: minnum :: output_var = INT____00001;
array [1..144] of var 0..1: x :: output_array([1..12, 1..12]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[35], x[36], x[37], x[38], x[47], x[48], x[49], x[50], x[59], x[60], x[61], x[62], x[71], x[72], x[73], x[74], x[83], x[84], x[85], x[86], x[95], x[96], x[97], x[98], x[107], x[108], x[109], x[110], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], 0);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[2], x[4], x[13], x[17], x[37], x[41], x[50], x[52]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[3], x[5], x[14], x[18], x[38], x[42], x[51], x[53]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[4], x[6], x[15], x[19], x[39], x[43], x[52], x[54]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[5], x[7], x[16], x[20], x[40], x[44], x[53], x[55]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[6], x[8], x[17], x[21], x[41], x[45], x[54], x[56]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[7], x[9], x[18], x[22], x[42], x[46], x[55], x[57]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[8], x[10], x[19], x[23], x[43], x[47], x[56], x[58]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[9], x[11], x[20], x[24], x[44], x[48], x[57], x[59]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[14], x[16], x[25], x[29], x[49], x[53], x[62], x[64]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[15], x[17], x[26], x[30], x[50], x[54], x[63], x[65]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[16], x[18], x[27], x[31], x[51], x[55], x[64], x[66]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[17], x[19], x[28], x[32], x[52], x[56], x[65], x[67]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[18], x[20], x[29], x[33], x[53], x[57], x[66], x[68]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[19], x[21], x[30], x[34], x[54], x[58], x[67], x[69]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[20], x[22], x[31], x[35], x[55], x[59], x[68], x[70]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[21], x[23], x[32], x[36], x[56], x[60], x[69], x[71]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[26], x[28], x[37], x[41], x[61], x[65], x[74], x[76]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[27], x[29], x[38], x[42], x[62], x[66], x[75], x[77]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[28], x[30], x[39], x[43], x[63], x[67], x[76], x[78]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[29], x[31], x[40], x[44], x[64], x[68], x[77], x[79]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[30], x[32], x[41], x[45], x[65], x[69], x[78], x[80]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[31], x[33], x[42], x[46], x[66], x[70], x[79], x[81]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[32], x[34], x[43], x[47], x[67], x[71], x[80], x[82]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[33], x[35], x[44], x[48], x[68], x[72], x[81], x[83]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[38], x[40], x[49], x[53], x[73], x[77], x[86], x[88]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[39], x[41], x[50], x[54], x[74], x[78], x[87], x[89]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[40], x[42], x[51], x[55], x[75], x[79], x[88], x[90]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[41], x[43], x[52], x[56], x[76], x[80], x[89], x[91]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[42], x[44], x[53], x[57], x[77], x[81], x[90], x[92]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[43], x[45], x[54], x[58], x[78], x[82], x[91], x[93]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[44], x[46], x[55], x[59], x[79], x[83], x[92], x[94]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[45], x[47], x[56], x[60], x[80], x[84], x[93], x[95]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[50], x[52], x[61], x[65], x[85], x[89], x[98], x[100]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[51], x[53], x[62], x[66], x[86], x[90], x[99], x[101]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[52], x[54], x[63], x[67], x[87], x[91], x[100], x[102]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[53], x[55], x[64], x[68], x[88], x[92], x[101], x[103]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[54], x[56], x[65], x[69], x[89], x[93], x[102], x[104]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[55], x[57], x[66], x[70], x[90], x[94], x[103], x[105]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[56], x[58], x[67], x[71], x[91], x[95], x[104], x[106]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[57], x[59], x[68], x[72], x[92], x[96], x[105], x[107]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[62], x[64], x[73], x[77], x[97], x[101], x[110], x[112]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[63], x[65], x[74], x[78], x[98], x[102], x[111], x[113]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[64], x[66], x[75], x[79], x[99], x[103], x[112], x[114]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[65], x[67], x[76], x[80], x[100], x[104], x[113], x[115]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[66], x[68], x[77], x[81], x[101], x[105], x[114], x[116]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[67], x[69], x[78], x[82], x[102], x[106], x[115], x[117]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[68], x[70], x[79], x[83], x[103], x[107], x[116], x[118]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[69], x[71], x[80], x[84], x[104], x[108], x[117], x[119]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[74], x[76], x[85], x[89], x[109], x[113], x[122], x[124]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[75], x[77], x[86], x[90], x[110], x[114], x[123], x[125]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[76], x[78], x[87], x[91], x[111], x[115], x[124], x[126]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[77], x[79], x[88], x[92], x[112], x[116], x[125], x[127]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[78], x[80], x[89], x[93], x[113], x[117], x[126], x[128]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[79], x[81], x[90], x[94], x[114], x[118], x[127], x[129]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[80], x[82], x[91], x[95], x[115], x[119], x[128], x[130]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[81], x[83], x[92], x[96], x[116], x[120], x[129], x[131]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[86], x[88], x[97], x[101], x[121], x[125], x[134], x[136]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[87], x[89], x[98], x[102], x[122], x[126], x[135], x[137]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[88], x[90], x[99], x[103], x[123], x[127], x[136], x[138]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[89], x[91], x[100], x[104], x[124], x[128], x[137], x[139]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[90], x[92], x[101], x[105], x[125], x[129], x[138], x[140]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[91], x[93], x[102], x[106], x[126], x[130], x[139], x[141]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[92], x[94], x[103], x[107], x[127], x[131], x[140], x[142]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1], [x[93], x[95], x[104], x[108], x[128], x[132], x[141], x[143]], -1);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], first_fail, indomain, complete) minimize INT____00001;
