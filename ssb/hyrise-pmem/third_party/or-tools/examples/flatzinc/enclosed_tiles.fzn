predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..16] of int: data = [3, 4, 2, 2, 4, 2, 4, 3, 2, 4, 3, 2, 2, 2, 2, 3];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
array [1..16] of var 1..4: x :: output_array([1..4, 1..4]);
constraint array_bool_and([BOOL____00011, BOOL____00013], true);
constraint array_bool_and([BOOL____00017, BOOL____00019], true);
constraint array_bool_and([BOOL____00027, BOOL____00029], true);
constraint array_bool_and([BOOL____00043, BOOL____00045], true);
constraint array_bool_and([BOOL____00059, BOOL____00060], true);
constraint array_bool_and([BOOL____00064, BOOL____00066], true);
constraint array_bool_and([BOOL____00070, BOOL____00072], true);
constraint array_bool_and([BOOL____00076, BOOL____00078], true);
constraint bool_eq_reif(BOOL____00002, false, BOOL____00003) :: defines_var(BOOL____00003);
constraint bool_eq_reif(BOOL____00005, false, BOOL____00006) :: defines_var(BOOL____00006);
constraint bool_eq_reif(BOOL____00007, false, BOOL____00008) :: defines_var(BOOL____00008);
constraint bool_eq_reif(BOOL____00010, false, BOOL____00011) :: defines_var(BOOL____00011);
constraint bool_eq_reif(BOOL____00012, false, BOOL____00013) :: defines_var(BOOL____00013);
constraint bool_eq_reif(BOOL____00016, false, BOOL____00017) :: defines_var(BOOL____00017);
constraint bool_eq_reif(BOOL____00018, false, BOOL____00019) :: defines_var(BOOL____00019);
constraint bool_eq_reif(BOOL____00022, false, BOOL____00023) :: defines_var(BOOL____00023);
constraint bool_eq_reif(BOOL____00024, false, BOOL____00025) :: defines_var(BOOL____00025);
constraint bool_eq_reif(BOOL____00028, false, BOOL____00029) :: defines_var(BOOL____00029);
constraint bool_eq_reif(BOOL____00032, false, BOOL____00033) :: defines_var(BOOL____00033);
constraint bool_eq_reif(BOOL____00034, false, BOOL____00035) :: defines_var(BOOL____00035);
constraint bool_eq_reif(BOOL____00037, false, BOOL____00038) :: defines_var(BOOL____00038);
constraint bool_eq_reif(BOOL____00039, false, BOOL____00040) :: defines_var(BOOL____00040);
constraint bool_eq_reif(BOOL____00042, false, BOOL____00043) :: defines_var(BOOL____00043);
constraint bool_eq_reif(BOOL____00044, false, BOOL____00045) :: defines_var(BOOL____00045);
constraint bool_eq_reif(BOOL____00048, false, BOOL____00049) :: defines_var(BOOL____00049);
constraint bool_eq_reif(BOOL____00050, false, BOOL____00051) :: defines_var(BOOL____00051);
constraint bool_eq_reif(BOOL____00053, false, BOOL____00054) :: defines_var(BOOL____00054);
constraint bool_eq_reif(BOOL____00055, false, BOOL____00056) :: defines_var(BOOL____00056);
constraint bool_eq_reif(BOOL____00058, false, BOOL____00059) :: defines_var(BOOL____00059);
constraint bool_eq_reif(BOOL____00063, false, BOOL____00064) :: defines_var(BOOL____00064);
constraint bool_eq_reif(BOOL____00065, false, BOOL____00066) :: defines_var(BOOL____00066);
constraint bool_eq_reif(BOOL____00069, false, BOOL____00070) :: defines_var(BOOL____00070);
constraint bool_eq_reif(BOOL____00071, false, BOOL____00072) :: defines_var(BOOL____00072);
constraint bool_eq_reif(BOOL____00075, false, BOOL____00076) :: defines_var(BOOL____00076);
constraint bool_eq_reif(BOOL____00077, false, BOOL____00078) :: defines_var(BOOL____00078);
constraint bool_eq_reif(BOOL____00081, false, BOOL____00082) :: defines_var(BOOL____00082);
constraint bool_eq_reif(BOOL____00083, false, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(x[1], 1, true);
constraint int_eq_reif(x[1], 3, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(x[1], 4, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(x[2], 1, true);
constraint int_eq_reif(x[2], 3, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[2], 4, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[3], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(x[3], 3, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(x[3], 4, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(x[4], 1, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[4], 3, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(x[4], 4, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(x[5], 1, true);
constraint int_eq_reif(x[5], 3, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(x[5], 4, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(x[6], 1, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[6], 3, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(x[6], 4, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[7], 1, true);
constraint int_eq_reif(x[7], 3, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(x[7], 4, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(x[8], 1, true);
constraint int_eq_reif(x[8], 3, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(x[8], 4, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x[9], 1, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(x[9], 3, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(x[9], 4, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(x[10], 1, true);
constraint int_eq_reif(x[10], 3, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(x[10], 4, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(x[11], 1, true);
constraint int_eq_reif(x[11], 3, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(x[11], 4, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(x[12], 1, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(x[12], 3, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(x[12], 4, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(x[13], 1, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(x[13], 3, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(x[13], 4, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(x[14], 1, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(x[14], 3, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(x[14], 4, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(x[15], 1, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(x[15], 3, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(x[15], 4, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(x[16], 1, true);
constraint int_eq_reif(x[16], 3, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(x[16], 4, BOOL____00081) :: defines_var(BOOL____00081);
constraint set_in(x[1], {1, 3, 4});
constraint set_in(x[2], {1, 3, 4});
constraint set_in(x[3], {1, 3, 4});
constraint set_in(x[4], {1, 3, 4});
constraint set_in(x[5], {1, 3, 4});
constraint set_in(x[6], {1, 3, 4});
constraint set_in(x[7], {1, 3, 4});
constraint set_in(x[8], {1, 3, 4});
constraint set_in(x[9], {1, 3, 4});
constraint set_in(x[10], {1, 3, 4});
constraint set_in(x[11], {1, 3, 4});
constraint set_in(x[12], {1, 3, 4});
constraint set_in(x[13], {1, 3, 4});
constraint set_in(x[14], {1, 3, 4});
constraint set_in(x[15], {1, 3, 4});
constraint set_in(x[16], {1, 3, 4});
solve satisfy;
