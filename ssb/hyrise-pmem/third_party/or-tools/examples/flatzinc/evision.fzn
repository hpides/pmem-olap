var 0..16: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..16] of var 0..20: n;
var 0..16: sumx :: output_var = INT____00001;
array [1..16] of var 0..1: x :: output_array([1..4, 1..4]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[1], x[2], x[3], x[4], x[5], x[6], x[9], x[11], x[13], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[2], x[1], x[3], x[4], x[5], x[6], x[7], x[10], x[12], x[14]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[3], x[1], x[2], x[4], x[6], x[7], x[8], x[9], x[11], x[15]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[4], x[1], x[2], x[3], x[7], x[8], x[10], x[12], x[13], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[5], x[1], x[2], x[6], x[7], x[8], x[9], x[10], x[13], x[15]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[8], x[3], x[4], x[5], x[6], x[7], x[11], x[12], x[14], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[9], x[1], x[3], x[5], x[6], x[10], x[11], x[12], x[13], x[14]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[12], x[2], x[4], x[7], x[8], x[9], x[10], x[11], x[15], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[13], x[1], x[4], x[5], x[7], x[9], x[10], x[14], x[15], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[14], x[2], x[6], x[8], x[9], x[10], x[11], x[13], x[15], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[15], x[3], x[5], x[7], x[10], x[11], x[12], x[13], x[14], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[16], x[1], x[4], x[6], x[8], x[11], x[12], x[13], x[14], x[15]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[6], x[1], x[2], x[3], x[5], x[7], x[8], x[9], x[10], x[11], x[14], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[7], x[2], x[3], x[4], x[5], x[6], x[8], x[10], x[11], x[12], x[13], x[15]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[10], x[2], x[4], x[5], x[6], x[7], x[9], x[11], x[12], x[13], x[14], x[15]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [n[11], x[1], x[3], x[6], x[7], x[8], x[9], x[10], x[12], x[14], x[15], x[16]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-1, -99], [n[1], x[1]], -6);
constraint int_lin_le([-1, -99], [n[2], x[2]], -6);
constraint int_lin_le([-1, -99], [n[3], x[3]], -6);
constraint int_lin_le([-1, -99], [n[4], x[4]], -6);
constraint int_lin_le([-1, -99], [n[5], x[5]], -6);
constraint int_lin_le([-1, -99], [n[6], x[6]], -6);
constraint int_lin_le([-1, -99], [n[7], x[7]], -6);
constraint int_lin_le([-1, -99], [n[8], x[8]], -6);
constraint int_lin_le([-1, -99], [n[9], x[9]], -6);
constraint int_lin_le([-1, -99], [n[10], x[10]], -6);
constraint int_lin_le([-1, -99], [n[11], x[11]], -6);
constraint int_lin_le([-1, -99], [n[12], x[12]], -6);
constraint int_lin_le([-1, -99], [n[13], x[13]], -6);
constraint int_lin_le([-1, -99], [n[14], x[14]], -6);
constraint int_lin_le([-1, -99], [n[15], x[15]], -6);
constraint int_lin_le([-1, -99], [n[16], x[16]], -6);
constraint int_lin_le([1, -99], [n[1], x[1]], 6);
constraint int_lin_le([1, -99], [n[2], x[2]], 6);
constraint int_lin_le([1, -99], [n[3], x[3]], 6);
constraint int_lin_le([1, -99], [n[4], x[4]], 6);
constraint int_lin_le([1, -99], [n[5], x[5]], 6);
constraint int_lin_le([1, -99], [n[6], x[6]], 6);
constraint int_lin_le([1, -99], [n[7], x[7]], 6);
constraint int_lin_le([1, -99], [n[8], x[8]], 6);
constraint int_lin_le([1, -99], [n[9], x[9]], 6);
constraint int_lin_le([1, -99], [n[10], x[10]], 6);
constraint int_lin_le([1, -99], [n[11], x[11]], 6);
constraint int_lin_le([1, -99], [n[12], x[12]], 6);
constraint int_lin_le([1, -99], [n[13], x[13]], 6);
constraint int_lin_le([1, -99], [n[14], x[14]], 6);
constraint int_lin_le([1, -99], [n[15], x[15]], 6);
constraint int_lin_le([1, -99], [n[16], x[16]], 6);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], first_fail, indomain, complete) minimize INT____00001;
