var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00027 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00035 :: is_defined_var :: var_is_introduced;
var 0..10: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..120: INT____00037 :: is_defined_var :: var_is_introduced;
var 0..120: cost :: output_var = INT____00037;
array [1..12] of var 0..10: cost_matrix;
array [1..6] of var 0..16: values :: output_array([1..3, 1..2]);
array [1..4] of var 1..16: variables :: output_array([1..4]);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint int_eq(0, cost_matrix[5]);
constraint int_eq(0, cost_matrix[10]);
constraint int_eq(0, cost_matrix[11]);
constraint int_eq(0, values[4]);
constraint int_eq(1, cost_matrix[2]);
constraint int_eq(1, cost_matrix[4]);
constraint int_eq(1, cost_matrix[9]);
constraint int_eq(1, values[6]);
constraint int_eq(2, cost_matrix[8]);
constraint int_eq(3, cost_matrix[7]);
constraint int_eq(3, values[1]);
constraint int_eq(3, values[2]);
constraint int_eq(4, cost_matrix[1]);
constraint int_eq(5, values[3]);
constraint int_eq(6, cost_matrix[12]);
constraint int_eq(6, values[5]);
constraint int_eq(7, cost_matrix[3]);
constraint int_eq(8, cost_matrix[6]);
constraint int_eq(variables[1], 3);
constraint int_eq(variables[2], 3);
constraint int_eq(variables[3], 3);
constraint int_eq(variables[4], 6);
constraint int_eq_reif(variables[1], values[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(variables[1], values[3], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(variables[1], values[5], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(variables[2], values[1], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(variables[2], values[3], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(variables[2], values[5], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(variables[3], values[1], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(variables[3], values[3], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(variables[3], values[5], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(variables[4], values[1], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(variables[4], values[3], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(variables[4], values[5], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_lin_eq([-1, -1, -1, -1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, values[2]], 0);
constraint int_lin_eq([-1, -1, -1, -1, 1], [INT____00010, INT____00012, INT____00014, INT____00016, values[4]], 0);
constraint int_lin_eq([-1, -1, -1, -1, 1], [INT____00018, INT____00020, INT____00022, INT____00024, values[6]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00037, INT____00025, INT____00026, INT____00027, INT____00028, INT____00029, INT____00030, INT____00031, INT____00032, INT____00033, INT____00034, INT____00035, INT____00036], 0) :: defines_var(INT____00037);
constraint int_times(cost_matrix[1], INT____00002, INT____00025) :: defines_var(INT____00025);
constraint int_times(cost_matrix[2], INT____00010, INT____00029) :: defines_var(INT____00029);
constraint int_times(cost_matrix[3], INT____00018, INT____00033) :: defines_var(INT____00033);
constraint int_times(cost_matrix[4], INT____00004, INT____00026) :: defines_var(INT____00026);
constraint int_times(cost_matrix[5], INT____00012, INT____00030) :: defines_var(INT____00030);
constraint int_times(cost_matrix[6], INT____00020, INT____00034) :: defines_var(INT____00034);
constraint int_times(cost_matrix[7], INT____00006, INT____00027) :: defines_var(INT____00027);
constraint int_times(cost_matrix[8], INT____00014, INT____00031) :: defines_var(INT____00031);
constraint int_times(cost_matrix[9], INT____00022, INT____00035) :: defines_var(INT____00035);
constraint int_times(cost_matrix[10], INT____00008, INT____00028) :: defines_var(INT____00028);
constraint int_times(cost_matrix[11], INT____00016, INT____00032) :: defines_var(INT____00032);
constraint int_times(cost_matrix[12], INT____00024, INT____00036) :: defines_var(INT____00036);
solve satisfy;
