predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var -28..52: INT____00001 :: is_defined_var :: var_is_introduced;
var -1456..2704: INT____00002 :: is_defined_var :: var_is_introduced;
var -28..52: INT____00003 :: is_defined_var :: var_is_introduced;
var -1456..2704: INT____00004 :: is_defined_var :: var_is_introduced;
var -2912..5408: INT____00005 :: is_defined_var :: var_is_introduced;
var -2912..5408: V :: output_var = INT____00005;
var -7..6: a;
var -7..13: b;
var -7..13: c;
var -7..13: d;
var -7..13: e;
var -7..13: f;
var -7..13: g;
var -7..13: h;
array [1..8] of var -7..13: x :: output_array([1..8]) = [a, b, c, d, e, f, g, h];
constraint all_different_int(x);
constraint int_le(a, b);
constraint int_le(b, c);
constraint int_le(c, d);
constraint int_le(e, f);
constraint int_le(f, g);
constraint int_le(g, h);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00001, a, b, c, d], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, 1, 1, 1, 1], [INT____00003, e, f, g, h], 0) :: defines_var(INT____00003);
constraint int_lt(a, e);
constraint int_plus(INT____00002, INT____00004, INT____00005) :: defines_var(INT____00005);
constraint int_times(INT____00001, INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_times(INT____00003, INT____00003, INT____00004) :: defines_var(INT____00004);
constraint set_in(a, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(b, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(c, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(d, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(e, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(f, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(g, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(h, {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[1], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[2], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[3], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[4], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[5], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[6], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[7], {-7, -5, -3, -2, 2, 4, 6, 13});
constraint set_in(x[8], {-7, -5, -3, -2, 2, 4, 6, 13});
solve  :: int_search(x, max_regret, indomain_min, complete) minimize INT____00005;
