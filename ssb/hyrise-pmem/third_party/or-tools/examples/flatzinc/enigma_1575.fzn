predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var 0..1: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..2: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..5: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..2: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..5: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..5: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00027 :: is_defined_var :: var_is_introduced;
var 0..5: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..5: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00035 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00039 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..7: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00043 :: is_defined_var :: var_is_introduced;
var 1..9: a;
array [1..7] of var 1..99: days :: output_array([1..7]);
var 1..9: f = days[5];
var 111111..699999: famous;
var 1..9: h;
var 1..9: m;
var 1..9: o;
var 1..9: s;
var 1..9: t;
var 1..9: u;
array [1..9] of var 1..9: letters :: output_array([1..9]) = [m, o, t, u, days[3], h, days[5], s, a];
var 1..9: w = days[3];
constraint all_different_int(letters);
constraint int_lin_eq([-10, -1, 1], [m, o, days[1]], 0);
constraint int_lin_eq([-10, -1, 1], [s, u, days[7]], 0);
constraint int_lin_eq([-10, -1, 1], [t, u, days[2]], 0);
constraint int_lin_eq([-1, -10, 1], [a, s, days[6]], 0);
constraint int_lin_eq([-1, -10, 1], [h, t, days[4]], 0);
constraint int_lin_eq([-1, 10000, 100000, 1000, 100, 1, 10], [famous, a, days[5], m, o, s, u], 0);
constraint int_mod(days[1], 1, 0);
constraint int_mod(days[1], 2, INT____00003) :: defines_var(INT____00003);
constraint int_mod(days[1], 3, INT____00004) :: defines_var(INT____00004);
constraint int_mod(days[1], 4, INT____00005) :: defines_var(INT____00005);
constraint int_mod(days[1], 5, INT____00006) :: defines_var(INT____00006);
constraint int_mod(days[1], 6, INT____00007) :: defines_var(INT____00007);
constraint int_mod(days[1], 7, INT____00008) :: defines_var(INT____00008);
constraint int_mod(days[1], 8, INT____00009) :: defines_var(INT____00009);
constraint int_mod(days[1], 9, INT____00010) :: defines_var(INT____00010);
constraint int_mod(days[2], 2, 0);
constraint int_mod(days[2], 3, INT____00012) :: defines_var(INT____00012);
constraint int_mod(days[2], 4, INT____00013) :: defines_var(INT____00013);
constraint int_mod(days[2], 5, INT____00014) :: defines_var(INT____00014);
constraint int_mod(days[2], 6, INT____00015) :: defines_var(INT____00015);
constraint int_mod(days[2], 7, INT____00016) :: defines_var(INT____00016);
constraint int_mod(days[2], 8, INT____00017) :: defines_var(INT____00017);
constraint int_mod(days[2], 9, INT____00018) :: defines_var(INT____00018);
constraint int_mod(days[3], 3, 0);
constraint int_mod(days[3], 4, INT____00020) :: defines_var(INT____00020);
constraint int_mod(days[3], 5, INT____00021) :: defines_var(INT____00021);
constraint int_mod(days[3], 6, INT____00022) :: defines_var(INT____00022);
constraint int_mod(days[3], 7, INT____00023) :: defines_var(INT____00023);
constraint int_mod(days[3], 8, INT____00024) :: defines_var(INT____00024);
constraint int_mod(days[3], 9, INT____00025) :: defines_var(INT____00025);
constraint int_mod(days[4], 4, 0);
constraint int_mod(days[4], 5, INT____00027) :: defines_var(INT____00027);
constraint int_mod(days[4], 6, INT____00028) :: defines_var(INT____00028);
constraint int_mod(days[4], 7, INT____00029) :: defines_var(INT____00029);
constraint int_mod(days[4], 8, INT____00030) :: defines_var(INT____00030);
constraint int_mod(days[4], 9, INT____00031) :: defines_var(INT____00031);
constraint int_mod(days[5], 5, 0);
constraint int_mod(days[5], 6, INT____00033) :: defines_var(INT____00033);
constraint int_mod(days[5], 7, INT____00034) :: defines_var(INT____00034);
constraint int_mod(days[5], 8, INT____00035) :: defines_var(INT____00035);
constraint int_mod(days[5], 9, INT____00036) :: defines_var(INT____00036);
constraint int_mod(days[6], 6, 0);
constraint int_mod(days[6], 7, INT____00038) :: defines_var(INT____00038);
constraint int_mod(days[6], 8, INT____00039) :: defines_var(INT____00039);
constraint int_mod(days[6], 9, INT____00040) :: defines_var(INT____00040);
constraint int_mod(days[7], 7, 0);
constraint int_mod(days[7], 8, INT____00042) :: defines_var(INT____00042);
constraint int_mod(days[7], 9, INT____00043) :: defines_var(INT____00043);
constraint int_ne(INT____00003, 0);
constraint int_ne(INT____00004, 0);
constraint int_ne(INT____00005, 0);
constraint int_ne(INT____00006, 0);
constraint int_ne(INT____00007, 0);
constraint int_ne(INT____00008, 0);
constraint int_ne(INT____00009, 0);
constraint int_ne(INT____00010, 0);
constraint int_ne(INT____00012, 0);
constraint int_ne(INT____00013, 0);
constraint int_ne(INT____00014, 0);
constraint int_ne(INT____00015, 0);
constraint int_ne(INT____00016, 0);
constraint int_ne(INT____00017, 0);
constraint int_ne(INT____00018, 0);
constraint int_ne(INT____00020, 0);
constraint int_ne(INT____00021, 0);
constraint int_ne(INT____00022, 0);
constraint int_ne(INT____00023, 0);
constraint int_ne(INT____00024, 0);
constraint int_ne(INT____00025, 0);
constraint int_ne(INT____00027, 0);
constraint int_ne(INT____00028, 0);
constraint int_ne(INT____00029, 0);
constraint int_ne(INT____00030, 0);
constraint int_ne(INT____00031, 0);
constraint int_ne(INT____00033, 0);
constraint int_ne(INT____00034, 0);
constraint int_ne(INT____00035, 0);
constraint int_ne(INT____00036, 0);
constraint int_ne(INT____00038, 0);
constraint int_ne(INT____00039, 0);
constraint int_ne(INT____00040, 0);
constraint int_ne(INT____00042, 0);
constraint int_ne(INT____00043, 0);
solve  :: int_search([m, o, t, u, days[3], h, days[5], s, a, days[1], days[2], days[3], days[4], days[5], days[6], days[7], famous], first_fail, indomain_median, complete) satisfy;
