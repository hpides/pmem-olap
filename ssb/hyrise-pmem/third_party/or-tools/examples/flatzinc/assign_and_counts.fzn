var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00039 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00045 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00053 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00059 :: is_defined_var :: var_is_introduced;
array [1..4] of var 1..4: bins :: output_array([1..4]);
var 4..4: color :: output_var = 4;
array [1..4] of var 1..5: colors :: output_array([1..4]);
var 2..2: nval :: output_var = 2;
var 0..2: t_val____00001;
var 0..2: t_val____00019;
var 0..2: t_val____00033;
var 0..2: t_val____00047;
constraint array_bool_and([BOOL____00002, BOOL____00003], BOOL____00004) :: defines_var(BOOL____00004);
constraint array_bool_and([BOOL____00006, BOOL____00007], BOOL____00008) :: defines_var(BOOL____00008);
constraint array_bool_and([BOOL____00010, BOOL____00011], BOOL____00012) :: defines_var(BOOL____00012);
constraint array_bool_and([BOOL____00014, BOOL____00015], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_and([BOOL____00020, BOOL____00003], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_and([BOOL____00023, BOOL____00007], BOOL____00024) :: defines_var(BOOL____00024);
constraint array_bool_and([BOOL____00026, BOOL____00011], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00029, BOOL____00015], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_and([BOOL____00034, BOOL____00003], BOOL____00035) :: defines_var(BOOL____00035);
constraint array_bool_and([BOOL____00037, BOOL____00007], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00040, BOOL____00011], BOOL____00041) :: defines_var(BOOL____00041);
constraint array_bool_and([BOOL____00043, BOOL____00015], BOOL____00044) :: defines_var(BOOL____00044);
constraint array_bool_and([BOOL____00048, BOOL____00003], BOOL____00049) :: defines_var(BOOL____00049);
constraint array_bool_and([BOOL____00051, BOOL____00007], BOOL____00052) :: defines_var(BOOL____00052);
constraint array_bool_and([BOOL____00054, BOOL____00011], BOOL____00055) :: defines_var(BOOL____00055);
constraint array_bool_and([BOOL____00057, BOOL____00015], BOOL____00058) :: defines_var(BOOL____00058);
constraint bool2int(BOOL____00004, INT____00005) :: defines_var(INT____00005);
constraint bool2int(BOOL____00008, INT____00009) :: defines_var(INT____00009);
constraint bool2int(BOOL____00012, INT____00013) :: defines_var(INT____00013);
constraint bool2int(BOOL____00016, INT____00017) :: defines_var(INT____00017);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00024, INT____00025) :: defines_var(INT____00025);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00030, INT____00031) :: defines_var(INT____00031);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00038, INT____00039) :: defines_var(INT____00039);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00044, INT____00045) :: defines_var(INT____00045);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00052, INT____00053) :: defines_var(INT____00053);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00058, INT____00059) :: defines_var(INT____00059);
constraint int_eq(1, bins[1]);
constraint int_eq(1, bins[3]);
constraint int_eq(1, bins[4]);
constraint int_eq(3, bins[2]);
constraint int_eq(4, colors[1]);
constraint int_eq(4, colors[2]);
constraint int_eq(4, colors[3]);
constraint int_eq(5, colors[4]);
constraint int_eq_reif(bins[1], 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(bins[1], 2, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(bins[1], 3, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(bins[1], 4, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(bins[2], 1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(bins[2], 2, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(bins[2], 3, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(bins[2], 4, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(bins[3], 1, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(bins[3], 2, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(bins[3], 3, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(bins[3], 4, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(bins[4], 1, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(bins[4], 2, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(bins[4], 3, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(bins[4], 4, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(colors[1], 4, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(colors[2], 4, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(colors[3], 4, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(colors[4], 4, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_lin_eq([-1, 1, 1, 1, 1], [t_val____00001, INT____00005, INT____00009, INT____00013, INT____00017], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1], [t_val____00019, INT____00022, INT____00025, INT____00028, INT____00031], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1], [t_val____00033, INT____00036, INT____00039, INT____00042, INT____00045], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1], [t_val____00047, INT____00050, INT____00053, INT____00056, INT____00059], 0);
solve satisfy;
