predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..5] of var 1..5: Animal;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00152 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00154 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00156 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00160 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00162 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00164 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00166 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00168 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00170 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00174 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00176 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00178 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00180 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00186 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00188 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00190 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00192 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00194 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00196 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00198 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00200 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00202 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00204 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00206 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00208 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00210 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00212 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00214 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00216 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00218 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00220 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00222 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00224 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00226 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00228 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00230 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00232 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00234 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00236 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00238 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00240 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00242 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00244 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00246 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00248 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00250 :: is_defined_var :: var_is_introduced;
array [1..5] of var 1..5: Brand;
array [1..5] of var 1..5: Color;
array [1..5] of var 1..5: Drinks;
var 2..5: INT____00251 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00252 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00254 :: is_defined_var :: var_is_introduced;
array [1..5] of var 1..5: Nationality;
var 1..5: blue :: output_var;
var 1..5: chesterfield :: output_var;
var 1..5: dog :: output_var;
var 1..5: fox :: output_var;
var 2..5: green :: output_var = INT____00251;
var 1..5: coffee :: output_var = green;
var 1..5: horse :: output_var;
var 1..5: ivory :: output_var;
var 3..3: milk :: output_var = 3;
var 1..1: norwegian :: output_var = 1;
var 1..5: orange_juice :: output_var;
var 1..5: lucky_strike :: output_var = orange_juice;
var 1..5: parliament :: output_var;
var 1..5: japanese :: output_var = parliament;
var 1..5: red :: output_var;
var 1..5: englishman :: output_var = red;
var 1..5: snail :: output_var;
var 1..5: old_gold :: output_var = snail;
var 1..5: spaniard :: output_var = dog;
var 1..5: tea :: output_var;
var 1..5: ukrainian :: output_var = tea;
var 1..5: water :: output_var;
var 1..5: yellow :: output_var;
var 1..5: kool :: output_var = yellow;
var 1..5: zebra :: output_var;
constraint int_abs(INT____00252, 1);
constraint int_abs(INT____00254, 1);
constraint int_eq_reif(blue, 1, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(blue, 2, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(blue, 3, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(blue, 4, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(blue, 5, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(chesterfield, 1, BOOL____00206) :: defines_var(BOOL____00206);
constraint int_eq_reif(chesterfield, 2, BOOL____00216) :: defines_var(BOOL____00216);
constraint int_eq_reif(chesterfield, 3, BOOL____00226) :: defines_var(BOOL____00226);
constraint int_eq_reif(chesterfield, 4, BOOL____00236) :: defines_var(BOOL____00236);
constraint int_eq_reif(chesterfield, 5, BOOL____00246) :: defines_var(BOOL____00246);
constraint int_eq_reif(coffee, 1, BOOL____00152) :: defines_var(BOOL____00152);
constraint int_eq_reif(coffee, 2, BOOL____00162) :: defines_var(BOOL____00162);
constraint int_eq_reif(coffee, 3, BOOL____00172) :: defines_var(BOOL____00172);
constraint int_eq_reif(coffee, 4, BOOL____00182) :: defines_var(BOOL____00182);
constraint int_eq_reif(coffee, 5, BOOL____00192) :: defines_var(BOOL____00192);
constraint int_eq_reif(dog, 1, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_eq_reif(dog, 2, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_eq_reif(dog, 3, BOOL____00122) :: defines_var(BOOL____00122);
constraint int_eq_reif(dog, 4, BOOL____00132) :: defines_var(BOOL____00132);
constraint int_eq_reif(dog, 5, BOOL____00142) :: defines_var(BOOL____00142);
constraint int_eq_reif(englishman, 1, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(englishman, 2, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(englishman, 3, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(englishman, 4, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_eq_reif(englishman, 5, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(fox, 1, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_eq_reif(fox, 2, BOOL____00116) :: defines_var(BOOL____00116);
constraint int_eq_reif(fox, 3, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_eq_reif(fox, 4, BOOL____00136) :: defines_var(BOOL____00136);
constraint int_eq_reif(fox, 5, BOOL____00146) :: defines_var(BOOL____00146);
constraint int_eq_reif(green, 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(green, 2, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(green, 3, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(green, 4, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(green, 5, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(horse, 1, BOOL____00108) :: defines_var(BOOL____00108);
constraint int_eq_reif(horse, 2, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_eq_reif(horse, 3, BOOL____00128) :: defines_var(BOOL____00128);
constraint int_eq_reif(horse, 4, BOOL____00138) :: defines_var(BOOL____00138);
constraint int_eq_reif(horse, 5, BOOL____00148) :: defines_var(BOOL____00148);
constraint int_eq_reif(ivory, 1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(ivory, 2, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(ivory, 3, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(ivory, 4, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(ivory, 5, BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(japanese, 1, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(japanese, 2, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(japanese, 3, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(japanese, 4, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(japanese, 5, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_eq_reif(kool, 1, BOOL____00204) :: defines_var(BOOL____00204);
constraint int_eq_reif(kool, 2, BOOL____00214) :: defines_var(BOOL____00214);
constraint int_eq_reif(kool, 3, BOOL____00224) :: defines_var(BOOL____00224);
constraint int_eq_reif(kool, 4, BOOL____00234) :: defines_var(BOOL____00234);
constraint int_eq_reif(kool, 5, BOOL____00244) :: defines_var(BOOL____00244);
constraint int_eq_reif(lucky_strike, 1, BOOL____00208) :: defines_var(BOOL____00208);
constraint int_eq_reif(lucky_strike, 2, BOOL____00218) :: defines_var(BOOL____00218);
constraint int_eq_reif(lucky_strike, 3, BOOL____00228) :: defines_var(BOOL____00228);
constraint int_eq_reif(lucky_strike, 4, BOOL____00238) :: defines_var(BOOL____00238);
constraint int_eq_reif(lucky_strike, 5, BOOL____00248) :: defines_var(BOOL____00248);
constraint int_eq_reif(milk, 1, BOOL____00156) :: defines_var(BOOL____00156);
constraint int_eq_reif(milk, 2, BOOL____00166) :: defines_var(BOOL____00166);
constraint int_eq_reif(milk, 3, BOOL____00176) :: defines_var(BOOL____00176);
constraint int_eq_reif(milk, 4, BOOL____00186) :: defines_var(BOOL____00186);
constraint int_eq_reif(milk, 5, BOOL____00196) :: defines_var(BOOL____00196);
constraint int_eq_reif(norwegian, 1, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(norwegian, 2, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(norwegian, 3, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_eq_reif(norwegian, 4, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(norwegian, 5, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_eq_reif(old_gold, 1, BOOL____00202) :: defines_var(BOOL____00202);
constraint int_eq_reif(old_gold, 2, BOOL____00212) :: defines_var(BOOL____00212);
constraint int_eq_reif(old_gold, 3, BOOL____00222) :: defines_var(BOOL____00222);
constraint int_eq_reif(old_gold, 4, BOOL____00232) :: defines_var(BOOL____00232);
constraint int_eq_reif(old_gold, 5, BOOL____00242) :: defines_var(BOOL____00242);
constraint int_eq_reif(orange_juice, 1, BOOL____00158) :: defines_var(BOOL____00158);
constraint int_eq_reif(orange_juice, 2, BOOL____00168) :: defines_var(BOOL____00168);
constraint int_eq_reif(orange_juice, 3, BOOL____00178) :: defines_var(BOOL____00178);
constraint int_eq_reif(orange_juice, 4, BOOL____00188) :: defines_var(BOOL____00188);
constraint int_eq_reif(orange_juice, 5, BOOL____00198) :: defines_var(BOOL____00198);
constraint int_eq_reif(parliament, 1, BOOL____00210) :: defines_var(BOOL____00210);
constraint int_eq_reif(parliament, 2, BOOL____00220) :: defines_var(BOOL____00220);
constraint int_eq_reif(parliament, 3, BOOL____00230) :: defines_var(BOOL____00230);
constraint int_eq_reif(parliament, 4, BOOL____00240) :: defines_var(BOOL____00240);
constraint int_eq_reif(parliament, 5, BOOL____00250) :: defines_var(BOOL____00250);
constraint int_eq_reif(red, 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(red, 2, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(red, 3, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(red, 4, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(red, 5, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(snail, 1, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_eq_reif(snail, 2, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_eq_reif(snail, 3, BOOL____00124) :: defines_var(BOOL____00124);
constraint int_eq_reif(snail, 4, BOOL____00134) :: defines_var(BOOL____00134);
constraint int_eq_reif(snail, 5, BOOL____00144) :: defines_var(BOOL____00144);
constraint int_eq_reif(spaniard, 1, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(spaniard, 2, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(spaniard, 3, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(spaniard, 4, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(spaniard, 5, BOOL____00094) :: defines_var(BOOL____00094);
constraint int_eq_reif(tea, 1, BOOL____00154) :: defines_var(BOOL____00154);
constraint int_eq_reif(tea, 2, BOOL____00164) :: defines_var(BOOL____00164);
constraint int_eq_reif(tea, 3, BOOL____00174) :: defines_var(BOOL____00174);
constraint int_eq_reif(tea, 4, BOOL____00184) :: defines_var(BOOL____00184);
constraint int_eq_reif(tea, 5, BOOL____00194) :: defines_var(BOOL____00194);
constraint int_eq_reif(ukrainian, 1, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(ukrainian, 2, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(ukrainian, 3, BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(ukrainian, 4, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(ukrainian, 5, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_eq_reif(water, 1, BOOL____00160) :: defines_var(BOOL____00160);
constraint int_eq_reif(water, 2, BOOL____00170) :: defines_var(BOOL____00170);
constraint int_eq_reif(water, 3, BOOL____00180) :: defines_var(BOOL____00180);
constraint int_eq_reif(water, 4, BOOL____00190) :: defines_var(BOOL____00190);
constraint int_eq_reif(water, 5, BOOL____00200) :: defines_var(BOOL____00200);
constraint int_eq_reif(yellow, 1, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(yellow, 2, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(yellow, 3, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(yellow, 4, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(yellow, 5, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(zebra, 1, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_eq_reif(zebra, 2, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_eq_reif(zebra, 3, BOOL____00130) :: defines_var(BOOL____00130);
constraint int_eq_reif(zebra, 4, BOOL____00140) :: defines_var(BOOL____00140);
constraint int_eq_reif(zebra, 5, BOOL____00150) :: defines_var(BOOL____00150);
constraint int_eq_reif(Animal[1], 1, BOOL____00102);
constraint int_eq_reif(Animal[1], 2, BOOL____00104);
constraint int_eq_reif(Animal[1], 3, BOOL____00106);
constraint int_eq_reif(Animal[1], 4, BOOL____00108);
constraint int_eq_reif(Animal[1], 5, BOOL____00110);
constraint int_eq_reif(Animal[2], 1, BOOL____00112);
constraint int_eq_reif(Animal[2], 2, BOOL____00114);
constraint int_eq_reif(Animal[2], 3, BOOL____00116);
constraint int_eq_reif(Animal[2], 4, BOOL____00118);
constraint int_eq_reif(Animal[2], 5, BOOL____00120);
constraint int_eq_reif(Animal[3], 1, BOOL____00122);
constraint int_eq_reif(Animal[3], 2, BOOL____00124);
constraint int_eq_reif(Animal[3], 3, BOOL____00126);
constraint int_eq_reif(Animal[3], 4, BOOL____00128);
constraint int_eq_reif(Animal[3], 5, BOOL____00130);
constraint int_eq_reif(Animal[4], 1, BOOL____00132);
constraint int_eq_reif(Animal[4], 2, BOOL____00134);
constraint int_eq_reif(Animal[4], 3, BOOL____00136);
constraint int_eq_reif(Animal[4], 4, BOOL____00138);
constraint int_eq_reif(Animal[4], 5, BOOL____00140);
constraint int_eq_reif(Animal[5], 1, BOOL____00142);
constraint int_eq_reif(Animal[5], 2, BOOL____00144);
constraint int_eq_reif(Animal[5], 3, BOOL____00146);
constraint int_eq_reif(Animal[5], 4, BOOL____00148);
constraint int_eq_reif(Animal[5], 5, BOOL____00150);
constraint int_eq_reif(Brand[1], 1, BOOL____00202);
constraint int_eq_reif(Brand[1], 2, BOOL____00204);
constraint int_eq_reif(Brand[1], 3, BOOL____00206);
constraint int_eq_reif(Brand[1], 4, BOOL____00208);
constraint int_eq_reif(Brand[1], 5, BOOL____00210);
constraint int_eq_reif(Brand[2], 1, BOOL____00212);
constraint int_eq_reif(Brand[2], 2, BOOL____00214);
constraint int_eq_reif(Brand[2], 3, BOOL____00216);
constraint int_eq_reif(Brand[2], 4, BOOL____00218);
constraint int_eq_reif(Brand[2], 5, BOOL____00220);
constraint int_eq_reif(Brand[3], 1, BOOL____00222);
constraint int_eq_reif(Brand[3], 2, BOOL____00224);
constraint int_eq_reif(Brand[3], 3, BOOL____00226);
constraint int_eq_reif(Brand[3], 4, BOOL____00228);
constraint int_eq_reif(Brand[3], 5, BOOL____00230);
constraint int_eq_reif(Brand[4], 1, BOOL____00232);
constraint int_eq_reif(Brand[4], 2, BOOL____00234);
constraint int_eq_reif(Brand[4], 3, BOOL____00236);
constraint int_eq_reif(Brand[4], 4, BOOL____00238);
constraint int_eq_reif(Brand[4], 5, BOOL____00240);
constraint int_eq_reif(Brand[5], 1, BOOL____00242);
constraint int_eq_reif(Brand[5], 2, BOOL____00244);
constraint int_eq_reif(Brand[5], 3, BOOL____00246);
constraint int_eq_reif(Brand[5], 4, BOOL____00248);
constraint int_eq_reif(Brand[5], 5, BOOL____00250);
constraint int_eq_reif(Color[1], 1, BOOL____00002);
constraint int_eq_reif(Color[1], 2, BOOL____00004);
constraint int_eq_reif(Color[1], 3, BOOL____00006);
constraint int_eq_reif(Color[1], 4, BOOL____00008);
constraint int_eq_reif(Color[1], 5, BOOL____00010);
constraint int_eq_reif(Color[2], 1, BOOL____00012);
constraint int_eq_reif(Color[2], 2, BOOL____00014);
constraint int_eq_reif(Color[2], 3, BOOL____00016);
constraint int_eq_reif(Color[2], 4, BOOL____00018);
constraint int_eq_reif(Color[2], 5, BOOL____00020);
constraint int_eq_reif(Color[3], 1, BOOL____00022);
constraint int_eq_reif(Color[3], 2, BOOL____00024);
constraint int_eq_reif(Color[3], 3, BOOL____00026);
constraint int_eq_reif(Color[3], 4, BOOL____00028);
constraint int_eq_reif(Color[3], 5, BOOL____00030);
constraint int_eq_reif(Color[4], 1, BOOL____00032);
constraint int_eq_reif(Color[4], 2, BOOL____00034);
constraint int_eq_reif(Color[4], 3, BOOL____00036);
constraint int_eq_reif(Color[4], 4, BOOL____00038);
constraint int_eq_reif(Color[4], 5, BOOL____00040);
constraint int_eq_reif(Color[5], 1, BOOL____00042);
constraint int_eq_reif(Color[5], 2, BOOL____00044);
constraint int_eq_reif(Color[5], 3, BOOL____00046);
constraint int_eq_reif(Color[5], 4, BOOL____00048);
constraint int_eq_reif(Color[5], 5, BOOL____00050);
constraint int_eq_reif(Drinks[1], 1, BOOL____00152);
constraint int_eq_reif(Drinks[1], 2, BOOL____00154);
constraint int_eq_reif(Drinks[1], 3, BOOL____00156);
constraint int_eq_reif(Drinks[1], 4, BOOL____00158);
constraint int_eq_reif(Drinks[1], 5, BOOL____00160);
constraint int_eq_reif(Drinks[2], 1, BOOL____00162);
constraint int_eq_reif(Drinks[2], 2, BOOL____00164);
constraint int_eq_reif(Drinks[2], 3, BOOL____00166);
constraint int_eq_reif(Drinks[2], 4, BOOL____00168);
constraint int_eq_reif(Drinks[2], 5, BOOL____00170);
constraint int_eq_reif(Drinks[3], 1, BOOL____00172);
constraint int_eq_reif(Drinks[3], 2, BOOL____00174);
constraint int_eq_reif(Drinks[3], 3, BOOL____00176);
constraint int_eq_reif(Drinks[3], 4, BOOL____00178);
constraint int_eq_reif(Drinks[3], 5, BOOL____00180);
constraint int_eq_reif(Drinks[4], 1, BOOL____00182);
constraint int_eq_reif(Drinks[4], 2, BOOL____00184);
constraint int_eq_reif(Drinks[4], 3, BOOL____00186);
constraint int_eq_reif(Drinks[4], 4, BOOL____00188);
constraint int_eq_reif(Drinks[4], 5, BOOL____00190);
constraint int_eq_reif(Drinks[5], 1, BOOL____00192);
constraint int_eq_reif(Drinks[5], 2, BOOL____00194);
constraint int_eq_reif(Drinks[5], 3, BOOL____00196);
constraint int_eq_reif(Drinks[5], 4, BOOL____00198);
constraint int_eq_reif(Drinks[5], 5, BOOL____00200);
constraint int_eq_reif(Nationality[1], 1, BOOL____00052);
constraint int_eq_reif(Nationality[1], 2, BOOL____00054);
constraint int_eq_reif(Nationality[1], 3, BOOL____00056);
constraint int_eq_reif(Nationality[1], 4, BOOL____00058);
constraint int_eq_reif(Nationality[1], 5, BOOL____00060);
constraint int_eq_reif(Nationality[2], 1, BOOL____00062);
constraint int_eq_reif(Nationality[2], 2, BOOL____00064);
constraint int_eq_reif(Nationality[2], 3, BOOL____00066);
constraint int_eq_reif(Nationality[2], 4, BOOL____00068);
constraint int_eq_reif(Nationality[2], 5, BOOL____00070);
constraint int_eq_reif(Nationality[3], 1, BOOL____00072);
constraint int_eq_reif(Nationality[3], 2, BOOL____00074);
constraint int_eq_reif(Nationality[3], 3, BOOL____00076);
constraint int_eq_reif(Nationality[3], 4, BOOL____00078);
constraint int_eq_reif(Nationality[3], 5, BOOL____00080);
constraint int_eq_reif(Nationality[4], 1, BOOL____00082);
constraint int_eq_reif(Nationality[4], 2, BOOL____00084);
constraint int_eq_reif(Nationality[4], 3, BOOL____00086);
constraint int_eq_reif(Nationality[4], 4, BOOL____00088);
constraint int_eq_reif(Nationality[4], 5, BOOL____00090);
constraint int_eq_reif(Nationality[5], 1, BOOL____00092);
constraint int_eq_reif(Nationality[5], 2, BOOL____00094);
constraint int_eq_reif(Nationality[5], 3, BOOL____00096);
constraint int_eq_reif(Nationality[5], 4, BOOL____00098);
constraint int_eq_reif(Nationality[5], 5, BOOL____00100);
constraint int_lin_eq([1], [blue], 2);
constraint int_lin_eq([-1, 1], [INT____00251, ivory], -1) :: defines_var(INT____00251);
constraint int_lin_eq([-1, -1, 1], [INT____00254, horse, yellow], 0) :: defines_var(INT____00254);
constraint int_plus(INT____00252, fox, chesterfield) :: defines_var(INT____00252);
solve satisfy;
