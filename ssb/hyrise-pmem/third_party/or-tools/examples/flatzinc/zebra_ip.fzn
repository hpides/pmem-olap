var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00152 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00154 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00156 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00160 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00162 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00164 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00166 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00168 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00170 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00174 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00176 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00178 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00180 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00186 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00188 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00190 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00192 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00194 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00196 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00198 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00200 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00202 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00204 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00206 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00208 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00210 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00212 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00214 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00216 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00218 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00220 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00222 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00224 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00226 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00228 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00230 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00232 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00234 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00236 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00238 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00240 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00242 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00244 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00246 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00248 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00250 :: is_defined_var :: var_is_introduced;
array [1..25] of var 0..1: color;
array [1..5] of var 1..5: colors :: output_array([1..5]);
array [1..25] of var 0..1: drink;
array [1..5] of var 1..5: drinks :: output_array([1..5]);
array [1..5] of var 1..5: nationalities :: output_array([1..5]);
array [1..25] of var 0..1: nationality;
array [1..25] of var 0..1: pet;
array [1..5] of var 1..5: pets :: output_array([1..5]);
array [1..25] of var 0..1: smoke;
array [1..5] of var 1..5: smokes :: output_array([1..5]);
constraint int_eq(color[2], 0);
constraint int_eq(color[7], color[3]);
constraint int_eq(color[12], color[8]);
constraint int_eq(color[17], color[13]);
constraint int_eq(color[22], color[18]);
constraint int_eq(drink[1], color[2]);
constraint int_eq(drink[6], color[7]);
constraint int_eq(drink[11], color[12]);
constraint int_eq(drink[12], 1);
constraint int_eq(drink[16], color[17]);
constraint int_eq(drink[21], color[22]);
constraint int_eq(nationality[1], color[4]);
constraint int_eq(nationality[2], smoke[5]);
constraint int_eq(nationality[3], 1);
constraint int_eq(nationality[4], pet[1]);
constraint int_eq(nationality[5], drink[4]);
constraint int_eq(nationality[6], color[9]);
constraint int_eq(nationality[7], smoke[10]);
constraint int_eq(nationality[9], pet[6]);
constraint int_eq(nationality[10], drink[9]);
constraint int_eq(nationality[11], color[14]);
constraint int_eq(nationality[12], smoke[15]);
constraint int_eq(nationality[14], pet[11]);
constraint int_eq(nationality[15], drink[14]);
constraint int_eq(nationality[16], color[19]);
constraint int_eq(nationality[17], smoke[20]);
constraint int_eq(nationality[19], pet[16]);
constraint int_eq(nationality[20], drink[19]);
constraint int_eq(nationality[21], color[24]);
constraint int_eq(nationality[22], smoke[25]);
constraint int_eq(nationality[24], pet[21]);
constraint int_eq(nationality[25], drink[24]);
constraint int_eq(smoke[2], color[5]);
constraint int_eq(smoke[3], drink[3]);
constraint int_eq(smoke[4], pet[4]);
constraint int_eq(smoke[7], color[10]);
constraint int_eq(smoke[8], drink[8]);
constraint int_eq(smoke[9], pet[9]);
constraint int_eq(smoke[12], color[15]);
constraint int_eq(smoke[13], drink[13]);
constraint int_eq(smoke[14], pet[14]);
constraint int_eq(smoke[17], color[20]);
constraint int_eq(smoke[18], drink[18]);
constraint int_eq(smoke[19], pet[19]);
constraint int_eq(smoke[22], color[25]);
constraint int_eq(smoke[23], drink[23]);
constraint int_eq(smoke[24], pet[24]);
constraint int_eq_reif(color[1], 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(color[2], 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(color[3], 1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(color[4], 1, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(color[5], 1, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(color[6], 1, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(color[7], 1, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(color[8], 1, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(color[9], 1, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(color[10], 1, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(color[11], 1, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(color[12], 1, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(color[13], 1, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(color[14], 1, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(color[15], 1, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(color[16], 1, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(color[17], 1, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(color[18], 1, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(color[19], 1, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(color[20], 1, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(color[21], 1, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(color[22], 1, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(color[23], 1, BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(color[24], 1, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(color[25], 1, BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(colors[1], 1, BOOL____00002);
constraint int_eq_reif(colors[1], 2, BOOL____00004);
constraint int_eq_reif(colors[1], 3, BOOL____00006);
constraint int_eq_reif(colors[1], 4, BOOL____00008);
constraint int_eq_reif(colors[1], 5, BOOL____00010);
constraint int_eq_reif(colors[2], 1, BOOL____00012);
constraint int_eq_reif(colors[2], 2, BOOL____00014);
constraint int_eq_reif(colors[2], 3, BOOL____00016);
constraint int_eq_reif(colors[2], 4, BOOL____00018);
constraint int_eq_reif(colors[2], 5, BOOL____00020);
constraint int_eq_reif(colors[3], 1, BOOL____00022);
constraint int_eq_reif(colors[3], 2, BOOL____00024);
constraint int_eq_reif(colors[3], 3, BOOL____00026);
constraint int_eq_reif(colors[3], 4, BOOL____00028);
constraint int_eq_reif(colors[3], 5, BOOL____00030);
constraint int_eq_reif(colors[4], 1, BOOL____00032);
constraint int_eq_reif(colors[4], 2, BOOL____00034);
constraint int_eq_reif(colors[4], 3, BOOL____00036);
constraint int_eq_reif(colors[4], 4, BOOL____00038);
constraint int_eq_reif(colors[4], 5, BOOL____00040);
constraint int_eq_reif(colors[5], 1, BOOL____00042);
constraint int_eq_reif(colors[5], 2, BOOL____00044);
constraint int_eq_reif(colors[5], 3, BOOL____00046);
constraint int_eq_reif(colors[5], 4, BOOL____00048);
constraint int_eq_reif(colors[5], 5, BOOL____00050);
constraint int_eq_reif(drink[1], 1, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_eq_reif(drink[2], 1, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_eq_reif(drink[3], 1, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_eq_reif(drink[4], 1, BOOL____00108) :: defines_var(BOOL____00108);
constraint int_eq_reif(drink[5], 1, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_eq_reif(drink[6], 1, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_eq_reif(drink[7], 1, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_eq_reif(drink[8], 1, BOOL____00116) :: defines_var(BOOL____00116);
constraint int_eq_reif(drink[9], 1, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_eq_reif(drink[10], 1, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_eq_reif(drink[11], 1, BOOL____00122) :: defines_var(BOOL____00122);
constraint int_eq_reif(drink[12], 1, BOOL____00124) :: defines_var(BOOL____00124);
constraint int_eq_reif(drink[13], 1, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_eq_reif(drink[14], 1, BOOL____00128) :: defines_var(BOOL____00128);
constraint int_eq_reif(drink[15], 1, BOOL____00130) :: defines_var(BOOL____00130);
constraint int_eq_reif(drink[16], 1, BOOL____00132) :: defines_var(BOOL____00132);
constraint int_eq_reif(drink[17], 1, BOOL____00134) :: defines_var(BOOL____00134);
constraint int_eq_reif(drink[18], 1, BOOL____00136) :: defines_var(BOOL____00136);
constraint int_eq_reif(drink[19], 1, BOOL____00138) :: defines_var(BOOL____00138);
constraint int_eq_reif(drink[20], 1, BOOL____00140) :: defines_var(BOOL____00140);
constraint int_eq_reif(drink[21], 1, BOOL____00142) :: defines_var(BOOL____00142);
constraint int_eq_reif(drink[22], 1, BOOL____00144) :: defines_var(BOOL____00144);
constraint int_eq_reif(drink[23], 1, BOOL____00146) :: defines_var(BOOL____00146);
constraint int_eq_reif(drink[24], 1, BOOL____00148) :: defines_var(BOOL____00148);
constraint int_eq_reif(drink[25], 1, BOOL____00150) :: defines_var(BOOL____00150);
constraint int_eq_reif(drinks[1], 1, BOOL____00102);
constraint int_eq_reif(drinks[1], 2, BOOL____00104);
constraint int_eq_reif(drinks[1], 3, BOOL____00106);
constraint int_eq_reif(drinks[1], 4, BOOL____00108);
constraint int_eq_reif(drinks[1], 5, BOOL____00110);
constraint int_eq_reif(drinks[2], 1, BOOL____00112);
constraint int_eq_reif(drinks[2], 2, BOOL____00114);
constraint int_eq_reif(drinks[2], 3, BOOL____00116);
constraint int_eq_reif(drinks[2], 4, BOOL____00118);
constraint int_eq_reif(drinks[2], 5, BOOL____00120);
constraint int_eq_reif(drinks[3], 1, BOOL____00122);
constraint int_eq_reif(drinks[3], 2, BOOL____00124);
constraint int_eq_reif(drinks[3], 3, BOOL____00126);
constraint int_eq_reif(drinks[3], 4, BOOL____00128);
constraint int_eq_reif(drinks[3], 5, BOOL____00130);
constraint int_eq_reif(drinks[4], 1, BOOL____00132);
constraint int_eq_reif(drinks[4], 2, BOOL____00134);
constraint int_eq_reif(drinks[4], 3, BOOL____00136);
constraint int_eq_reif(drinks[4], 4, BOOL____00138);
constraint int_eq_reif(drinks[4], 5, BOOL____00140);
constraint int_eq_reif(drinks[5], 1, BOOL____00142);
constraint int_eq_reif(drinks[5], 2, BOOL____00144);
constraint int_eq_reif(drinks[5], 3, BOOL____00146);
constraint int_eq_reif(drinks[5], 4, BOOL____00148);
constraint int_eq_reif(drinks[5], 5, BOOL____00150);
constraint int_eq_reif(nationalities[1], 1, BOOL____00052);
constraint int_eq_reif(nationalities[1], 2, BOOL____00054);
constraint int_eq_reif(nationalities[1], 3, BOOL____00056);
constraint int_eq_reif(nationalities[1], 4, BOOL____00058);
constraint int_eq_reif(nationalities[1], 5, BOOL____00060);
constraint int_eq_reif(nationalities[2], 1, BOOL____00062);
constraint int_eq_reif(nationalities[2], 2, BOOL____00064);
constraint int_eq_reif(nationalities[2], 3, BOOL____00066);
constraint int_eq_reif(nationalities[2], 4, BOOL____00068);
constraint int_eq_reif(nationalities[2], 5, BOOL____00070);
constraint int_eq_reif(nationalities[3], 1, BOOL____00072);
constraint int_eq_reif(nationalities[3], 2, BOOL____00074);
constraint int_eq_reif(nationalities[3], 3, BOOL____00076);
constraint int_eq_reif(nationalities[3], 4, BOOL____00078);
constraint int_eq_reif(nationalities[3], 5, BOOL____00080);
constraint int_eq_reif(nationalities[4], 1, BOOL____00082);
constraint int_eq_reif(nationalities[4], 2, BOOL____00084);
constraint int_eq_reif(nationalities[4], 3, BOOL____00086);
constraint int_eq_reif(nationalities[4], 4, BOOL____00088);
constraint int_eq_reif(nationalities[4], 5, BOOL____00090);
constraint int_eq_reif(nationalities[5], 1, BOOL____00092);
constraint int_eq_reif(nationalities[5], 2, BOOL____00094);
constraint int_eq_reif(nationalities[5], 3, BOOL____00096);
constraint int_eq_reif(nationalities[5], 4, BOOL____00098);
constraint int_eq_reif(nationalities[5], 5, BOOL____00100);
constraint int_eq_reif(nationality[1], 1, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(nationality[2], 1, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(nationality[3], 1, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(nationality[4], 1, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(nationality[5], 1, BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(nationality[6], 1, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(nationality[7], 1, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(nationality[8], 1, BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(nationality[9], 1, BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(nationality[10], 1, BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(nationality[11], 1, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_eq_reif(nationality[12], 1, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(nationality[13], 1, BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(nationality[14], 1, BOOL____00078) :: defines_var(BOOL____00078);
constraint int_eq_reif(nationality[15], 1, BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(nationality[16], 1, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_eq_reif(nationality[17], 1, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_eq_reif(nationality[18], 1, BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(nationality[19], 1, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(nationality[20], 1, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(nationality[21], 1, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(nationality[22], 1, BOOL____00094) :: defines_var(BOOL____00094);
constraint int_eq_reif(nationality[23], 1, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_eq_reif(nationality[24], 1, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_eq_reif(nationality[25], 1, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_eq_reif(pet[1], 1, BOOL____00202) :: defines_var(BOOL____00202);
constraint int_eq_reif(pet[2], 1, BOOL____00204) :: defines_var(BOOL____00204);
constraint int_eq_reif(pet[3], 1, BOOL____00206) :: defines_var(BOOL____00206);
constraint int_eq_reif(pet[4], 1, BOOL____00208) :: defines_var(BOOL____00208);
constraint int_eq_reif(pet[5], 1, BOOL____00210) :: defines_var(BOOL____00210);
constraint int_eq_reif(pet[6], 1, BOOL____00212) :: defines_var(BOOL____00212);
constraint int_eq_reif(pet[7], 1, BOOL____00214) :: defines_var(BOOL____00214);
constraint int_eq_reif(pet[8], 1, BOOL____00216) :: defines_var(BOOL____00216);
constraint int_eq_reif(pet[9], 1, BOOL____00218) :: defines_var(BOOL____00218);
constraint int_eq_reif(pet[10], 1, BOOL____00220) :: defines_var(BOOL____00220);
constraint int_eq_reif(pet[11], 1, BOOL____00222) :: defines_var(BOOL____00222);
constraint int_eq_reif(pet[12], 1, BOOL____00224) :: defines_var(BOOL____00224);
constraint int_eq_reif(pet[13], 1, BOOL____00226) :: defines_var(BOOL____00226);
constraint int_eq_reif(pet[14], 1, BOOL____00228) :: defines_var(BOOL____00228);
constraint int_eq_reif(pet[15], 1, BOOL____00230) :: defines_var(BOOL____00230);
constraint int_eq_reif(pet[16], 1, BOOL____00232) :: defines_var(BOOL____00232);
constraint int_eq_reif(pet[17], 1, BOOL____00234) :: defines_var(BOOL____00234);
constraint int_eq_reif(pet[18], 1, BOOL____00236) :: defines_var(BOOL____00236);
constraint int_eq_reif(pet[19], 1, BOOL____00238) :: defines_var(BOOL____00238);
constraint int_eq_reif(pet[20], 1, BOOL____00240) :: defines_var(BOOL____00240);
constraint int_eq_reif(pet[21], 1, BOOL____00242) :: defines_var(BOOL____00242);
constraint int_eq_reif(pet[22], 1, BOOL____00244) :: defines_var(BOOL____00244);
constraint int_eq_reif(pet[23], 1, BOOL____00246) :: defines_var(BOOL____00246);
constraint int_eq_reif(pet[24], 1, BOOL____00248) :: defines_var(BOOL____00248);
constraint int_eq_reif(pet[25], 1, BOOL____00250) :: defines_var(BOOL____00250);
constraint int_eq_reif(pets[1], 1, BOOL____00202);
constraint int_eq_reif(pets[1], 2, BOOL____00204);
constraint int_eq_reif(pets[1], 3, BOOL____00206);
constraint int_eq_reif(pets[1], 4, BOOL____00208);
constraint int_eq_reif(pets[1], 5, BOOL____00210);
constraint int_eq_reif(pets[2], 1, BOOL____00212);
constraint int_eq_reif(pets[2], 2, BOOL____00214);
constraint int_eq_reif(pets[2], 3, BOOL____00216);
constraint int_eq_reif(pets[2], 4, BOOL____00218);
constraint int_eq_reif(pets[2], 5, BOOL____00220);
constraint int_eq_reif(pets[3], 1, BOOL____00222);
constraint int_eq_reif(pets[3], 2, BOOL____00224);
constraint int_eq_reif(pets[3], 3, BOOL____00226);
constraint int_eq_reif(pets[3], 4, BOOL____00228);
constraint int_eq_reif(pets[3], 5, BOOL____00230);
constraint int_eq_reif(pets[4], 1, BOOL____00232);
constraint int_eq_reif(pets[4], 2, BOOL____00234);
constraint int_eq_reif(pets[4], 3, BOOL____00236);
constraint int_eq_reif(pets[4], 4, BOOL____00238);
constraint int_eq_reif(pets[4], 5, BOOL____00240);
constraint int_eq_reif(pets[5], 1, BOOL____00242);
constraint int_eq_reif(pets[5], 2, BOOL____00244);
constraint int_eq_reif(pets[5], 3, BOOL____00246);
constraint int_eq_reif(pets[5], 4, BOOL____00248);
constraint int_eq_reif(pets[5], 5, BOOL____00250);
constraint int_eq_reif(smoke[1], 1, BOOL____00152) :: defines_var(BOOL____00152);
constraint int_eq_reif(smoke[2], 1, BOOL____00154) :: defines_var(BOOL____00154);
constraint int_eq_reif(smoke[3], 1, BOOL____00156) :: defines_var(BOOL____00156);
constraint int_eq_reif(smoke[4], 1, BOOL____00158) :: defines_var(BOOL____00158);
constraint int_eq_reif(smoke[5], 1, BOOL____00160) :: defines_var(BOOL____00160);
constraint int_eq_reif(smoke[6], 1, BOOL____00162) :: defines_var(BOOL____00162);
constraint int_eq_reif(smoke[7], 1, BOOL____00164) :: defines_var(BOOL____00164);
constraint int_eq_reif(smoke[8], 1, BOOL____00166) :: defines_var(BOOL____00166);
constraint int_eq_reif(smoke[9], 1, BOOL____00168) :: defines_var(BOOL____00168);
constraint int_eq_reif(smoke[10], 1, BOOL____00170) :: defines_var(BOOL____00170);
constraint int_eq_reif(smoke[11], 1, BOOL____00172) :: defines_var(BOOL____00172);
constraint int_eq_reif(smoke[12], 1, BOOL____00174) :: defines_var(BOOL____00174);
constraint int_eq_reif(smoke[13], 1, BOOL____00176) :: defines_var(BOOL____00176);
constraint int_eq_reif(smoke[14], 1, BOOL____00178) :: defines_var(BOOL____00178);
constraint int_eq_reif(smoke[15], 1, BOOL____00180) :: defines_var(BOOL____00180);
constraint int_eq_reif(smoke[16], 1, BOOL____00182) :: defines_var(BOOL____00182);
constraint int_eq_reif(smoke[17], 1, BOOL____00184) :: defines_var(BOOL____00184);
constraint int_eq_reif(smoke[18], 1, BOOL____00186) :: defines_var(BOOL____00186);
constraint int_eq_reif(smoke[19], 1, BOOL____00188) :: defines_var(BOOL____00188);
constraint int_eq_reif(smoke[20], 1, BOOL____00190) :: defines_var(BOOL____00190);
constraint int_eq_reif(smoke[21], 1, BOOL____00192) :: defines_var(BOOL____00192);
constraint int_eq_reif(smoke[22], 1, BOOL____00194) :: defines_var(BOOL____00194);
constraint int_eq_reif(smoke[23], 1, BOOL____00196) :: defines_var(BOOL____00196);
constraint int_eq_reif(smoke[24], 1, BOOL____00198) :: defines_var(BOOL____00198);
constraint int_eq_reif(smoke[25], 1, BOOL____00200) :: defines_var(BOOL____00200);
constraint int_eq_reif(smokes[1], 1, BOOL____00152);
constraint int_eq_reif(smokes[1], 2, BOOL____00154);
constraint int_eq_reif(smokes[1], 3, BOOL____00156);
constraint int_eq_reif(smokes[1], 4, BOOL____00158);
constraint int_eq_reif(smokes[1], 5, BOOL____00160);
constraint int_eq_reif(smokes[2], 1, BOOL____00162);
constraint int_eq_reif(smokes[2], 2, BOOL____00164);
constraint int_eq_reif(smokes[2], 3, BOOL____00166);
constraint int_eq_reif(smokes[2], 4, BOOL____00168);
constraint int_eq_reif(smokes[2], 5, BOOL____00170);
constraint int_eq_reif(smokes[3], 1, BOOL____00172);
constraint int_eq_reif(smokes[3], 2, BOOL____00174);
constraint int_eq_reif(smokes[3], 3, BOOL____00176);
constraint int_eq_reif(smokes[3], 4, BOOL____00178);
constraint int_eq_reif(smokes[3], 5, BOOL____00180);
constraint int_eq_reif(smokes[4], 1, BOOL____00182);
constraint int_eq_reif(smokes[4], 2, BOOL____00184);
constraint int_eq_reif(smokes[4], 3, BOOL____00186);
constraint int_eq_reif(smokes[4], 4, BOOL____00188);
constraint int_eq_reif(smokes[4], 5, BOOL____00190);
constraint int_eq_reif(smokes[5], 1, BOOL____00192);
constraint int_eq_reif(smokes[5], 2, BOOL____00194);
constraint int_eq_reif(smokes[5], 3, BOOL____00196);
constraint int_eq_reif(smokes[5], 4, BOOL____00198);
constraint int_eq_reif(smokes[5], 5, BOOL____00200);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[1], color[2], color[3], color[4], color[5]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[1], color[6], color[11], color[16], color[21]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[2], color[7], color[12], color[17], color[22]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[3], color[8], color[13], color[18], color[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[4], color[9], color[14], color[19], color[24]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[5], color[10], color[15], color[20], color[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[6], color[7], color[8], color[9], color[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[11], color[12], color[13], color[14], color[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[16], color[17], color[18], color[19], color[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [color[21], color[22], color[23], color[24], color[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[1], drink[2], drink[3], drink[4], drink[5]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[1], drink[6], drink[11], drink[16], drink[21]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[2], drink[7], drink[12], drink[17], drink[22]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[3], drink[8], drink[13], drink[18], drink[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[4], drink[9], drink[14], drink[19], drink[24]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[5], drink[10], drink[15], drink[20], drink[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[6], drink[7], drink[8], drink[9], drink[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[11], drink[12], drink[13], drink[14], drink[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[16], drink[17], drink[18], drink[19], drink[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [drink[21], drink[22], drink[23], drink[24], drink[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[1], nationality[2], nationality[3], nationality[4], nationality[5]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[1], nationality[6], nationality[11], nationality[16], nationality[21]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[2], nationality[7], nationality[12], nationality[17], nationality[22]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[3], nationality[8], nationality[13], nationality[18], nationality[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[4], nationality[9], nationality[14], nationality[19], nationality[24]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[5], nationality[10], nationality[15], nationality[20], nationality[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[6], nationality[7], nationality[8], nationality[9], nationality[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[11], nationality[12], nationality[13], nationality[14], nationality[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[16], nationality[17], nationality[18], nationality[19], nationality[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [nationality[21], nationality[22], nationality[23], nationality[24], nationality[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[1], pet[2], pet[3], pet[4], pet[5]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[1], pet[6], pet[11], pet[16], pet[21]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[2], pet[7], pet[12], pet[17], pet[22]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[3], pet[8], pet[13], pet[18], pet[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[4], pet[9], pet[14], pet[19], pet[24]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[5], pet[10], pet[15], pet[20], pet[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[6], pet[7], pet[8], pet[9], pet[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[11], pet[12], pet[13], pet[14], pet[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[16], pet[17], pet[18], pet[19], pet[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [pet[21], pet[22], pet[23], pet[24], pet[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[1], smoke[2], smoke[3], smoke[4], smoke[5]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[1], smoke[6], smoke[11], smoke[16], smoke[21]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[2], smoke[7], smoke[12], smoke[17], smoke[22]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[3], smoke[8], smoke[13], smoke[18], smoke[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[4], smoke[9], smoke[14], smoke[19], smoke[24]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[5], smoke[10], smoke[15], smoke[20], smoke[25]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[6], smoke[7], smoke[8], smoke[9], smoke[10]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[11], smoke[12], smoke[13], smoke[14], smoke[15]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[16], smoke[17], smoke[18], smoke[19], smoke[20]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [smoke[21], smoke[22], smoke[23], smoke[24], smoke[25]], 1);
constraint int_lin_le([-1, 1], [color[6], nationality[3]], 0);
constraint int_lin_le([-1, 1], [color[16], nationality[23]], 0);
constraint int_lin_le([-1, 1], [pet[7], smoke[1]], 0);
constraint int_lin_le([-1, 1], [pet[8], smoke[2]], 0);
constraint int_lin_le([-1, 1], [pet[17], smoke[21]], 0);
constraint int_lin_le([-1, 1], [pet[18], smoke[22]], 0);
constraint int_lin_le([-1, -1, 1], [color[1], color[11], nationality[8]], 0);
constraint int_lin_le([-1, -1, 1], [color[6], color[16], nationality[13]], 0);
constraint int_lin_le([-1, -1, 1], [color[11], color[21], nationality[18]], 0);
constraint int_lin_le([-1, -1, 1], [pet[2], pet[12], smoke[6]], 0);
constraint int_lin_le([-1, -1, 1], [pet[3], pet[13], smoke[7]], 0);
constraint int_lin_le([-1, -1, 1], [pet[7], pet[17], smoke[11]], 0);
constraint int_lin_le([-1, -1, 1], [pet[8], pet[18], smoke[12]], 0);
constraint int_lin_le([-1, -1, 1], [pet[12], pet[22], smoke[16]], 0);
constraint int_lin_le([-1, -1, 1], [pet[13], pet[23], smoke[17]], 0);
solve satisfy;
