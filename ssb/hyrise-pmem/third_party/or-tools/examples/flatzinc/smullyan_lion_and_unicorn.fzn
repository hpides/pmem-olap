array [1..7] of bool: lion = [false, false, false, true, true, true, true];
array [1..7] of bool: unicorn = [true, true, true, false, false, false, true];
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var 1..7: INT____00001 :: is_defined_var :: var_is_introduced;
var -1..5: INT____00003 :: is_defined_var :: var_is_introduced;
var -6..6: INT____00004 :: is_defined_var :: var_is_introduced;
var -5..7: INT____00006 :: is_defined_var :: var_is_introduced;
var 1..7: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..6: INT____00011 :: is_defined_var :: var_is_introduced;
var 1..7: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..6: today :: output_var;
constraint array_bool_and([BOOL____00010, BOOL____00014], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_and([BOOL____00015, BOOL____00017], BOOL____00019) :: defines_var(BOOL____00019);
constraint array_bool_and([BOOL____00002, BOOL____00010, BOOL____00014], BOOL____00018) :: defines_var(BOOL____00018);
constraint array_bool_and([BOOL____00008, BOOL____00005, BOOL____00005], BOOL____00009) :: defines_var(BOOL____00009);
constraint array_bool_element(INT____00001, lion, BOOL____00002) :: defines_var(BOOL____00002);
constraint array_bool_element(INT____00007, lion, BOOL____00008) :: defines_var(BOOL____00008);
constraint array_bool_element(INT____00012, lion, BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_or([BOOL____00018, BOOL____00019], true);
constraint bool_eq_reif(BOOL____00002, false, BOOL____00015) :: defines_var(BOOL____00015);
constraint bool_eq_reif(BOOL____00009, false, BOOL____00010) :: defines_var(BOOL____00010);
constraint bool_eq_reif(BOOL____00013, false, BOOL____00014) :: defines_var(BOOL____00014);
constraint bool_eq_reif(BOOL____00016, false, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(INT____00006, INT____00007, BOOL____00005);
constraint int_lin_eq([-1, 1], [INT____00001, today], -1) :: defines_var(INT____00001) :: domain;
constraint int_lin_eq([-1, 1], [INT____00003, today], 1) :: defines_var(INT____00003);
constraint int_lin_eq([-1, 1], [INT____00006, INT____00004], -1) :: defines_var(INT____00006) :: domain;
constraint int_lin_eq([-1, 1], [INT____00012, INT____00011], -1) :: defines_var(INT____00012) :: domain;
constraint int_lin_le_reif([-1], [INT____00004], 0, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_mod(INT____00001, 7, INT____00011) :: defines_var(INT____00011);
constraint int_mod(INT____00003, 7, INT____00004) :: defines_var(INT____00004);
solve satisfy;
