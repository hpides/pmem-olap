predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..9] of int: cover = [1, 2, 3, 4, 5, 6, 7, 8, 9];
array [1..9] of int: occ = [2, 1, 2, 1, 3, 1, 0, 1, 1];
array [1..144] of int: problem = [3, 0, 0, 1, 5, 4, 0, 0, 1, 0, 9, 5, 0, 1, 0, 0, 3, 0, 0, 0, 0, 1, 3, 6, 0, 0, 4, 0, 0, 3, 0, 8, 0, 0, 2, 0, 5, 0, 0, 1, 0, 0, 9, 2, 5, 0, 0, 1, 0, 9, 0, 0, 5, 0, 0, 5, 0, 0, 0, 0, 5, 8, 1, 0, 0, 9, 0, 0, 3, 0, 6, 0, 0, 5, 0, 8, 0, 0, 2, 0, 0, 5, 5, 3, 0, 0, 0, 0, 5, 0, 0, 6, 0, 0, 1, 0, 2, 0, 0, 5, 1, 5, 0, 0, 5, 0, 0, 9, 0, 6, 0, 0, 4, 0, 1, 0, 0, 3, 0, 0, 1, 5, 1, 0, 0, 0, 0, 5, 0, 0, 5, 0, 5, 5, 0, 4, 0, 0, 3, 1, 6, 0, 0, 8];
array [1..144] of int: regions = [1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 1, 1, 4, 4, 4, 4, 5, 5, 5, 5, 3, 3, 1, 1, 4, 4, 4, 4, 5, 5, 5, 5, 3, 3, 1, 1, 4, 4, 4, 4, 5, 5, 5, 5, 3, 3, 6, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 6, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 6, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 6, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 7, 7, 8, 8, 9, 9, 12, 12, 12, 11, 11, 11, 7, 7, 8, 8, 9, 9, 12, 12, 12, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12];
array [1..144] of var 1..12: x :: output_array([1..12, 1..12]);
constraint global_cardinality([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12]], cover, occ) :: domain;
constraint global_cardinality([x[1], x[2], x[3], x[13], x[14], x[15], x[25], x[26], x[37], x[38], x[49], x[50]], cover, occ) :: domain;
constraint global_cardinality([x[1], x[13], x[25], x[37], x[49], x[61], x[73], x[85], x[97], x[109], x[121], x[133]], cover, occ) :: domain;
constraint global_cardinality([x[2], x[14], x[26], x[38], x[50], x[62], x[74], x[86], x[98], x[110], x[122], x[134]], cover, occ) :: domain;
constraint global_cardinality([x[3], x[15], x[27], x[39], x[51], x[63], x[75], x[87], x[99], x[111], x[123], x[135]], cover, occ) :: domain;
constraint global_cardinality([x[4], x[5], x[6], x[7], x[8], x[9], x[16], x[17], x[18], x[19], x[20], x[21]], cover, occ) :: domain;
constraint global_cardinality([x[4], x[16], x[28], x[40], x[52], x[64], x[76], x[88], x[100], x[112], x[124], x[136]], cover, occ) :: domain;
constraint global_cardinality([x[5], x[17], x[29], x[41], x[53], x[65], x[77], x[89], x[101], x[113], x[125], x[137]], cover, occ) :: domain;
constraint global_cardinality([x[6], x[18], x[30], x[42], x[54], x[66], x[78], x[90], x[102], x[114], x[126], x[138]], cover, occ) :: domain;
constraint global_cardinality([x[7], x[19], x[31], x[43], x[55], x[67], x[79], x[91], x[103], x[115], x[127], x[139]], cover, occ) :: domain;
constraint global_cardinality([x[8], x[20], x[32], x[44], x[56], x[68], x[80], x[92], x[104], x[116], x[128], x[140]], cover, occ) :: domain;
constraint global_cardinality([x[9], x[21], x[33], x[45], x[57], x[69], x[81], x[93], x[105], x[117], x[129], x[141]], cover, occ) :: domain;
constraint global_cardinality([x[10], x[11], x[12], x[22], x[23], x[24], x[35], x[36], x[47], x[48], x[59], x[60]], cover, occ) :: domain;
constraint global_cardinality([x[10], x[22], x[34], x[46], x[58], x[70], x[82], x[94], x[106], x[118], x[130], x[142]], cover, occ) :: domain;
constraint global_cardinality([x[11], x[23], x[35], x[47], x[59], x[71], x[83], x[95], x[107], x[119], x[131], x[143]], cover, occ) :: domain;
constraint global_cardinality([x[12], x[24], x[36], x[48], x[60], x[72], x[84], x[96], x[108], x[120], x[132], x[144]], cover, occ) :: domain;
constraint global_cardinality([x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]], cover, occ) :: domain;
constraint global_cardinality([x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36]], cover, occ) :: domain;
constraint global_cardinality([x[27], x[28], x[29], x[30], x[39], x[40], x[41], x[42], x[51], x[52], x[53], x[54]], cover, occ) :: domain;
constraint global_cardinality([x[31], x[32], x[33], x[34], x[43], x[44], x[45], x[46], x[55], x[56], x[57], x[58]], cover, occ) :: domain;
constraint global_cardinality([x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], cover, occ) :: domain;
constraint global_cardinality([x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60]], cover, occ) :: domain;
constraint global_cardinality([x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], cover, occ) :: domain;
constraint global_cardinality([x[61], x[62], x[63], x[73], x[74], x[75], x[85], x[86], x[87], x[97], x[98], x[99]], cover, occ) :: domain;
constraint global_cardinality([x[64], x[65], x[76], x[77], x[88], x[89], x[100], x[101], x[112], x[113], x[124], x[125]], cover, occ) :: domain;
constraint global_cardinality([x[66], x[67], x[78], x[79], x[90], x[91], x[102], x[103], x[114], x[115], x[126], x[127]], cover, occ) :: domain;
constraint global_cardinality([x[68], x[69], x[80], x[81], x[92], x[93], x[104], x[105], x[116], x[117], x[128], x[129]], cover, occ) :: domain;
constraint global_cardinality([x[70], x[71], x[72], x[82], x[83], x[84], x[94], x[95], x[96], x[106], x[107], x[108]], cover, occ) :: domain;
constraint global_cardinality([x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84]], cover, occ) :: domain;
constraint global_cardinality([x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], cover, occ) :: domain;
constraint global_cardinality([x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108]], cover, occ) :: domain;
constraint global_cardinality([x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], cover, occ) :: domain;
constraint global_cardinality([x[109], x[110], x[111], x[121], x[122], x[123], x[133], x[134], x[135], x[136], x[137], x[138]], cover, occ) :: domain;
constraint global_cardinality([x[118], x[119], x[120], x[130], x[131], x[132], x[139], x[140], x[141], x[142], x[143], x[144]], cover, occ) :: domain;
constraint global_cardinality([x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132]], cover, occ) :: domain;
constraint global_cardinality([x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], cover, occ) :: domain;
constraint int_eq(x[1], 3);
constraint int_eq(x[4], 1);
constraint int_eq(x[5], 5);
constraint int_eq(x[6], 4);
constraint int_eq(x[9], 1);
constraint int_eq(x[11], 9);
constraint int_eq(x[12], 5);
constraint int_eq(x[14], 1);
constraint int_eq(x[17], 3);
constraint int_eq(x[22], 1);
constraint int_eq(x[23], 3);
constraint int_eq(x[24], 6);
constraint int_eq(x[27], 4);
constraint int_eq(x[30], 3);
constraint int_eq(x[32], 8);
constraint int_eq(x[35], 2);
constraint int_eq(x[37], 5);
constraint int_eq(x[40], 1);
constraint int_eq(x[43], 9);
constraint int_eq(x[44], 2);
constraint int_eq(x[45], 5);
constraint int_eq(x[48], 1);
constraint int_eq(x[50], 9);
constraint int_eq(x[53], 5);
constraint int_eq(x[56], 5);
constraint int_eq(x[61], 5);
constraint int_eq(x[62], 8);
constraint int_eq(x[63], 1);
constraint int_eq(x[66], 9);
constraint int_eq(x[69], 3);
constraint int_eq(x[71], 6);
constraint int_eq(x[74], 5);
constraint int_eq(x[76], 8);
constraint int_eq(x[79], 2);
constraint int_eq(x[82], 5);
constraint int_eq(x[83], 5);
constraint int_eq(x[84], 3);
constraint int_eq(x[89], 5);
constraint int_eq(x[92], 6);
constraint int_eq(x[95], 1);
constraint int_eq(x[97], 2);
constraint int_eq(x[100], 5);
constraint int_eq(x[101], 1);
constraint int_eq(x[102], 5);
constraint int_eq(x[105], 5);
constraint int_eq(x[108], 9);
constraint int_eq(x[110], 6);
constraint int_eq(x[113], 4);
constraint int_eq(x[115], 1);
constraint int_eq(x[118], 3);
constraint int_eq(x[121], 1);
constraint int_eq(x[122], 5);
constraint int_eq(x[123], 1);
constraint int_eq(x[128], 5);
constraint int_eq(x[131], 5);
constraint int_eq(x[133], 5);
constraint int_eq(x[134], 5);
constraint int_eq(x[136], 4);
constraint int_eq(x[139], 3);
constraint int_eq(x[140], 1);
constraint int_eq(x[141], 6);
constraint int_eq(x[144], 8);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[144]], first_fail, indomain_min, complete) satisfy;
