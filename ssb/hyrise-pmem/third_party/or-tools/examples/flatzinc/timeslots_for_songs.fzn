predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var 1..7: G;
var 1..7: H;
var -6..6: INT____00001 :: is_defined_var :: var_is_introduced;
var 1..6: L;
var 2..7: News;
var 1..7: O;
var 1..7: P;
var 1..7: S;
array [1..7] of var 1..7: timeline :: output_array([1..7]);
array [1..7] of var 1..7: x :: output_array([1..7]) = [G, H, L, O, P, S, News];
constraint all_different_int(x);
constraint int_abs(INT____00001, 3);
constraint int_eq_reif(G, 1, BOOL____00004);
constraint int_eq_reif(G, 2, BOOL____00006);
constraint int_eq_reif(G, 3, BOOL____00008);
constraint int_eq_reif(G, 4, BOOL____00010);
constraint int_eq_reif(G, 5, BOOL____00012);
constraint int_eq_reif(G, 6, BOOL____00014);
constraint int_eq_reif(G, 7, BOOL____00016);
constraint int_eq_reif(H, 1, BOOL____00018);
constraint int_eq_reif(H, 2, BOOL____00020);
constraint int_eq_reif(H, 3, BOOL____00022);
constraint int_eq_reif(H, 4, BOOL____00024);
constraint int_eq_reif(H, 5, BOOL____00026);
constraint int_eq_reif(H, 6, BOOL____00028);
constraint int_eq_reif(H, 7, BOOL____00030);
constraint int_eq_reif(L, 1, BOOL____00032);
constraint int_eq_reif(L, 2, BOOL____00034);
constraint int_eq_reif(L, 3, BOOL____00036);
constraint int_eq_reif(L, 4, BOOL____00038);
constraint int_eq_reif(L, 5, BOOL____00040);
constraint int_eq_reif(L, 6, BOOL____00042);
constraint int_eq_reif(News, 2, BOOL____00088);
constraint int_eq_reif(News, 3, BOOL____00090);
constraint int_eq_reif(News, 4, BOOL____00092);
constraint int_eq_reif(News, 5, BOOL____00094);
constraint int_eq_reif(News, 6, BOOL____00096);
constraint int_eq_reif(News, 7, BOOL____00098);
constraint int_eq_reif(O, 1, BOOL____00045);
constraint int_eq_reif(O, 2, BOOL____00047);
constraint int_eq_reif(O, 3, BOOL____00049);
constraint int_eq_reif(O, 4, BOOL____00051);
constraint int_eq_reif(O, 5, BOOL____00053);
constraint int_eq_reif(O, 6, BOOL____00055);
constraint int_eq_reif(O, 7, BOOL____00057);
constraint int_eq_reif(P, 1, BOOL____00059);
constraint int_eq_reif(P, 2, BOOL____00061);
constraint int_eq_reif(P, 3, BOOL____00063);
constraint int_eq_reif(P, 4, BOOL____00065);
constraint int_eq_reif(P, 5, BOOL____00067);
constraint int_eq_reif(P, 6, BOOL____00069);
constraint int_eq_reif(P, 7, BOOL____00071);
constraint int_eq_reif(S, 1, BOOL____00073);
constraint int_eq_reif(S, 2, BOOL____00075);
constraint int_eq_reif(S, 3, BOOL____00077);
constraint int_eq_reif(S, 4, BOOL____00079);
constraint int_eq_reif(S, 5, BOOL____00081);
constraint int_eq_reif(S, 6, BOOL____00083);
constraint int_eq_reif(S, 7, BOOL____00085);
constraint int_eq_reif(timeline[1], 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(timeline[1], 2, BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(timeline[1], 3, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(timeline[1], 4, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(timeline[1], 5, BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(timeline[1], 6, BOOL____00073) :: defines_var(BOOL____00073);
constraint int_eq_reif(timeline[1], 7, false);
constraint int_eq_reif(timeline[2], 1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(timeline[2], 2, BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(timeline[2], 3, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(timeline[2], 4, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(timeline[2], 5, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(timeline[2], 6, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(timeline[2], 7, BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(timeline[3], 1, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(timeline[3], 2, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(timeline[3], 3, BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(timeline[3], 4, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(timeline[3], 5, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(timeline[3], 6, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(timeline[3], 7, BOOL____00090) :: defines_var(BOOL____00090);
constraint int_eq_reif(timeline[4], 1, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(timeline[4], 2, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(timeline[4], 3, BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(timeline[4], 4, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(timeline[4], 5, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(timeline[4], 6, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(timeline[4], 7, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(timeline[5], 1, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(timeline[5], 2, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(timeline[5], 3, BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(timeline[5], 4, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(timeline[5], 5, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(timeline[5], 6, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(timeline[5], 7, BOOL____00094) :: defines_var(BOOL____00094);
constraint int_eq_reif(timeline[6], 1, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(timeline[6], 2, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(timeline[6], 3, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(timeline[6], 4, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(timeline[6], 5, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(timeline[6], 6, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(timeline[6], 7, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_eq_reif(timeline[7], 1, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(timeline[7], 2, BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(timeline[7], 3, false);
constraint int_eq_reif(timeline[7], 4, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(timeline[7], 5, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(timeline[7], 6, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(timeline[7], 7, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_lin_eq([-1, 1], [L, O], 1);
constraint int_lt(L, News);
constraint int_plus(INT____00001, P, G) :: defines_var(INT____00001);
solve satisfy;
