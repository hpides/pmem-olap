array [1..4] of int: BeforeTasks = [4, 3, 2, 1];
array [1..4] of int: Durations = [4, 1, 2, 1];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
array [1..4] of var 9..17: Begins :: output_array([1..4]);
array [1..4] of var 9..17: Ends :: output_array([1..4]);
constraint array_bool_or([BOOL____00001, BOOL____00002], true);
constraint array_bool_or([BOOL____00003, BOOL____00004], true);
constraint array_bool_or([BOOL____00005, BOOL____00006], true);
constraint array_bool_or([BOOL____00007, BOOL____00008], true);
constraint array_bool_or([BOOL____00009, BOOL____00010], true);
constraint array_bool_or([BOOL____00011, BOOL____00012], true);
constraint int_le(11, Begins[1]);
constraint int_le(Ends[2], Begins[1]);
constraint int_le(Ends[4], Begins[3]);
constraint int_lin_eq([-1, 1], [Begins[1], Ends[1]], 4);
constraint int_lin_eq([-1, 1], [Begins[2], Ends[2]], 1);
constraint int_lin_eq([-1, 1], [Begins[3], Ends[3]], 2);
constraint int_lin_eq([-1, 1], [Begins[4], Ends[4]], 1);
constraint int_lin_le_reif([-1, 1], [Begins[1], Begins[2]], -1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_lin_le_reif([-1, 1], [Begins[1], Begins[3]], -2, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_lin_le_reif([-1, 1], [Begins[1], Begins[4]], -1, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lin_le_reif([-1, 1], [Begins[2], Begins[3]], -2, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_lin_le_reif([-1, 1], [Begins[2], Begins[4]], -1, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_lin_le_reif([-1, 1], [Begins[3], Begins[4]], -1, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_lin_le_reif([1, -1], [Begins[1], Begins[2]], -4, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_lin_le_reif([1, -1], [Begins[1], Begins[3]], -4, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lin_le_reif([1, -1], [Begins[1], Begins[4]], -4, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_lin_le_reif([1, -1], [Begins[2], Begins[3]], -1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_lin_le_reif([1, -1], [Begins[2], Begins[4]], -1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_lin_le_reif([1, -1], [Begins[3], Begins[4]], -2, BOOL____00011) :: defines_var(BOOL____00011);
solve satisfy;
