array [1..14] of int: arcs = [1, 2, 1, 3, 2, 3, 3, 4, 3, 5, 4, 5, 5, 6];
array [1..7] of int: dur = [9, 6, 0, 7, 8, 10, 12];
array [1..6] of int: nodes = [1, 2, 3, 4, 5, 6];
var int: INT____00001 :: is_defined_var :: var_is_introduced;
var 52..52: sum_dur :: output_var = 52;
array [1..6] of var int: timex :: output_array([1..6]);
constraint int_le(0, timex[1]);
constraint int_le(0, timex[2]);
constraint int_le(0, timex[3]);
constraint int_le(0, timex[4]);
constraint int_le(0, timex[5]);
constraint int_le(0, timex[6]);
constraint int_le(timex[1], 52);
constraint int_le(timex[2], 52);
constraint int_le(timex[3], 52);
constraint int_le(timex[4], 52);
constraint int_le(timex[5], 52);
constraint int_le(timex[6], 52);
constraint int_lin_eq([-1, -1, 1], [INT____00001, timex[1], timex[6]], 0) :: defines_var(INT____00001);
constraint int_lin_le([1, -1], [timex[1], timex[2]], -9);
constraint int_lin_le([1, -1], [timex[1], timex[3]], -6);
constraint int_lin_le([1, -1], [timex[2], timex[3]], 0);
constraint int_lin_le([1, -1], [timex[3], timex[4]], -7);
constraint int_lin_le([1, -1], [timex[3], timex[5]], -8);
constraint int_lin_le([1, -1], [timex[4], timex[5]], -10);
constraint int_lin_le([1, -1], [timex[5], timex[6]], -12);
solve minimize INT____00001;
