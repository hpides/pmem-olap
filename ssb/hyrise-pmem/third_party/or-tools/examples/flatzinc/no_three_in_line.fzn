predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var 0..22: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..22: tot :: output_var = INT____00001;
array [1..121] of var 0..1: x :: output_array([1..11, 1..11]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121]], 0) :: defines_var(INT____00001);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[12], x[23], x[34], x[45], x[56], x[67], x[78], x[89], x[100], x[111]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[2], x[13], x[24], x[35], x[46], x[57], x[68], x[79], x[90], x[101], x[112]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[3], x[14], x[25], x[36], x[47], x[58], x[69], x[80], x[91], x[102], x[113]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[4], x[15], x[26], x[37], x[48], x[59], x[70], x[81], x[92], x[103], x[114]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[5], x[16], x[27], x[38], x[49], x[60], x[71], x[82], x[93], x[104], x[115]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[6], x[17], x[28], x[39], x[50], x[61], x[72], x[83], x[94], x[105], x[116]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[7], x[18], x[29], x[40], x[51], x[62], x[73], x[84], x[95], x[106], x[117]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[8], x[19], x[30], x[41], x[52], x[63], x[74], x[85], x[96], x[107], x[118]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[9], x[20], x[31], x[42], x[53], x[64], x[75], x[86], x[97], x[108], x[119]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[10], x[21], x[32], x[43], x[54], x[65], x[76], x[87], x[98], x[109], x[120]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[11], x[22], x[33], x[44], x[55], x[66], x[77], x[88], x[99], x[110], x[121]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110]], 2);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121]], 2);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], INT____00001], first_fail, indomain_max, complete) maximize INT____00001;
