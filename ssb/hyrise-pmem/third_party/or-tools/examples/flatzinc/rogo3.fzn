predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..45] of int: problem = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, -1, 0, 2, 0, 0, 2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0];
array [1..304] of int: valid_connections = [1, 2, 1, 10, 2, 1, 2, 3, 2, 11, 3, 2, 3, 4, 3, 12, 4, 3, 4, 5, 4, 13, 5, 4, 5, 6, 5, 14, 6, 5, 6, 7, 6, 15, 7, 6, 7, 8, 7, 16, 8, 7, 8, 9, 8, 17, 9, 8, 9, 18, 10, 1, 10, 11, 10, 19, 11, 2, 11, 10, 11, 12, 11, 20, 12, 3, 12, 11, 12, 13, 12, 21, 13, 4, 13, 12, 13, 14, 13, 22, 14, 5, 14, 13, 14, 15, 14, 23, 15, 6, 15, 14, 15, 16, 15, 24, 16, 7, 16, 15, 16, 17, 16, 25, 17, 8, 17, 16, 17, 18, 17, 26, 18, 9, 18, 17, 18, 27, 19, 10, 19, 20, 19, 28, 20, 11, 20, 19, 20, 21, 20, 29, 21, 12, 21, 20, 21, 22, 21, 30, 22, 13, 22, 21, 22, 23, 22, 31, 23, 14, 23, 22, 23, 24, 23, 32, 24, 15, 24, 23, 24, 25, 24, 33, 25, 16, 25, 24, 25, 26, 25, 34, 26, 17, 26, 25, 26, 27, 26, 35, 27, 18, 27, 26, 27, 36, 28, 19, 28, 29, 28, 37, 29, 20, 29, 28, 29, 30, 29, 38, 30, 21, 30, 29, 30, 31, 30, 39, 31, 22, 31, 30, 31, 32, 31, 40, 32, 23, 32, 31, 32, 33, 32, 41, 33, 24, 33, 32, 33, 34, 33, 42, 34, 25, 34, 33, 34, 35, 34, 43, 35, 26, 35, 34, 35, 36, 35, 44, 36, 27, 36, 35, 36, 45, 37, 28, 37, 38, 38, 29, 38, 37, 38, 39, 39, 30, 39, 38, 39, 40, 40, 31, 40, 39, 40, 41, 41, 32, 41, 40, 41, 42, 42, 33, 42, 41, 42, 43, 43, 34, 43, 42, 43, 44, 44, 35, 44, 43, 44, 45, 45, 36, 45, 44];
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00125 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00129 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00133 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00135 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00137 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00139 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00141 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00143 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00145 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00147 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00149 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00151 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00152 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00153 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00154 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00155 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00156 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00157 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00159 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00160 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00161 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00162 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00163 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00164 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00165 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00166 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00167 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00168 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00169 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00170 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00171 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00172 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00173 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00174 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00175 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00176 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00177 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00178 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00179 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00180 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00181 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00182 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00183 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00184 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00185 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00186 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00187 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00188 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00189 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00190 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00191 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00192 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00002 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00004 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00006 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00008 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00010 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00011 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00012 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00014 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00016 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00018 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00019 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00020 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00022 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00024 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00026 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00027 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00028 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00030 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00032 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00033 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00034 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00035 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00036 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00037 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00038 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00039 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00040 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00041 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00042 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00043 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00044 :: is_defined_var :: var_is_introduced;
var -4..4: INT____00045 :: is_defined_var :: var_is_introduced;
var 0..4: INT____00046 :: is_defined_var :: var_is_introduced;
var -8..8: INT____00047 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00048 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00049 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00050 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00051 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00052 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00053 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00054 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00055 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00056 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00057 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00058 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00059 :: is_defined_var :: var_is_introduced;
var 1..57: INT____00060 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00259 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00260 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00261 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00262 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00263 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00264 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00265 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00266 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00267 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00268 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00269 :: is_defined_var :: var_is_introduced;
var 1..45: INT____00270 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00283 :: is_defined_var :: var_is_introduced;
array [1..12] of var 0..3: points :: output_array([1..12]);
var 0..8: sum_points :: output_var = INT____00283;
array [1..12] of var 1..5: x :: output_array([1..12]);
array [1..12] of var 1..9: y :: output_array([1..12]);
constraint all_different_int([INT____00049, INT____00050, INT____00051, INT____00052, INT____00053, INT____00054, INT____00055, INT____00056, INT____00057, INT____00058, INT____00059, INT____00060]);
constraint array_bool_or([BOOL____00061, BOOL____00062], true);
constraint array_bool_or([BOOL____00063, BOOL____00064], true);
constraint array_bool_or([BOOL____00065, BOOL____00066], true);
constraint array_bool_or([BOOL____00067, BOOL____00068], true);
constraint array_bool_or([BOOL____00069, BOOL____00070], true);
constraint array_bool_or([BOOL____00071, BOOL____00072], true);
constraint array_bool_or([BOOL____00073, BOOL____00074], true);
constraint array_bool_or([BOOL____00075, BOOL____00076], true);
constraint array_bool_or([BOOL____00077, BOOL____00078], true);
constraint array_bool_or([BOOL____00079, BOOL____00080], true);
constraint array_bool_or([BOOL____00081, BOOL____00082], true);
constraint array_bool_or([BOOL____00083, BOOL____00084], true);
constraint array_bool_or([BOOL____00085, BOOL____00086], true);
constraint array_bool_or([BOOL____00087, BOOL____00088], true);
constraint array_bool_or([BOOL____00089, BOOL____00090], true);
constraint array_bool_or([BOOL____00091, BOOL____00092], true);
constraint array_bool_or([BOOL____00093, BOOL____00094], true);
constraint array_bool_or([BOOL____00095, BOOL____00096], true);
constraint array_bool_or([BOOL____00097, BOOL____00098], true);
constraint array_bool_or([BOOL____00099, BOOL____00100], true);
constraint array_bool_or([BOOL____00101, BOOL____00102], true);
constraint array_bool_or([BOOL____00103, BOOL____00104], true);
constraint array_bool_or([BOOL____00105, BOOL____00106], true);
constraint array_bool_or([BOOL____00107, BOOL____00108], true);
constraint array_bool_or([BOOL____00109, BOOL____00110], true);
constraint array_bool_or([BOOL____00111, BOOL____00112], true);
constraint array_bool_or([BOOL____00113, BOOL____00114], true);
constraint array_bool_or([BOOL____00115, BOOL____00116], true);
constraint array_bool_or([BOOL____00117, BOOL____00118], true);
constraint array_bool_or([BOOL____00119, BOOL____00120], true);
constraint array_bool_or([BOOL____00121, BOOL____00122], true);
constraint array_bool_or([BOOL____00123, BOOL____00124], true);
constraint array_bool_or([BOOL____00125, BOOL____00126], true);
constraint array_bool_or([BOOL____00127, BOOL____00128], true);
constraint array_bool_or([BOOL____00129, BOOL____00130], true);
constraint array_bool_or([BOOL____00131, BOOL____00132], true);
constraint array_bool_or([BOOL____00133, BOOL____00134], true);
constraint array_bool_or([BOOL____00135, BOOL____00136], true);
constraint array_bool_or([BOOL____00137, BOOL____00138], true);
constraint array_bool_or([BOOL____00139, BOOL____00140], true);
constraint array_bool_or([BOOL____00141, BOOL____00142], true);
constraint array_bool_or([BOOL____00143, BOOL____00144], true);
constraint array_bool_or([BOOL____00145, BOOL____00146], true);
constraint array_bool_or([BOOL____00147, BOOL____00148], true);
constraint array_bool_or([BOOL____00149, BOOL____00150], true);
constraint array_bool_or([BOOL____00151, BOOL____00152], true);
constraint array_bool_or([BOOL____00153, BOOL____00154], true);
constraint array_bool_or([BOOL____00155, BOOL____00156], true);
constraint array_bool_or([BOOL____00157, BOOL____00158], true);
constraint array_bool_or([BOOL____00159, BOOL____00160], true);
constraint array_bool_or([BOOL____00161, BOOL____00162], true);
constraint array_bool_or([BOOL____00163, BOOL____00164], true);
constraint array_bool_or([BOOL____00165, BOOL____00166], true);
constraint array_bool_or([BOOL____00167, BOOL____00168], true);
constraint array_bool_or([BOOL____00169, BOOL____00170], true);
constraint array_bool_or([BOOL____00171, BOOL____00172], true);
constraint array_bool_or([BOOL____00173, BOOL____00174], true);
constraint array_bool_or([BOOL____00175, BOOL____00176], true);
constraint array_bool_or([BOOL____00177, BOOL____00178], true);
constraint array_bool_or([BOOL____00179, BOOL____00180], true);
constraint array_bool_or([BOOL____00181, BOOL____00182], true);
constraint array_bool_or([BOOL____00183, BOOL____00184], true);
constraint array_bool_or([BOOL____00185, BOOL____00186], true);
constraint array_bool_or([BOOL____00187, BOOL____00188], true);
constraint array_bool_or([BOOL____00189, BOOL____00190], true);
constraint array_bool_or([BOOL____00191, BOOL____00192], true);
constraint array_int_element(INT____00259, problem, points[1]);
constraint array_int_element(INT____00260, problem, points[2]);
constraint array_int_element(INT____00261, problem, points[3]);
constraint array_int_element(INT____00262, problem, points[4]);
constraint array_int_element(INT____00263, problem, points[5]);
constraint array_int_element(INT____00264, problem, points[6]);
constraint array_int_element(INT____00265, problem, points[7]);
constraint array_int_element(INT____00266, problem, points[8]);
constraint array_int_element(INT____00267, problem, points[9]);
constraint array_int_element(INT____00268, problem, points[10]);
constraint array_int_element(INT____00269, problem, points[11]);
constraint array_int_element(INT____00270, problem, points[12]);
constraint int_abs(INT____00001, INT____00002) :: defines_var(INT____00002);
constraint int_abs(INT____00003, INT____00004) :: defines_var(INT____00004);
constraint int_abs(INT____00005, INT____00006) :: defines_var(INT____00006);
constraint int_abs(INT____00007, INT____00008) :: defines_var(INT____00008);
constraint int_abs(INT____00009, INT____00010) :: defines_var(INT____00010);
constraint int_abs(INT____00011, INT____00012) :: defines_var(INT____00012);
constraint int_abs(INT____00013, INT____00014) :: defines_var(INT____00014);
constraint int_abs(INT____00015, INT____00016) :: defines_var(INT____00016);
constraint int_abs(INT____00017, INT____00018) :: defines_var(INT____00018);
constraint int_abs(INT____00019, INT____00020) :: defines_var(INT____00020);
constraint int_abs(INT____00021, INT____00022) :: defines_var(INT____00022);
constraint int_abs(INT____00023, INT____00024) :: defines_var(INT____00024);
constraint int_abs(INT____00025, INT____00026) :: defines_var(INT____00026);
constraint int_abs(INT____00027, INT____00028) :: defines_var(INT____00028);
constraint int_abs(INT____00029, INT____00030) :: defines_var(INT____00030);
constraint int_abs(INT____00031, INT____00032) :: defines_var(INT____00032);
constraint int_abs(INT____00033, INT____00034) :: defines_var(INT____00034);
constraint int_abs(INT____00035, INT____00036) :: defines_var(INT____00036);
constraint int_abs(INT____00037, INT____00038) :: defines_var(INT____00038);
constraint int_abs(INT____00039, INT____00040) :: defines_var(INT____00040);
constraint int_abs(INT____00041, INT____00042) :: defines_var(INT____00042);
constraint int_abs(INT____00043, INT____00044) :: defines_var(INT____00044);
constraint int_abs(INT____00045, INT____00046) :: defines_var(INT____00046);
constraint int_abs(INT____00047, INT____00048) :: defines_var(INT____00048);
constraint int_lin_eq([1, 1], [INT____00002, INT____00004], 1);
constraint int_lin_eq([1, 1], [INT____00006, INT____00008], 1);
constraint int_lin_eq([1, 1], [INT____00010, INT____00012], 1);
constraint int_lin_eq([1, 1], [INT____00014, INT____00016], 1);
constraint int_lin_eq([1, 1], [INT____00018, INT____00020], 1);
constraint int_lin_eq([1, 1], [INT____00022, INT____00024], 1);
constraint int_lin_eq([1, 1], [INT____00026, INT____00028], 1);
constraint int_lin_eq([1, 1], [INT____00030, INT____00032], 1);
constraint int_lin_eq([1, 1], [INT____00034, INT____00036], 1);
constraint int_lin_eq([1, 1], [INT____00038, INT____00040], 1);
constraint int_lin_eq([1, 1], [INT____00042, INT____00044], 1);
constraint int_lin_eq([1, 1], [INT____00046, INT____00048], 1);
constraint int_lin_eq([-1, -1, 1], [INT____00045, x[1], x[12]], 0) :: defines_var(INT____00045);
constraint int_lin_eq([-1, -1, 1], [INT____00047, y[1], y[12]], 0) :: defines_var(INT____00047);
constraint int_lin_eq([-1, 9, 1], [INT____00259, x[1], y[1]], 9) :: defines_var(INT____00259) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00260, x[2], y[2]], 9) :: defines_var(INT____00260) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00261, x[3], y[3]], 9) :: defines_var(INT____00261) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00262, x[4], y[4]], 9) :: defines_var(INT____00262) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00263, x[5], y[5]], 9) :: defines_var(INT____00263) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00264, x[6], y[6]], 9) :: defines_var(INT____00264) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00265, x[7], y[7]], 9) :: defines_var(INT____00265) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00266, x[8], y[8]], 9) :: defines_var(INT____00266) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00267, x[9], y[9]], 9) :: defines_var(INT____00267) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00268, x[10], y[10]], 9) :: defines_var(INT____00268) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00269, x[11], y[11]], 9) :: defines_var(INT____00269) :: domain;
constraint int_lin_eq([-1, 9, 1], [INT____00270, x[12], y[12]], 9) :: defines_var(INT____00270) :: domain;
constraint int_lin_eq([-1, 12, 1], [INT____00049, x[1], y[1]], 12) :: defines_var(INT____00049);
constraint int_lin_eq([-1, 12, 1], [INT____00050, x[2], y[2]], 12) :: defines_var(INT____00050);
constraint int_lin_eq([-1, 12, 1], [INT____00051, x[3], y[3]], 12) :: defines_var(INT____00051);
constraint int_lin_eq([-1, 12, 1], [INT____00052, x[4], y[4]], 12) :: defines_var(INT____00052);
constraint int_lin_eq([-1, 12, 1], [INT____00053, x[5], y[5]], 12) :: defines_var(INT____00053);
constraint int_lin_eq([-1, 12, 1], [INT____00054, x[6], y[6]], 12) :: defines_var(INT____00054);
constraint int_lin_eq([-1, 12, 1], [INT____00055, x[7], y[7]], 12) :: defines_var(INT____00055);
constraint int_lin_eq([-1, 12, 1], [INT____00056, x[8], y[8]], 12) :: defines_var(INT____00056);
constraint int_lin_eq([-1, 12, 1], [INT____00057, x[9], y[9]], 12) :: defines_var(INT____00057);
constraint int_lin_eq([-1, 12, 1], [INT____00058, x[10], y[10]], 12) :: defines_var(INT____00058);
constraint int_lin_eq([-1, 12, 1], [INT____00059, x[11], y[11]], 12) :: defines_var(INT____00059);
constraint int_lin_eq([-1, 12, 1], [INT____00060, x[12], y[12]], 12) :: defines_var(INT____00060);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00283, points[1], points[2], points[3], points[4], points[5], points[6], points[7], points[8], points[9], points[10], points[11], points[12]], 0) :: defines_var(INT____00283);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[2], y[1], y[2]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[3], y[1], y[3]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[4], y[1], y[4]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[5], y[1], y[5]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[6], y[1], y[6]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[7], y[1], y[7]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[8], y[1], y[8]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[9], y[1], y[9]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[10], y[1], y[10]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[11], y[1], y[11]], -1);
constraint int_lin_le([9, -9, 1, -1], [x[1], x[12], y[1], y[12]], -1);
constraint int_plus(INT____00001, x[2], x[1]) :: defines_var(INT____00001);
constraint int_plus(INT____00005, x[3], x[2]) :: defines_var(INT____00005);
constraint int_plus(INT____00009, x[4], x[3]) :: defines_var(INT____00009);
constraint int_plus(INT____00013, x[5], x[4]) :: defines_var(INT____00013);
constraint int_plus(INT____00017, x[6], x[5]) :: defines_var(INT____00017);
constraint int_plus(INT____00021, x[7], x[6]) :: defines_var(INT____00021);
constraint int_plus(INT____00025, x[8], x[7]) :: defines_var(INT____00025);
constraint int_plus(INT____00029, x[9], x[8]) :: defines_var(INT____00029);
constraint int_plus(INT____00033, x[10], x[9]) :: defines_var(INT____00033);
constraint int_plus(INT____00037, x[11], x[10]) :: defines_var(INT____00037);
constraint int_plus(INT____00041, x[12], x[11]) :: defines_var(INT____00041);
constraint int_plus(INT____00003, y[2], y[1]) :: defines_var(INT____00003);
constraint int_plus(INT____00007, y[3], y[2]) :: defines_var(INT____00007);
constraint int_plus(INT____00011, y[4], y[3]) :: defines_var(INT____00011);
constraint int_plus(INT____00015, y[5], y[4]) :: defines_var(INT____00015);
constraint int_plus(INT____00019, y[6], y[5]) :: defines_var(INT____00019);
constraint int_plus(INT____00023, y[7], y[6]) :: defines_var(INT____00023);
constraint int_plus(INT____00027, y[8], y[7]) :: defines_var(INT____00027);
constraint int_plus(INT____00031, y[9], y[8]) :: defines_var(INT____00031);
constraint int_plus(INT____00035, y[10], y[9]) :: defines_var(INT____00035);
constraint int_plus(INT____00039, y[11], y[10]) :: defines_var(INT____00039);
constraint int_plus(INT____00043, y[12], y[11]) :: defines_var(INT____00043);
constraint int_ne(points[1], -1);
constraint int_ne(points[2], -1);
constraint int_ne(points[3], -1);
constraint int_ne(points[4], -1);
constraint int_ne(points[5], -1);
constraint int_ne(points[6], -1);
constraint int_ne(points[7], -1);
constraint int_ne(points[8], -1);
constraint int_ne(points[9], -1);
constraint int_ne(points[10], -1);
constraint int_ne(points[11], -1);
constraint int_ne(points[12], -1);
constraint int_ne_reif(x[1], x[2], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_ne_reif(x[1], x[3], BOOL____00063) :: defines_var(BOOL____00063);
constraint int_ne_reif(x[1], x[4], BOOL____00065) :: defines_var(BOOL____00065);
constraint int_ne_reif(x[1], x[5], BOOL____00067) :: defines_var(BOOL____00067);
constraint int_ne_reif(x[1], x[6], BOOL____00069) :: defines_var(BOOL____00069);
constraint int_ne_reif(x[1], x[7], BOOL____00071) :: defines_var(BOOL____00071);
constraint int_ne_reif(x[1], x[8], BOOL____00073) :: defines_var(BOOL____00073);
constraint int_ne_reif(x[1], x[9], BOOL____00075) :: defines_var(BOOL____00075);
constraint int_ne_reif(x[1], x[10], BOOL____00077) :: defines_var(BOOL____00077);
constraint int_ne_reif(x[1], x[11], BOOL____00079) :: defines_var(BOOL____00079);
constraint int_ne_reif(x[1], x[12], BOOL____00081) :: defines_var(BOOL____00081);
constraint int_ne_reif(x[2], x[3], BOOL____00083) :: defines_var(BOOL____00083);
constraint int_ne_reif(x[2], x[4], BOOL____00085) :: defines_var(BOOL____00085);
constraint int_ne_reif(x[2], x[5], BOOL____00087) :: defines_var(BOOL____00087);
constraint int_ne_reif(x[2], x[6], BOOL____00089) :: defines_var(BOOL____00089);
constraint int_ne_reif(x[2], x[7], BOOL____00091) :: defines_var(BOOL____00091);
constraint int_ne_reif(x[2], x[8], BOOL____00093) :: defines_var(BOOL____00093);
constraint int_ne_reif(x[2], x[9], BOOL____00095) :: defines_var(BOOL____00095);
constraint int_ne_reif(x[2], x[10], BOOL____00097) :: defines_var(BOOL____00097);
constraint int_ne_reif(x[2], x[11], BOOL____00099) :: defines_var(BOOL____00099);
constraint int_ne_reif(x[2], x[12], BOOL____00101) :: defines_var(BOOL____00101);
constraint int_ne_reif(x[3], x[4], BOOL____00103) :: defines_var(BOOL____00103);
constraint int_ne_reif(x[3], x[5], BOOL____00105) :: defines_var(BOOL____00105);
constraint int_ne_reif(x[3], x[6], BOOL____00107) :: defines_var(BOOL____00107);
constraint int_ne_reif(x[3], x[7], BOOL____00109) :: defines_var(BOOL____00109);
constraint int_ne_reif(x[3], x[8], BOOL____00111) :: defines_var(BOOL____00111);
constraint int_ne_reif(x[3], x[9], BOOL____00113) :: defines_var(BOOL____00113);
constraint int_ne_reif(x[3], x[10], BOOL____00115) :: defines_var(BOOL____00115);
constraint int_ne_reif(x[3], x[11], BOOL____00117) :: defines_var(BOOL____00117);
constraint int_ne_reif(x[3], x[12], BOOL____00119) :: defines_var(BOOL____00119);
constraint int_ne_reif(x[4], x[5], BOOL____00121) :: defines_var(BOOL____00121);
constraint int_ne_reif(x[4], x[6], BOOL____00123) :: defines_var(BOOL____00123);
constraint int_ne_reif(x[4], x[7], BOOL____00125) :: defines_var(BOOL____00125);
constraint int_ne_reif(x[4], x[8], BOOL____00127) :: defines_var(BOOL____00127);
constraint int_ne_reif(x[4], x[9], BOOL____00129) :: defines_var(BOOL____00129);
constraint int_ne_reif(x[4], x[10], BOOL____00131) :: defines_var(BOOL____00131);
constraint int_ne_reif(x[4], x[11], BOOL____00133) :: defines_var(BOOL____00133);
constraint int_ne_reif(x[4], x[12], BOOL____00135) :: defines_var(BOOL____00135);
constraint int_ne_reif(x[5], x[6], BOOL____00137) :: defines_var(BOOL____00137);
constraint int_ne_reif(x[5], x[7], BOOL____00139) :: defines_var(BOOL____00139);
constraint int_ne_reif(x[5], x[8], BOOL____00141) :: defines_var(BOOL____00141);
constraint int_ne_reif(x[5], x[9], BOOL____00143) :: defines_var(BOOL____00143);
constraint int_ne_reif(x[5], x[10], BOOL____00145) :: defines_var(BOOL____00145);
constraint int_ne_reif(x[5], x[11], BOOL____00147) :: defines_var(BOOL____00147);
constraint int_ne_reif(x[5], x[12], BOOL____00149) :: defines_var(BOOL____00149);
constraint int_ne_reif(x[6], x[7], BOOL____00151) :: defines_var(BOOL____00151);
constraint int_ne_reif(x[6], x[8], BOOL____00153) :: defines_var(BOOL____00153);
constraint int_ne_reif(x[6], x[9], BOOL____00155) :: defines_var(BOOL____00155);
constraint int_ne_reif(x[6], x[10], BOOL____00157) :: defines_var(BOOL____00157);
constraint int_ne_reif(x[6], x[11], BOOL____00159) :: defines_var(BOOL____00159);
constraint int_ne_reif(x[6], x[12], BOOL____00161) :: defines_var(BOOL____00161);
constraint int_ne_reif(x[7], x[8], BOOL____00163) :: defines_var(BOOL____00163);
constraint int_ne_reif(x[7], x[9], BOOL____00165) :: defines_var(BOOL____00165);
constraint int_ne_reif(x[7], x[10], BOOL____00167) :: defines_var(BOOL____00167);
constraint int_ne_reif(x[7], x[11], BOOL____00169) :: defines_var(BOOL____00169);
constraint int_ne_reif(x[7], x[12], BOOL____00171) :: defines_var(BOOL____00171);
constraint int_ne_reif(x[8], x[9], BOOL____00173) :: defines_var(BOOL____00173);
constraint int_ne_reif(x[8], x[10], BOOL____00175) :: defines_var(BOOL____00175);
constraint int_ne_reif(x[8], x[11], BOOL____00177) :: defines_var(BOOL____00177);
constraint int_ne_reif(x[8], x[12], BOOL____00179) :: defines_var(BOOL____00179);
constraint int_ne_reif(x[9], x[10], BOOL____00181) :: defines_var(BOOL____00181);
constraint int_ne_reif(x[9], x[11], BOOL____00183) :: defines_var(BOOL____00183);
constraint int_ne_reif(x[9], x[12], BOOL____00185) :: defines_var(BOOL____00185);
constraint int_ne_reif(x[10], x[11], BOOL____00187) :: defines_var(BOOL____00187);
constraint int_ne_reif(x[10], x[12], BOOL____00189) :: defines_var(BOOL____00189);
constraint int_ne_reif(x[11], x[12], BOOL____00191) :: defines_var(BOOL____00191);
constraint int_ne_reif(y[1], y[2], BOOL____00062) :: defines_var(BOOL____00062);
constraint int_ne_reif(y[1], y[3], BOOL____00064) :: defines_var(BOOL____00064);
constraint int_ne_reif(y[1], y[4], BOOL____00066) :: defines_var(BOOL____00066);
constraint int_ne_reif(y[1], y[5], BOOL____00068) :: defines_var(BOOL____00068);
constraint int_ne_reif(y[1], y[6], BOOL____00070) :: defines_var(BOOL____00070);
constraint int_ne_reif(y[1], y[7], BOOL____00072) :: defines_var(BOOL____00072);
constraint int_ne_reif(y[1], y[8], BOOL____00074) :: defines_var(BOOL____00074);
constraint int_ne_reif(y[1], y[9], BOOL____00076) :: defines_var(BOOL____00076);
constraint int_ne_reif(y[1], y[10], BOOL____00078) :: defines_var(BOOL____00078);
constraint int_ne_reif(y[1], y[11], BOOL____00080) :: defines_var(BOOL____00080);
constraint int_ne_reif(y[1], y[12], BOOL____00082) :: defines_var(BOOL____00082);
constraint int_ne_reif(y[2], y[3], BOOL____00084) :: defines_var(BOOL____00084);
constraint int_ne_reif(y[2], y[4], BOOL____00086) :: defines_var(BOOL____00086);
constraint int_ne_reif(y[2], y[5], BOOL____00088) :: defines_var(BOOL____00088);
constraint int_ne_reif(y[2], y[6], BOOL____00090) :: defines_var(BOOL____00090);
constraint int_ne_reif(y[2], y[7], BOOL____00092) :: defines_var(BOOL____00092);
constraint int_ne_reif(y[2], y[8], BOOL____00094) :: defines_var(BOOL____00094);
constraint int_ne_reif(y[2], y[9], BOOL____00096) :: defines_var(BOOL____00096);
constraint int_ne_reif(y[2], y[10], BOOL____00098) :: defines_var(BOOL____00098);
constraint int_ne_reif(y[2], y[11], BOOL____00100) :: defines_var(BOOL____00100);
constraint int_ne_reif(y[2], y[12], BOOL____00102) :: defines_var(BOOL____00102);
constraint int_ne_reif(y[3], y[4], BOOL____00104) :: defines_var(BOOL____00104);
constraint int_ne_reif(y[3], y[5], BOOL____00106) :: defines_var(BOOL____00106);
constraint int_ne_reif(y[3], y[6], BOOL____00108) :: defines_var(BOOL____00108);
constraint int_ne_reif(y[3], y[7], BOOL____00110) :: defines_var(BOOL____00110);
constraint int_ne_reif(y[3], y[8], BOOL____00112) :: defines_var(BOOL____00112);
constraint int_ne_reif(y[3], y[9], BOOL____00114) :: defines_var(BOOL____00114);
constraint int_ne_reif(y[3], y[10], BOOL____00116) :: defines_var(BOOL____00116);
constraint int_ne_reif(y[3], y[11], BOOL____00118) :: defines_var(BOOL____00118);
constraint int_ne_reif(y[3], y[12], BOOL____00120) :: defines_var(BOOL____00120);
constraint int_ne_reif(y[4], y[5], BOOL____00122) :: defines_var(BOOL____00122);
constraint int_ne_reif(y[4], y[6], BOOL____00124) :: defines_var(BOOL____00124);
constraint int_ne_reif(y[4], y[7], BOOL____00126) :: defines_var(BOOL____00126);
constraint int_ne_reif(y[4], y[8], BOOL____00128) :: defines_var(BOOL____00128);
constraint int_ne_reif(y[4], y[9], BOOL____00130) :: defines_var(BOOL____00130);
constraint int_ne_reif(y[4], y[10], BOOL____00132) :: defines_var(BOOL____00132);
constraint int_ne_reif(y[4], y[11], BOOL____00134) :: defines_var(BOOL____00134);
constraint int_ne_reif(y[4], y[12], BOOL____00136) :: defines_var(BOOL____00136);
constraint int_ne_reif(y[5], y[6], BOOL____00138) :: defines_var(BOOL____00138);
constraint int_ne_reif(y[5], y[7], BOOL____00140) :: defines_var(BOOL____00140);
constraint int_ne_reif(y[5], y[8], BOOL____00142) :: defines_var(BOOL____00142);
constraint int_ne_reif(y[5], y[9], BOOL____00144) :: defines_var(BOOL____00144);
constraint int_ne_reif(y[5], y[10], BOOL____00146) :: defines_var(BOOL____00146);
constraint int_ne_reif(y[5], y[11], BOOL____00148) :: defines_var(BOOL____00148);
constraint int_ne_reif(y[5], y[12], BOOL____00150) :: defines_var(BOOL____00150);
constraint int_ne_reif(y[6], y[7], BOOL____00152) :: defines_var(BOOL____00152);
constraint int_ne_reif(y[6], y[8], BOOL____00154) :: defines_var(BOOL____00154);
constraint int_ne_reif(y[6], y[9], BOOL____00156) :: defines_var(BOOL____00156);
constraint int_ne_reif(y[6], y[10], BOOL____00158) :: defines_var(BOOL____00158);
constraint int_ne_reif(y[6], y[11], BOOL____00160) :: defines_var(BOOL____00160);
constraint int_ne_reif(y[6], y[12], BOOL____00162) :: defines_var(BOOL____00162);
constraint int_ne_reif(y[7], y[8], BOOL____00164) :: defines_var(BOOL____00164);
constraint int_ne_reif(y[7], y[9], BOOL____00166) :: defines_var(BOOL____00166);
constraint int_ne_reif(y[7], y[10], BOOL____00168) :: defines_var(BOOL____00168);
constraint int_ne_reif(y[7], y[11], BOOL____00170) :: defines_var(BOOL____00170);
constraint int_ne_reif(y[7], y[12], BOOL____00172) :: defines_var(BOOL____00172);
constraint int_ne_reif(y[8], y[9], BOOL____00174) :: defines_var(BOOL____00174);
constraint int_ne_reif(y[8], y[10], BOOL____00176) :: defines_var(BOOL____00176);
constraint int_ne_reif(y[8], y[11], BOOL____00178) :: defines_var(BOOL____00178);
constraint int_ne_reif(y[8], y[12], BOOL____00180) :: defines_var(BOOL____00180);
constraint int_ne_reif(y[9], y[10], BOOL____00182) :: defines_var(BOOL____00182);
constraint int_ne_reif(y[9], y[11], BOOL____00184) :: defines_var(BOOL____00184);
constraint int_ne_reif(y[9], y[12], BOOL____00186) :: defines_var(BOOL____00186);
constraint int_ne_reif(y[10], y[11], BOOL____00188) :: defines_var(BOOL____00188);
constraint int_ne_reif(y[10], y[12], BOOL____00190) :: defines_var(BOOL____00190);
constraint int_ne_reif(y[11], y[12], BOOL____00192) :: defines_var(BOOL____00192);
constraint table_int([INT____00259, INT____00260], valid_connections) :: domain;
constraint table_int([INT____00260, INT____00261], valid_connections) :: domain;
constraint table_int([INT____00261, INT____00262], valid_connections) :: domain;
constraint table_int([INT____00262, INT____00263], valid_connections) :: domain;
constraint table_int([INT____00263, INT____00264], valid_connections) :: domain;
constraint table_int([INT____00264, INT____00265], valid_connections) :: domain;
constraint table_int([INT____00265, INT____00266], valid_connections) :: domain;
constraint table_int([INT____00266, INT____00267], valid_connections) :: domain;
constraint table_int([INT____00267, INT____00268], valid_connections) :: domain;
constraint table_int([INT____00268, INT____00269], valid_connections) :: domain;
constraint table_int([INT____00269, INT____00270], valid_connections) :: domain;
constraint table_int([INT____00270, INT____00259], valid_connections) :: domain;
solve maximize INT____00283;
