var 1..9: A :: output_var;
var 1..9: B :: output_var;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var 1..9: C :: output_var;
var 0..9: D :: output_var;
var 0..9: E :: output_var;
var 1..9: F :: output_var;
var 1..9: G :: output_var;
var 0..9: H :: output_var;
var 0..9: I :: output_var;
var 10..99: INT____00001 :: is_defined_var :: var_is_introduced;
var 10..99: AB :: output_var = INT____00001;
var 1001..9999: INT____00004 :: is_defined_var :: var_is_introduced;
var 1000..9999: INT____00007 :: is_defined_var :: var_is_introduced;
var 11..99: INT____00010 :: is_defined_var :: var_is_introduced;
var 10..99: INT____00013 :: is_defined_var :: var_is_introduced;
var 10..99: INT____00016 :: is_defined_var :: var_is_introduced;
var 1001..9999: INT____00019 :: is_defined_var :: var_is_introduced;
var 1000..9999: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..9: J :: output_var;
var 1..9: K :: output_var;
var 0..9: L :: output_var;
array [1..12] of var 0..9: all = [A, B, C, D, E, F, G, H, I, J, K, L];
var 0..100: y____00002;
var 0..100: y____00005;
var 0..10: y____00008;
var 0..10: y____00011;
var 0..10: y____00014;
var 0..100: y____00017;
var 0..100: y____00020;
constraint array_bool_or([BOOL____00028, BOOL____00027, BOOL____00026, BOOL____00025, BOOL____00024, BOOL____00023], false);
constraint int_eq_reif(16, INT____00001, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(25, INT____00001, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(36, INT____00001, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(49, INT____00001, BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(64, INT____00001, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(81, INT____00001, BOOL____00028) :: defines_var(BOOL____00028);
constraint int_lin_eq([-1, 10, 1], [INT____00001, A, B], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, 10, 1], [INT____00010, C, G], 0) :: defines_var(INT____00010);
constraint int_lin_eq([-1, 10, 1], [INT____00013, F, J], 0) :: defines_var(INT____00013);
constraint int_lin_eq([-1, 10, 1], [INT____00016, K, L], 0) :: defines_var(INT____00016);
constraint int_lin_eq([-1, 1000, 100, 10, 1], [INT____00004, C, D, E, F], 0) :: defines_var(INT____00004);
constraint int_lin_eq([-1, 1000, 100, 10, 1], [INT____00007, G, H, I, J], 0) :: defines_var(INT____00007);
constraint int_lin_eq([-1, 1000, 100, 10, 1], [INT____00019, A, D, H, K], 0) :: defines_var(INT____00019);
constraint int_lin_eq([-1, 1000, 100, 10, 1], [INT____00022, B, E, I, L], 0) :: defines_var(INT____00022);
constraint int_times(y____00002, y____00002, INT____00004);
constraint int_times(y____00005, y____00005, INT____00007);
constraint int_times(y____00008, y____00008, INT____00010);
constraint int_times(y____00011, y____00011, INT____00013);
constraint int_times(y____00014, y____00014, INT____00016);
constraint int_times(y____00017, y____00017, INT____00019);
constraint int_times(y____00020, y____00020, INT____00022);
solve satisfy;
