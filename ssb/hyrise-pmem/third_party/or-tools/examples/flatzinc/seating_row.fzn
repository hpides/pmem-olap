predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
array [1..3] of set of int: couples = [1..2, 3..4, 5..6];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
array [1..6] of var 0..1: gender :: output_array([1..6]);
array [1..6] of var 1..6: x :: output_array([1..6]);
constraint all_different_int(x) :: domain;
constraint array_bool_and([BOOL____00002, BOOL____00003], BOOL____00008) :: defines_var(BOOL____00008);
constraint array_bool_and([BOOL____00004, BOOL____00005], BOOL____00009) :: defines_var(BOOL____00009);
constraint array_bool_and([BOOL____00006, BOOL____00007], BOOL____00010) :: defines_var(BOOL____00010);
constraint array_bool_and([BOOL____00012, BOOL____00002], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_and([BOOL____00013, BOOL____00004], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_and([BOOL____00014, BOOL____00006], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00019, BOOL____00012], BOOL____00022) :: defines_var(BOOL____00022);
constraint array_bool_and([BOOL____00020, BOOL____00013], BOOL____00023) :: defines_var(BOOL____00023);
constraint array_bool_and([BOOL____00021, BOOL____00014], BOOL____00024) :: defines_var(BOOL____00024);
constraint array_bool_and([BOOL____00026, BOOL____00019], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_and([BOOL____00027, BOOL____00020], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_and([BOOL____00028, BOOL____00021], BOOL____00031) :: defines_var(BOOL____00031);
constraint array_bool_and([BOOL____00033, BOOL____00026], BOOL____00036) :: defines_var(BOOL____00036);
constraint array_bool_and([BOOL____00034, BOOL____00027], BOOL____00037) :: defines_var(BOOL____00037);
constraint array_bool_and([BOOL____00035, BOOL____00028], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_or([BOOL____00001, BOOL____00010, BOOL____00008, BOOL____00009], true);
constraint array_bool_or([BOOL____00011, BOOL____00017, BOOL____00015, BOOL____00016], true);
constraint array_bool_or([BOOL____00018, BOOL____00024, BOOL____00022, BOOL____00023], true);
constraint array_bool_or([BOOL____00025, BOOL____00031, BOOL____00029, BOOL____00030], true);
constraint array_bool_or([BOOL____00032, BOOL____00038, BOOL____00036, BOOL____00037], true);
constraint int_eq_reif(gender[2], gender[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(gender[3], gender[2], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(gender[4], gender[3], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(gender[5], gender[4], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(gender[6], gender[5], BOOL____00032) :: defines_var(BOOL____00032);
constraint int_mod(x[1], 2, gender[1]);
constraint int_mod(x[2], 2, gender[2]);
constraint int_mod(x[3], 2, gender[3]);
constraint int_mod(x[4], 2, gender[4]);
constraint int_mod(x[5], 2, gender[5]);
constraint int_mod(x[6], 2, gender[6]);
constraint set_in_reif(x[1], 1..2, BOOL____00003) :: defines_var(BOOL____00003);
constraint set_in_reif(x[1], 3..4, BOOL____00005) :: defines_var(BOOL____00005);
constraint set_in_reif(x[1], 5..6, BOOL____00007) :: defines_var(BOOL____00007);
constraint set_in_reif(x[2], 1..2, BOOL____00002) :: defines_var(BOOL____00002);
constraint set_in_reif(x[2], 3..4, BOOL____00004) :: defines_var(BOOL____00004);
constraint set_in_reif(x[2], 5..6, BOOL____00006) :: defines_var(BOOL____00006);
constraint set_in_reif(x[3], 1..2, BOOL____00012) :: defines_var(BOOL____00012);
constraint set_in_reif(x[3], 3..4, BOOL____00013) :: defines_var(BOOL____00013);
constraint set_in_reif(x[3], 5..6, BOOL____00014) :: defines_var(BOOL____00014);
constraint set_in_reif(x[4], 1..2, BOOL____00019) :: defines_var(BOOL____00019);
constraint set_in_reif(x[4], 3..4, BOOL____00020) :: defines_var(BOOL____00020);
constraint set_in_reif(x[4], 5..6, BOOL____00021) :: defines_var(BOOL____00021);
constraint set_in_reif(x[5], 1..2, BOOL____00026) :: defines_var(BOOL____00026);
constraint set_in_reif(x[5], 3..4, BOOL____00027) :: defines_var(BOOL____00027);
constraint set_in_reif(x[5], 5..6, BOOL____00028) :: defines_var(BOOL____00028);
constraint set_in_reif(x[6], 1..2, BOOL____00033) :: defines_var(BOOL____00033);
constraint set_in_reif(x[6], 3..4, BOOL____00034) :: defines_var(BOOL____00034);
constraint set_in_reif(x[6], 5..6, BOOL____00035) :: defines_var(BOOL____00035);
solve  :: int_search(x, first_fail, indomain_split, complete) satisfy;
