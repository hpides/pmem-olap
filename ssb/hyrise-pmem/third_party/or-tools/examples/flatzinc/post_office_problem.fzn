array [1..7] of int: Need = [17, 13, 15, 19, 14, 16, 11];
var int: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..7] of var int: x :: output_array([1..7]);
var int: z :: output_var = INT____00001;
constraint int_le(0, x[1]);
constraint int_le(0, x[2]);
constraint int_le(0, x[3]);
constraint int_le(0, x[4]);
constraint int_le(0, x[5]);
constraint int_le(0, x[6]);
constraint int_le(0, x[7]);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7]], 0) :: defines_var(INT____00001);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[1], x[2], x[3], x[4], x[5]], -14);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[1], x[2], x[3], x[4], x[7]], -19);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[1], x[2], x[3], x[6], x[7]], -15);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[1], x[2], x[5], x[6], x[7]], -13);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[1], x[4], x[5], x[6], x[7]], -17);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[2], x[3], x[4], x[5], x[6]], -16);
constraint int_lin_le([-1, -1, -1, -1, -1], [x[3], x[4], x[5], x[6], x[7]], -11);
solve  :: int_search(x, first_fail, indomain, complete) minimize INT____00001;
