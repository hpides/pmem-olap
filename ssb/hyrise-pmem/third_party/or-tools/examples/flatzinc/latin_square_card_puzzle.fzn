predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var 0..3: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00011 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00015 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00019 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00023 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00027 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00029 :: is_defined_var :: var_is_introduced;
var 0..3: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00031 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00032 :: is_defined_var :: var_is_introduced;
array [1..16] of var 0..33: x :: output_array([1..4, 1..4]);
constraint all_different_int([INT____00001, INT____00002, INT____00003, INT____00004]);
constraint all_different_int([INT____00001, INT____00017, INT____00018, INT____00009]);
constraint all_different_int([INT____00001, INT____00019, INT____00020, INT____00012]);
constraint all_different_int([INT____00005, INT____00006, INT____00007, INT____00008]);
constraint all_different_int([INT____00005, INT____00021, INT____00022, INT____00013]);
constraint all_different_int([INT____00005, INT____00023, INT____00024, INT____00016]);
constraint all_different_int([INT____00009, INT____00010, INT____00011, INT____00012]);
constraint all_different_int([INT____00009, INT____00025, INT____00029, INT____00004]);
constraint all_different_int([INT____00012, INT____00026, INT____00030, INT____00004]);
constraint all_different_int([INT____00013, INT____00014, INT____00015, INT____00016]);
constraint all_different_int([INT____00013, INT____00027, INT____00031, INT____00008]);
constraint all_different_int([INT____00016, INT____00028, INT____00032, INT____00008]);
constraint all_different_int([INT____00017, INT____00002, INT____00011, INT____00026]);
constraint all_different_int([INT____00018, INT____00010, INT____00003, INT____00030]);
constraint all_different_int([INT____00019, INT____00002, INT____00010, INT____00025]);
constraint all_different_int([INT____00020, INT____00011, INT____00003, INT____00029]);
constraint all_different_int([INT____00021, INT____00006, INT____00015, INT____00028]);
constraint all_different_int([INT____00022, INT____00014, INT____00007, INT____00032]);
constraint all_different_int([INT____00023, INT____00006, INT____00014, INT____00027]);
constraint all_different_int([INT____00024, INT____00015, INT____00007, INT____00031]);
constraint all_different_int([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]]);
constraint int_div(x[1], 10, INT____00001) :: defines_var(INT____00001);
constraint int_div(x[2], 10, INT____00017) :: defines_var(INT____00017);
constraint int_div(x[3], 10, INT____00018) :: defines_var(INT____00018);
constraint int_div(x[4], 10, INT____00009) :: defines_var(INT____00009);
constraint int_div(x[5], 10, INT____00019) :: defines_var(INT____00019);
constraint int_div(x[6], 10, INT____00002) :: defines_var(INT____00002);
constraint int_div(x[7], 10, INT____00010) :: defines_var(INT____00010);
constraint int_div(x[8], 10, INT____00025) :: defines_var(INT____00025);
constraint int_div(x[9], 10, INT____00020) :: defines_var(INT____00020);
constraint int_div(x[10], 10, INT____00011) :: defines_var(INT____00011);
constraint int_div(x[11], 10, INT____00003) :: defines_var(INT____00003);
constraint int_div(x[12], 10, INT____00029) :: defines_var(INT____00029);
constraint int_div(x[13], 10, INT____00012) :: defines_var(INT____00012);
constraint int_div(x[14], 10, INT____00026) :: defines_var(INT____00026);
constraint int_div(x[15], 10, INT____00030) :: defines_var(INT____00030);
constraint int_div(x[16], 10, INT____00004) :: defines_var(INT____00004);
constraint int_eq(x[1], 0);
constraint int_mod(x[1], 10, INT____00005) :: defines_var(INT____00005);
constraint int_mod(x[2], 10, INT____00021) :: defines_var(INT____00021);
constraint int_mod(x[3], 10, INT____00022) :: defines_var(INT____00022);
constraint int_mod(x[4], 10, INT____00013) :: defines_var(INT____00013);
constraint int_mod(x[5], 10, INT____00023) :: defines_var(INT____00023);
constraint int_mod(x[6], 10, INT____00006) :: defines_var(INT____00006);
constraint int_mod(x[7], 10, INT____00014) :: defines_var(INT____00014);
constraint int_mod(x[8], 10, INT____00027) :: defines_var(INT____00027);
constraint int_mod(x[9], 10, INT____00024) :: defines_var(INT____00024);
constraint int_mod(x[10], 10, INT____00015) :: defines_var(INT____00015);
constraint int_mod(x[11], 10, INT____00007) :: defines_var(INT____00007);
constraint int_mod(x[12], 10, INT____00031) :: defines_var(INT____00031);
constraint int_mod(x[13], 10, INT____00016) :: defines_var(INT____00016);
constraint int_mod(x[14], 10, INT____00028) :: defines_var(INT____00028);
constraint int_mod(x[15], 10, INT____00032) :: defines_var(INT____00032);
constraint int_mod(x[16], 10, INT____00008) :: defines_var(INT____00008);
constraint set_in(x[1], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[2], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[3], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[4], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[5], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[6], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[7], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[8], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[9], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[10], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[11], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[12], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[13], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[14], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[15], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
constraint set_in(x[16], {0, 1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 23, 30, 31, 32, 33});
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], first_fail, indomain_max, complete) satisfy;
