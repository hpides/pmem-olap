predicate all_different_int(array [int] of var int: x);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate fixed_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, int: b);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate sliding_sum(int: low, int: up, int: seq, array [int] of var int: vs);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
predicate var_cumulative(array [int] of var int: s, array [int] of int: d, array [int] of int: r, var int: b);
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
array [1..7] of var 0..5: x :: output_array([1..7]);
constraint array_bool_and([BOOL____00001, BOOL____00002], BOOL____00004) :: defines_var(BOOL____00004);
constraint array_bool_and([BOOL____00001, BOOL____00005], BOOL____00007) :: defines_var(BOOL____00007);
constraint array_bool_and([BOOL____00001, BOOL____00008], BOOL____00010) :: defines_var(BOOL____00010);
constraint array_bool_and([BOOL____00001, BOOL____00011], BOOL____00013) :: defines_var(BOOL____00013);
constraint array_bool_and([BOOL____00001, BOOL____00014], BOOL____00016) :: defines_var(BOOL____00016);
constraint array_bool_and([BOOL____00001, BOOL____00017], BOOL____00019) :: defines_var(BOOL____00019);
constraint array_bool_and([BOOL____00002, BOOL____00005], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_and([BOOL____00002, BOOL____00008], BOOL____00023) :: defines_var(BOOL____00023);
constraint array_bool_and([BOOL____00002, BOOL____00011], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_and([BOOL____00002, BOOL____00014], BOOL____00027) :: defines_var(BOOL____00027);
constraint array_bool_and([BOOL____00002, BOOL____00017], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_and([BOOL____00005, BOOL____00008], BOOL____00031) :: defines_var(BOOL____00031);
constraint array_bool_and([BOOL____00005, BOOL____00011], BOOL____00033) :: defines_var(BOOL____00033);
constraint array_bool_and([BOOL____00005, BOOL____00014], BOOL____00035) :: defines_var(BOOL____00035);
constraint array_bool_and([BOOL____00005, BOOL____00017], BOOL____00037) :: defines_var(BOOL____00037);
constraint array_bool_and([BOOL____00008, BOOL____00011], BOOL____00039) :: defines_var(BOOL____00039);
constraint array_bool_and([BOOL____00008, BOOL____00014], BOOL____00041) :: defines_var(BOOL____00041);
constraint array_bool_and([BOOL____00008, BOOL____00017], BOOL____00043) :: defines_var(BOOL____00043);
constraint array_bool_and([BOOL____00011, BOOL____00014], BOOL____00045) :: defines_var(BOOL____00045);
constraint array_bool_and([BOOL____00011, BOOL____00017], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_and([BOOL____00014, BOOL____00017], BOOL____00049) :: defines_var(BOOL____00049);
constraint bool_le(BOOL____00004, BOOL____00003);
constraint bool_le(BOOL____00007, BOOL____00006);
constraint bool_le(BOOL____00010, BOOL____00009);
constraint bool_le(BOOL____00013, BOOL____00012);
constraint bool_le(BOOL____00016, BOOL____00015);
constraint bool_le(BOOL____00019, BOOL____00018);
constraint bool_le(BOOL____00021, BOOL____00020);
constraint bool_le(BOOL____00023, BOOL____00022);
constraint bool_le(BOOL____00025, BOOL____00024);
constraint bool_le(BOOL____00027, BOOL____00026);
constraint bool_le(BOOL____00029, BOOL____00028);
constraint bool_le(BOOL____00031, BOOL____00030);
constraint bool_le(BOOL____00033, BOOL____00032);
constraint bool_le(BOOL____00035, BOOL____00034);
constraint bool_le(BOOL____00037, BOOL____00036);
constraint bool_le(BOOL____00039, BOOL____00038);
constraint bool_le(BOOL____00041, BOOL____00040);
constraint bool_le(BOOL____00043, BOOL____00042);
constraint bool_le(BOOL____00045, BOOL____00044);
constraint bool_le(BOOL____00047, BOOL____00046);
constraint bool_le(BOOL____00049, BOOL____00048);
constraint int_lt_reif(x[1], x[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_lt_reif(x[1], x[3], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_lt_reif(x[1], x[4], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_lt_reif(x[1], x[5], BOOL____00012) :: defines_var(BOOL____00012);
constraint int_lt_reif(x[1], x[6], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_lt_reif(x[1], x[7], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_lt_reif(x[2], x[3], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_lt_reif(x[2], x[4], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_lt_reif(x[2], x[5], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_lt_reif(x[2], x[6], BOOL____00026) :: defines_var(BOOL____00026);
constraint int_lt_reif(x[2], x[7], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_lt_reif(x[3], x[4], BOOL____00030) :: defines_var(BOOL____00030);
constraint int_lt_reif(x[3], x[5], BOOL____00032) :: defines_var(BOOL____00032);
constraint int_lt_reif(x[3], x[6], BOOL____00034) :: defines_var(BOOL____00034);
constraint int_lt_reif(x[3], x[7], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_lt_reif(x[4], x[5], BOOL____00038) :: defines_var(BOOL____00038);
constraint int_lt_reif(x[4], x[6], BOOL____00040) :: defines_var(BOOL____00040);
constraint int_lt_reif(x[4], x[7], BOOL____00042) :: defines_var(BOOL____00042);
constraint int_lt_reif(x[5], x[6], BOOL____00044) :: defines_var(BOOL____00044);
constraint int_lt_reif(x[5], x[7], BOOL____00046) :: defines_var(BOOL____00046);
constraint int_lt_reif(x[6], x[7], BOOL____00048) :: defines_var(BOOL____00048);
constraint int_ne_reif(x[1], 0, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_ne_reif(x[2], 0, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_ne_reif(x[3], 0, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_ne_reif(x[4], 0, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_ne_reif(x[5], 0, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_ne_reif(x[6], 0, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_ne_reif(x[7], 0, BOOL____00017) :: defines_var(BOOL____00017);
solve  :: int_search(x, first_fail, indomain_min, complete) satisfy;
