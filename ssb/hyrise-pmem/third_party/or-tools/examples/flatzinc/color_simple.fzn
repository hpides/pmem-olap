array [1..18] of int: graph = [3, 1, 3, 6, 3, 4, 6, 4, 6, 1, 1, 5, 1, 4, 4, 5, 4, 2];
var 1..6: numColors :: output_var;
array [1..6] of var 1..6: x :: output_array([1..6]);
constraint int_le(x[1], numColors);
constraint int_le(x[2], numColors);
constraint int_le(x[3], numColors);
constraint int_le(x[4], numColors);
constraint int_le(x[5], numColors);
constraint int_le(x[6], numColors);
constraint int_ne(x[1], x[4]);
constraint int_ne(x[1], x[5]);
constraint int_ne(x[3], x[1]);
constraint int_ne(x[3], x[4]);
constraint int_ne(x[3], x[6]);
constraint int_ne(x[4], x[2]);
constraint int_ne(x[4], x[5]);
constraint int_ne(x[6], x[1]);
constraint int_ne(x[6], x[4]);
solve minimize numColors;
