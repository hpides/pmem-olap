var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
array [1..5] of var 0..1: first_pos____00001;
var 2..2: npairs :: output_var = 2;
array [1..10] of var 1..5: pairs :: output_array([1..5, 1..2]);
constraint array_bool_and([BOOL____00004, BOOL____00005], BOOL____00006) :: defines_var(BOOL____00006);
constraint array_bool_and([BOOL____00009, BOOL____00010], BOOL____00011) :: defines_var(BOOL____00011);
constraint array_bool_and([BOOL____00013, BOOL____00014], BOOL____00015) :: defines_var(BOOL____00015);
constraint array_bool_and([BOOL____00016, BOOL____00012], BOOL____00017) :: defines_var(BOOL____00017);
constraint array_bool_and([BOOL____00019, BOOL____00020], BOOL____00021) :: defines_var(BOOL____00021);
constraint array_bool_and([BOOL____00023, BOOL____00024], BOOL____00025) :: defines_var(BOOL____00025);
constraint array_bool_and([BOOL____00027, BOOL____00028], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_and([BOOL____00033, BOOL____00034], BOOL____00035) :: defines_var(BOOL____00035);
constraint array_bool_and([BOOL____00037, BOOL____00038], BOOL____00039) :: defines_var(BOOL____00039);
constraint array_bool_and([BOOL____00041, BOOL____00042], BOOL____00043) :: defines_var(BOOL____00043);
constraint array_bool_and([BOOL____00045, BOOL____00046], BOOL____00047) :: defines_var(BOOL____00047);
constraint array_bool_and([BOOL____00030, BOOL____00026, BOOL____00022], BOOL____00031) :: defines_var(BOOL____00031);
constraint array_bool_and([BOOL____00048, BOOL____00044, BOOL____00040, BOOL____00036], BOOL____00049) :: defines_var(BOOL____00049);
constraint bool_eq_reif(BOOL____00006, false, BOOL____00007) :: defines_var(BOOL____00007);
constraint bool_eq_reif(BOOL____00011, false, BOOL____00012) :: defines_var(BOOL____00012);
constraint bool_eq_reif(BOOL____00015, false, BOOL____00016) :: defines_var(BOOL____00016);
constraint bool_eq_reif(BOOL____00021, false, BOOL____00022) :: defines_var(BOOL____00022);
constraint bool_eq_reif(BOOL____00025, false, BOOL____00026) :: defines_var(BOOL____00026);
constraint bool_eq_reif(BOOL____00029, false, BOOL____00030) :: defines_var(BOOL____00030);
constraint bool_eq_reif(BOOL____00035, false, BOOL____00036) :: defines_var(BOOL____00036);
constraint bool_eq_reif(BOOL____00039, false, BOOL____00040) :: defines_var(BOOL____00040);
constraint bool_eq_reif(BOOL____00043, false, BOOL____00044) :: defines_var(BOOL____00044);
constraint bool_eq_reif(BOOL____00047, false, BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq(1, pairs[2]);
constraint int_eq(1, pairs[3]);
constraint int_eq(1, pairs[6]);
constraint int_eq(1, pairs[8]);
constraint int_eq(1, pairs[9]);
constraint int_eq(3, pairs[1]);
constraint int_eq(3, pairs[5]);
constraint int_eq(3, pairs[7]);
constraint int_eq(5, pairs[4]);
constraint int_eq(5, pairs[10]);
constraint int_eq_reif(first_pos____00001[1], 1, true);
constraint int_eq_reif(first_pos____00001[2], 1, BOOL____00007);
constraint int_eq_reif(first_pos____00001[3], 1, BOOL____00017);
constraint int_eq_reif(first_pos____00001[4], 1, BOOL____00031);
constraint int_eq_reif(first_pos____00001[5], 1, BOOL____00049);
constraint int_eq_reif(pairs[3], pairs[1], BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(pairs[4], pairs[2], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(pairs[5], pairs[1], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(pairs[5], pairs[3], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(pairs[6], pairs[2], BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(pairs[6], pairs[4], BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(pairs[7], pairs[1], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(pairs[7], pairs[3], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(pairs[7], pairs[5], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(pairs[8], pairs[2], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(pairs[8], pairs[4], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(pairs[8], pairs[6], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(pairs[9], pairs[1], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(pairs[9], pairs[3], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(pairs[9], pairs[5], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(pairs[9], pairs[7], BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(pairs[10], pairs[2], BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(pairs[10], pairs[4], BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(pairs[10], pairs[6], BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(pairs[10], pairs[8], BOOL____00046) :: defines_var(BOOL____00046);
constraint int_lin_eq([-1, -1, -1, -1, -1], [first_pos____00001[1], first_pos____00001[2], first_pos____00001[3], first_pos____00001[4], first_pos____00001[5]], -2);
solve satisfy;
