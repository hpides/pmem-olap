array [1..8] of int: denom = [1, 2, 5, 10, 20, 50, 100, 200];
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var int: INT____00001 :: is_defined_var :: var_is_introduced;
var int: num_coins :: output_var = INT____00001;
array [1..8] of var int: x :: output_array([1..8]);
constraint array_bool_or([BOOL____00002, BOOL____00017, BOOL____00004], true);
constraint array_bool_or([BOOL____00002, BOOL____00024, BOOL____00006], true);
constraint array_bool_or([BOOL____00002, BOOL____00031, BOOL____00008], true);
constraint array_bool_or([BOOL____00002, BOOL____00038, BOOL____00010], true);
constraint array_bool_or([BOOL____00002, BOOL____00045, BOOL____00012], true);
constraint array_bool_or([BOOL____00002, BOOL____00052, BOOL____00014], true);
constraint array_bool_or([BOOL____00002, BOOL____00059, BOOL____00016], true);
constraint array_bool_or([BOOL____00004, BOOL____00003, BOOL____00002], true);
constraint array_bool_or([BOOL____00004, BOOL____00025, BOOL____00006], true);
constraint array_bool_or([BOOL____00004, BOOL____00032, BOOL____00008], true);
constraint array_bool_or([BOOL____00004, BOOL____00039, BOOL____00010], true);
constraint array_bool_or([BOOL____00004, BOOL____00046, BOOL____00012], true);
constraint array_bool_or([BOOL____00004, BOOL____00053, BOOL____00014], true);
constraint array_bool_or([BOOL____00004, BOOL____00060, BOOL____00016], true);
constraint array_bool_or([BOOL____00006, BOOL____00005, BOOL____00002], true);
constraint array_bool_or([BOOL____00006, BOOL____00018, BOOL____00004], true);
constraint array_bool_or([BOOL____00006, BOOL____00033, BOOL____00008], true);
constraint array_bool_or([BOOL____00006, BOOL____00040, BOOL____00010], true);
constraint array_bool_or([BOOL____00006, BOOL____00047, BOOL____00012], true);
constraint array_bool_or([BOOL____00006, BOOL____00054, BOOL____00014], true);
constraint array_bool_or([BOOL____00006, BOOL____00061, BOOL____00016], true);
constraint array_bool_or([BOOL____00008, BOOL____00007, BOOL____00002], true);
constraint array_bool_or([BOOL____00008, BOOL____00019, BOOL____00004], true);
constraint array_bool_or([BOOL____00008, BOOL____00026, BOOL____00006], true);
constraint array_bool_or([BOOL____00008, BOOL____00041, BOOL____00010], true);
constraint array_bool_or([BOOL____00008, BOOL____00048, BOOL____00012], true);
constraint array_bool_or([BOOL____00008, BOOL____00055, BOOL____00014], true);
constraint array_bool_or([BOOL____00008, BOOL____00062, BOOL____00016], true);
constraint array_bool_or([BOOL____00010, BOOL____00009, BOOL____00002], true);
constraint array_bool_or([BOOL____00010, BOOL____00020, BOOL____00004], true);
constraint array_bool_or([BOOL____00010, BOOL____00027, BOOL____00006], true);
constraint array_bool_or([BOOL____00010, BOOL____00034, BOOL____00008], true);
constraint array_bool_or([BOOL____00010, BOOL____00049, BOOL____00012], true);
constraint array_bool_or([BOOL____00010, BOOL____00056, BOOL____00014], true);
constraint array_bool_or([BOOL____00010, BOOL____00063, BOOL____00016], true);
constraint array_bool_or([BOOL____00012, BOOL____00011, BOOL____00002], true);
constraint array_bool_or([BOOL____00012, BOOL____00021, BOOL____00004], true);
constraint array_bool_or([BOOL____00012, BOOL____00028, BOOL____00006], true);
constraint array_bool_or([BOOL____00012, BOOL____00035, BOOL____00008], true);
constraint array_bool_or([BOOL____00012, BOOL____00042, BOOL____00010], true);
constraint array_bool_or([BOOL____00012, BOOL____00057, BOOL____00014], true);
constraint array_bool_or([BOOL____00012, BOOL____00064, BOOL____00016], true);
constraint array_bool_or([BOOL____00014, BOOL____00013, BOOL____00002], true);
constraint array_bool_or([BOOL____00014, BOOL____00022, BOOL____00004], true);
constraint array_bool_or([BOOL____00014, BOOL____00029, BOOL____00006], true);
constraint array_bool_or([BOOL____00014, BOOL____00036, BOOL____00008], true);
constraint array_bool_or([BOOL____00014, BOOL____00043, BOOL____00010], true);
constraint array_bool_or([BOOL____00014, BOOL____00050, BOOL____00012], true);
constraint array_bool_or([BOOL____00014, BOOL____00065, BOOL____00016], true);
constraint array_bool_or([BOOL____00016, BOOL____00015, BOOL____00002], true);
constraint array_bool_or([BOOL____00016, BOOL____00023, BOOL____00004], true);
constraint array_bool_or([BOOL____00016, BOOL____00030, BOOL____00006], true);
constraint array_bool_or([BOOL____00016, BOOL____00037, BOOL____00008], true);
constraint array_bool_or([BOOL____00016, BOOL____00044, BOOL____00010], true);
constraint array_bool_or([BOOL____00016, BOOL____00051, BOOL____00012], true);
constraint array_bool_or([BOOL____00016, BOOL____00058, BOOL____00014], true);
constraint int_eq_reif(x[1], 0, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(x[1], x[2], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(x[1], x[3], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(x[1], x[4], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(x[1], x[5], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(x[1], x[6], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(x[1], x[7], BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(x[1], x[8], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(x[2], 0, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_eq_reif(x[2], x[1], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(x[2], x[3], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(x[2], x[4], BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(x[2], x[5], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(x[2], x[6], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(x[2], x[7], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(x[2], x[8], BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(x[3], 0, BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(x[3], x[1], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(x[3], x[2], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(x[3], x[4], BOOL____00026) :: defines_var(BOOL____00026);
constraint int_eq_reif(x[3], x[5], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(x[3], x[6], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(x[3], x[7], BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(x[3], x[8], BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(x[4], 0, BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(x[4], x[1], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(x[4], x[2], BOOL____00032) :: defines_var(BOOL____00032);
constraint int_eq_reif(x[4], x[3], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(x[4], x[5], BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(x[4], x[6], BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(x[4], x[7], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(x[4], x[8], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(x[5], 0, BOOL____00010) :: defines_var(BOOL____00010);
constraint int_eq_reif(x[5], x[1], BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(x[5], x[2], BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(x[5], x[3], BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(x[5], x[4], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(x[5], x[6], BOOL____00042) :: defines_var(BOOL____00042);
constraint int_eq_reif(x[5], x[7], BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(x[5], x[8], BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(x[6], 0, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(x[6], x[1], BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(x[6], x[2], BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(x[6], x[3], BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(x[6], x[4], BOOL____00048) :: defines_var(BOOL____00048);
constraint int_eq_reif(x[6], x[5], BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(x[6], x[7], BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(x[6], x[8], BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(x[7], 0, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(x[7], x[1], BOOL____00052) :: defines_var(BOOL____00052);
constraint int_eq_reif(x[7], x[2], BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(x[7], x[3], BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(x[7], x[4], BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(x[7], x[5], BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(x[7], x[6], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(x[7], x[8], BOOL____00058) :: defines_var(BOOL____00058);
constraint int_eq_reif(x[8], 0, BOOL____00016) :: defines_var(BOOL____00016);
constraint int_eq_reif(x[8], x[1], BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(x[8], x[2], BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(x[8], x[3], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(x[8], x[4], BOOL____00062) :: defines_var(BOOL____00062);
constraint int_eq_reif(x[8], x[5], BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(x[8], x[6], BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(x[8], x[7], BOOL____00065) :: defines_var(BOOL____00065);
constraint int_le(0, x[1]);
constraint int_le(0, x[2]);
constraint int_le(0, x[3]);
constraint int_le(0, x[4]);
constraint int_le(0, x[5]);
constraint int_le(0, x[6]);
constraint int_le(0, x[7]);
constraint int_le(0, x[8]);
constraint int_le(x[1], 4158);
constraint int_le(x[2], 4158);
constraint int_le(x[3], 4158);
constraint int_le(x[4], 4158);
constraint int_le(x[5], 4158);
constraint int_le(x[6], 4158);
constraint int_le(x[7], 4158);
constraint int_le(x[8], 4158);
constraint int_lin_eq([1, 2, 5, 10, 20, 50, 100, 200], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8]], 4158);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8]], 0) :: defines_var(INT____00001);
solve  :: int_search(x, smallest, indomain_min, complete) minimize INT____00001;
