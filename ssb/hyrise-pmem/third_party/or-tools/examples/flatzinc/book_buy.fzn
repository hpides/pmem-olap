var 1..64: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..64: INT____00003 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..64: INT____00006 :: is_defined_var :: var_is_introduced;
var 1..64: INT____00007 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..64: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..8: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..64: INT____00011 :: is_defined_var :: var_is_introduced;
var 0..1: w :: output_var;
array [1..2] of var 1..8: x :: output_array([1..2]);
array [1..2] of var 1..8: y :: output_array([1..2]);
constraint int_eq(y[2], 1);
constraint int_lin_eq([-1, -1], [INT____00004, w], -1) :: defines_var(INT____00004);
constraint int_lin_eq([1, -1], [x[1], y[1]], 1);
constraint int_lin_eq([1, 1, 1], [INT____00001, INT____00003, INT____00006], 65);
constraint int_lin_eq([1, 1, 1], [INT____00007, INT____00009, INT____00011], 65);
constraint int_times(INT____00002, y[1], INT____00003) :: defines_var(INT____00003);
constraint int_times(INT____00004, y[1], INT____00008) :: defines_var(INT____00008);
constraint int_times(INT____00004, y[2], INT____00005) :: defines_var(INT____00005);
constraint int_times(INT____00005, y[2], INT____00006) :: defines_var(INT____00006);
constraint int_times(INT____00008, y[1], INT____00009) :: defines_var(INT____00009);
constraint int_times(INT____00010, y[2], INT____00011) :: defines_var(INT____00011);
constraint int_times(w, y[1], INT____00002) :: defines_var(INT____00002);
constraint int_times(w, y[2], INT____00010) :: defines_var(INT____00010);
constraint int_times(x[1], x[1], INT____00001) :: defines_var(INT____00001);
constraint int_times(x[2], x[2], INT____00007) :: defines_var(INT____00007);
solve satisfy;
