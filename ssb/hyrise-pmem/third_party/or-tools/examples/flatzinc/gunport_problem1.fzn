var 0..8: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..8] of var 0..1: d;
array [1..16] of var 0..16: rt :: output_array([1..4, 1..4]);
array [1..128] of var 0..1: x;
var 0..8: z :: output_var = INT____00001;
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00001, d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[1], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[2], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[3], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[4], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[5], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[6], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[7], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[8], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[9], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[10], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[11], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[12], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[13], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[14], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[15], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], 0);
constraint int_lin_eq([1, -1, -2, -3, -4, -5, -6, -7, -8], [rt[16], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[1], x[1], x[9], x[17], x[25], x[33], x[41], x[49], x[57], x[65], x[73], x[81], x[89], x[97], x[105], x[113], x[121]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[2], x[2], x[10], x[18], x[26], x[34], x[42], x[50], x[58], x[66], x[74], x[82], x[90], x[98], x[106], x[114], x[122]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[3], x[3], x[11], x[19], x[27], x[35], x[43], x[51], x[59], x[67], x[75], x[83], x[91], x[99], x[107], x[115], x[123]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[4], x[4], x[12], x[20], x[28], x[36], x[44], x[52], x[60], x[68], x[76], x[84], x[92], x[100], x[108], x[116], x[124]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[5], x[5], x[13], x[21], x[29], x[37], x[45], x[53], x[61], x[69], x[77], x[85], x[93], x[101], x[109], x[117], x[125]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[6], x[6], x[14], x[22], x[30], x[38], x[46], x[54], x[62], x[70], x[78], x[86], x[94], x[102], x[110], x[118], x[126]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[7], x[7], x[15], x[23], x[31], x[39], x[47], x[55], x[63], x[71], x[79], x[87], x[95], x[103], x[111], x[119], x[127]], 0);
constraint int_lin_eq([-2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [d[8], x[8], x[16], x[24], x[32], x[40], x[48], x[56], x[64], x[72], x[80], x[88], x[96], x[104], x[112], x[120], x[128]], 0);
constraint int_lin_le([-1, -1, 1], [x[89], x[113], x[121]], 0);
constraint int_lin_le([-1, -1, 1], [x[90], x[114], x[122]], 0);
constraint int_lin_le([-1, -1, 1], [x[91], x[115], x[123]], 0);
constraint int_lin_le([-1, -1, 1], [x[92], x[116], x[124]], 0);
constraint int_lin_le([-1, -1, 1], [x[93], x[117], x[125]], 0);
constraint int_lin_le([-1, -1, 1], [x[94], x[118], x[126]], 0);
constraint int_lin_le([-1, -1, 1], [x[95], x[119], x[127]], 0);
constraint int_lin_le([-1, -1, 1], [x[96], x[120], x[128]], 0);
constraint int_lin_le([-1, 1, -1], [x[17], x[25], x[57]], 0);
constraint int_lin_le([-1, 1, -1], [x[18], x[26], x[58]], 0);
constraint int_lin_le([-1, 1, -1], [x[19], x[27], x[59]], 0);
constraint int_lin_le([-1, 1, -1], [x[20], x[28], x[60]], 0);
constraint int_lin_le([-1, 1, -1], [x[21], x[29], x[61]], 0);
constraint int_lin_le([-1, 1, -1], [x[22], x[30], x[62]], 0);
constraint int_lin_le([-1, 1, -1], [x[23], x[31], x[63]], 0);
constraint int_lin_le([-1, 1, -1], [x[24], x[32], x[64]], 0);
constraint int_lin_le([-1, 1, -1], [x[65], x[97], x[105]], 0);
constraint int_lin_le([-1, 1, -1], [x[66], x[98], x[106]], 0);
constraint int_lin_le([-1, 1, -1], [x[67], x[99], x[107]], 0);
constraint int_lin_le([-1, 1, -1], [x[68], x[100], x[108]], 0);
constraint int_lin_le([-1, 1, -1], [x[69], x[101], x[109]], 0);
constraint int_lin_le([-1, 1, -1], [x[70], x[102], x[110]], 0);
constraint int_lin_le([-1, 1, -1], [x[71], x[103], x[111]], 0);
constraint int_lin_le([-1, 1, -1], [x[72], x[104], x[112]], 0);
constraint int_lin_le([1, -1, -1], [x[1], x[9], x[33]], 0);
constraint int_lin_le([1, -1, -1], [x[2], x[10], x[34]], 0);
constraint int_lin_le([1, -1, -1], [x[3], x[11], x[35]], 0);
constraint int_lin_le([1, -1, -1], [x[4], x[12], x[36]], 0);
constraint int_lin_le([1, -1, -1], [x[5], x[13], x[37]], 0);
constraint int_lin_le([1, -1, -1], [x[6], x[14], x[38]], 0);
constraint int_lin_le([1, -1, -1], [x[7], x[15], x[39]], 0);
constraint int_lin_le([1, -1, -1], [x[8], x[16], x[40]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[25], x[49], x[57], x[89]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[26], x[50], x[58], x[90]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[27], x[51], x[59], x[91]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[28], x[52], x[60], x[92]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[29], x[53], x[61], x[93]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[30], x[54], x[62], x[94]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[31], x[55], x[63], x[95]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[32], x[56], x[64], x[96]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[57], x[81], x[89], x[121]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[58], x[82], x[90], x[122]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[59], x[83], x[91], x[123]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[60], x[84], x[92], x[124]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[61], x[85], x[93], x[125]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[62], x[86], x[94], x[126]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[63], x[87], x[95], x[127]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[64], x[88], x[96], x[128]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[73], x[97], x[105], x[113]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[74], x[98], x[106], x[114]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[75], x[99], x[107], x[115]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[76], x[100], x[108], x[116]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[77], x[101], x[109], x[117]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[78], x[102], x[110], x[118]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[79], x[103], x[111], x[119]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[80], x[104], x[112], x[120]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[81], x[105], x[113], x[121]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[82], x[106], x[114], x[122]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[83], x[107], x[115], x[123]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[84], x[108], x[116], x[124]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[85], x[109], x[117], x[125]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[86], x[110], x[118], x[126]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[87], x[111], x[119], x[127]], 0);
constraint int_lin_le([-1, -1, 1, -1], [x[88], x[112], x[120], x[128]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[1], x[9], x[17], x[41]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[1], x[33], x[41], x[65]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[2], x[10], x[18], x[42]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[2], x[34], x[42], x[66]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[3], x[11], x[19], x[43]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[3], x[35], x[43], x[67]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[4], x[12], x[20], x[44]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[4], x[36], x[44], x[68]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[5], x[13], x[21], x[45]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[5], x[37], x[45], x[69]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[6], x[14], x[22], x[46]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[6], x[38], x[46], x[70]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[7], x[15], x[23], x[47]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[7], x[39], x[47], x[71]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[8], x[16], x[24], x[48]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[8], x[40], x[48], x[72]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[9], x[17], x[25], x[49]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[10], x[18], x[26], x[50]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[11], x[19], x[27], x[51]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[12], x[20], x[28], x[52]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[13], x[21], x[29], x[53]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[14], x[22], x[30], x[54]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[15], x[23], x[31], x[55]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[16], x[24], x[32], x[56]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[33], x[65], x[73], x[97]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[34], x[66], x[74], x[98]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[35], x[67], x[75], x[99]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[36], x[68], x[76], x[100]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[37], x[69], x[77], x[101]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[38], x[70], x[78], x[102]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[39], x[71], x[79], x[103]], 0);
constraint int_lin_le([-1, 1, -1, -1], [x[40], x[72], x[80], x[104]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[9], x[33], x[41], x[49], x[73]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[10], x[34], x[42], x[50], x[74]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[11], x[35], x[43], x[51], x[75]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[12], x[36], x[44], x[52], x[76]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[13], x[37], x[45], x[53], x[77]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[14], x[38], x[46], x[54], x[78]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[15], x[39], x[47], x[55], x[79]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[16], x[40], x[48], x[56], x[80]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[17], x[41], x[49], x[57], x[81]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[18], x[42], x[50], x[58], x[82]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[19], x[43], x[51], x[59], x[83]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[20], x[44], x[52], x[60], x[84]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[21], x[45], x[53], x[61], x[85]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[22], x[46], x[54], x[62], x[86]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[23], x[47], x[55], x[63], x[87]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[24], x[48], x[56], x[64], x[88]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[41], x[65], x[73], x[81], x[105]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[42], x[66], x[74], x[82], x[106]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[43], x[67], x[75], x[83], x[107]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[44], x[68], x[76], x[84], x[108]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[45], x[69], x[77], x[85], x[109]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[46], x[70], x[78], x[86], x[110]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[47], x[71], x[79], x[87], x[111]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[48], x[72], x[80], x[88], x[112]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[49], x[73], x[81], x[89], x[113]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[50], x[74], x[82], x[90], x[114]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[51], x[75], x[83], x[91], x[115]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[52], x[76], x[84], x[92], x[116]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[53], x[77], x[85], x[93], x[117]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[54], x[78], x[86], x[94], x[118]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[55], x[79], x[87], x[95], x[119]], 0);
constraint int_lin_le([-1, -1, 1, -1, -1], [x[56], x[80], x[88], x[96], x[120]], 0);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], 1);
constraint int_lin_le([1, 1, 1, 1, 1, 1, 1, 1], [x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128]], 1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120]], -1);
constraint int_lin_le([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128]], -1);
solve  :: int_search([x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128]], first_fail, indomain, complete) minimize INT____00001;
